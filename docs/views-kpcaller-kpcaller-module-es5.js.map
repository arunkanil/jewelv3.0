{"version":3,"sources":["webpack:///src/app/views/kpcaller/kpcaller.module.ts","webpack:///src/app/views/kpcaller/kpcaller-routing.module.ts","webpack:///src/app/views/kpcaller/caller_list.component.ts","webpack:///src/app/views/kpcaller/customerdetail.component.ts","webpack:///src/app/views/kpcaller/customerdetail.component.html","webpack:///src/app/views/kpcaller/caller_list.component.html"],"names":["KpCallerModule","imports","withComponents","forRoot","declarations","routes","path","children","redirectTo","canActivate","component","data","roles","title","KpCallerRoutingModule","forChild","exports","ButtonsComponent","dataservice","router","loading","btnLoading","orders","columnDefs","rowData","rowSelection","getLists","console","log","filter","url","is_verified","kp_id","localStorage","getItem","MarriageDate_null","getCustomersFilter","valueChanges","subscribe","result","customers","params","gridApi","api","gridColumnApi","columnApi","event","selectedRows","getSelectedRows","navigate","id","state","template","KPCustomerDetailComponent","activatedRouter","fb","from","details","dateConverter","groups","commentForm","group","RemarksText","required","getSingleCustomer","customer","getGroups","resp","value","AddCustomerComment","updateCustomer","alert","commentModal","hide"],"mappings":"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","file":"views-kpcaller-kpcaller-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { ButtonsComponent } from './caller_list.component';\n\n// Dropdowns Component\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n// Buttons Routing\nimport { KpCallerRoutingModule } from './kpcaller-routing.module';\n\n// Angular\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { KPCustomerDetailComponent } from './customerdetail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    KpCallerRoutingModule,\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    ButtonsComponent,\n    KPCustomerDetailComponent\n  ]\n})\nexport class KpCallerModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ButtonsComponent } from './caller_list.component';\nimport { KPCustomerDetailComponent } from './customerdetail.component';\nimport { AuthGuard } from '../login/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    \n    children: [\n      {\n        path: '',\n        redirectTo: 'kpcaller'\n      },\n      {\n        path: 'verification',\n        canActivate: [AuthGuard],\n        component: ButtonsComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Profile'\n        }\n      },\n      {\n        path: 'assigned',\n        canActivate: [AuthGuard],\n        component: ButtonsComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Assigned List'\n        }\n      },\n      {\n        path: 'dnf',\n        canActivate: [AuthGuard],\n        component: ButtonsComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'DNF'\n        }\n      },\n      {\n        path: 'kp_customer_details/:id/:from',\n        canActivate: [AuthGuard],\n        component: KPCustomerDetailComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Customer Details'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class KpCallerRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { DataService } from \"../../data.service\";\nimport { customersColumn } from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: 'caller_list.component.html'\n})\nexport class ButtonsComponent {\n\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private router: Router,\n  ) {\n    this.columnDefs = [...customersColumn];\n    this.rowSelection = \"single\";\n  }\n  \n  loading = true;\n  btnLoading = false;\n  title = \"Verification\";\n  orders: any = {};\n  columnDefs = [];\n  rowData: any = [];\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.getLists();\n    console.log(this.router);\n  }\n  getLists() {\n    this.loading = true;\n    let filter ={};\n    if(this.router.url === \"/kpcaller/verification\") {\n      filter = {\n        is_verified: false,\n      };\n      this.title = \"Verification\";\n    }\n    else if(this.router.url === \"/kpcaller/assigned\") {\n      filter = {\n        kp_id: localStorage.getItem(\"uid\"),\n      };\n      this.title = \"Assigned\";\n    }\n    else {\n      filter = {\n        MarriageDate_null: true,\n      };\n      this.title = \"Date Not Fixed\";\n    }\n    this.dataservice.getCustomersFilter(filter).valueChanges.subscribe((result: any) => {\n      console.log(\"getCustomersFilter\", result.data.customers);\n      this.rowData = result.data.customers;\n    });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    var selectedRows = this.gridApi.getSelectedRows();\n    console.log(selectedRows);\n    this.router.navigate([\"/kpcaller/kp_customer_details\",selectedRows[0].id,this.router.url], {\n      state: { data: selectedRows },\n    });\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { dateConverter } from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: \"customerdetail.component.html\",\n})\nexport class KPCustomerDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n  @ViewChild(\"commentModal\") public commentModal: ModalDirective;\n\n  id: any;\n  from: boolean = false;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverter = dateConverter;\n  groups: any = [];\n  commentForm = this.fb.group({\n    RemarksText: [\"\", Validators.required],\n    // event_date_time: [\"\", Validators.required],\n    is_verified: [false],\n  });\n\n  ngOnInit(): void {\n    this.getLists();\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n      if(params[\"from\"] === \"/kpcaller/verification\"){\n        this.from = true;\n      }\n    });\n    this.dataservice.getSingleCustomer(this.id).valueChanges.subscribe((result: any) => {\n      console.log(\"getSingleCustomer\", result.data.customer);\n      this.details = result.data.customer;\n      this.loading = false;\n    });\n    console.log(this.from);\n  }\n  getLists() {\n    this.loading = true;\n    this.dataservice.getGroups().valueChanges.subscribe((result: any) => {\n      console.log(\"getGroups\", result.data.groups);\n      this.groups = result.data.groups;\n    });\n  }\n  CommentSubmit() {\n    let resp = {};\n    console.log(this.commentForm.value);\n    this.dataservice\n      .AddCustomerComment(this.details.id, this.commentForm.value)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateCustomer) {\n          alert(\"Comment added successfully!\");\n          this.commentModal.hide();\n        } else {\n          alert(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n            <h2>Customer Details</h2>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <table class=\\\"table table-striped\\\">\\n                        <tbody>\\n                            <tr>\\n                                <td>ID</td>\\n                                <td>{{details?.id}}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>Name Of Father</td>\\n                                <td>{{details?.NameOfBride}}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>Name Of Father</td>\\n                                <td>{{details?.NameOfFather}}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>Name Of Mother</td>\\n                                <td>{{ details?.NameOfMother }}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>Marriage Date</td>\\n                                <td>{{ details?.MarriageDate }}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>Marriage Month</td>\\n                                <td>{{ details?.MarriageMonth }}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>Agent</td>\\n                                <td>\\n                                    <span class=\\\"badge badge-warning\\\">{{ details.tele_caller_contact?.Name }}</span>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>House Name</td>\\n                                <td>{{ details.Address?.HouseName }}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>Landmark</td>\\n                                <td>{{ details.Address?.Landmark }}</td>\\n                            </tr>\\n                            <tr>\\n                                <td>Locality</td>\\n                                <td>{{ details.Address?.locality?.Name }}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"card\\\" *ngFor=\\\"let item of details.TelecallerRemarks\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">{{dateConverter(item.CallHistory?.event_date_time)}}</h5>\\n                            <p class=\\\"card-text\\\">{{item.RemarksText}}</p>\\n                            <span\\n                                class=\\\"badge badge-primary\\\">{{item.CallHistory.users_permissions_user?.username}}</span>\\n                        </div>\\n                    </div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"commentModal.show()\\\">\\n                        Add Comment\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        <div bsModal #commentModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n            aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <h4 class=\\\"modal-title\\\">Add Comment</h4>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"commentModal.hide()\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"CommentSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\">Remarks</label>\\n                                <textarea class=\\\"form-control\\\" maxlength=\\\"250\\\" id=\\\"RemarksText\\\" name=\\\"RemarksText\\\"\\n                                    formControlName=\\\"RemarksText\\\" placeholder=\\\"Enter remarks\\\"></textarea>\\n                            </div>\\n                            <!-- <div class=\\\"form-group\\\">\\n                                <label for=\\\"email\\\">Date</label>\\n                                <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"event_date_time\\\"\\n                                    name=\\\"event_date_time\\\" formControlName=\\\"event_date_time\\\" />\\n                            </div> -->\\n                            <div *ngIf=\\\"from\\\" class=\\\"form-group\\\">\\n                                <!-- <input type=\\\"checkbox\\\" class=\\\"form-control\\\" id=\\\"is_verified\\\" name=\\\"is_verified\\\"\\n                                    formControlName=\\\"is_verified\\\" />\\n                                <label for=\\\"is_verified\\\">Verification</label> -->\\n                                <div class=\\\"checkbox\\\">\\n                                    <label>\\n                                        <input type=\\\"checkbox\\\" value=\\\"true\\\" id=\\\"is_verified\\\" name=\\\"is_verified\\\"\\n                                            formControlName=\\\"is_verified\\\">\\n                                        Customer Verified\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"commentModal.hide()\\\">\\n                                Close\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\"\\n                                [disabled]=\\\"btnLoading || !commentForm.valid\\\">\\n                                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                                    aria-hidden=\\\"true\\\"></span>\\n                                Save changes\\n                            </button>\\n                        </form>\\n                    </div>\\n                </div>\\n                <!-- /.modal-content -->\\n            </div>\\n            <!-- /.modal-dialog -->\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>{{title}} List</h2>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n          </ag-grid-angular>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";"]}