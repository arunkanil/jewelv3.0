{"version":3,"sources":["webpack:///src/app/views/kpcaller/kpcaller.module.ts","webpack:///src/app/views/kpcaller/kpcaller-routing.module.ts","webpack:///src/app/views/kpcaller/caller_list.component.ts","webpack:///src/app/views/kpcaller/customerdetail.component.ts","webpack:///src/app/views/kpcaller/customerdetail.component.html","webpack:///src/app/views/kpcaller/caller_list.component.html"],"names":["KpCallerModule","imports","withComponents","forRoot","declarations","routes","path","children","redirectTo","canActivate","component","data","roles","title","KpCallerRoutingModule","forChild","exports","ButtonsComponent","dataservice","router","fb","filterForm","group","year","Date","getFullYear","required","loading","btnLoading","orders","columnDefs","rowData","selectedYear","years","filter","rowSelection","url","is_verified","kp_id","localStorage","getItem","MarriageDate_null","getLists","console","log","max","min","i","push","getCustomersFilter","valueChanges","subscribe","result","customers","params","gridApi","api","gridColumnApi","columnApi","event","selectedRows","getSelectedRows","navigate","id","state","MarriageDate_gte","value","MarriageDate_lte","template","KPCustomerDetailComponent","activatedRouter","from","details","dateConverter","groups","commentForm","RemarksText","getSingleCustomer","customer","getGroups","resp","AddCustomerComment","updateCustomer","alert","commentModal","hide"],"mappings":"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","file":"views-kpcaller-kpcaller-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { ButtonsComponent } from './caller_list.component';\n\n// Dropdowns Component\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// Buttons Routing\nimport { KpCallerRoutingModule } from './kpcaller-routing.module';\n\n// Angular\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { KPCustomerDetailComponent } from './customerdetail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TabsModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    KpCallerRoutingModule,\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    ButtonsComponent,\n    KPCustomerDetailComponent\n  ]\n})\nexport class KpCallerModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ButtonsComponent } from './caller_list.component';\nimport { KPCustomerDetailComponent } from './customerdetail.component';\nimport { AuthGuard } from '../login/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    \n    children: [\n      {\n        path: '',\n        redirectTo: 'kpcaller'\n      },\n      {\n        path: 'verification',\n        canActivate: [AuthGuard],\n        component: ButtonsComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Profile'\n        }\n      },\n      {\n        path: 'assigned',\n        canActivate: [AuthGuard],\n        component: ButtonsComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Assigned List'\n        }\n      },\n      {\n        path: 'dnf',\n        canActivate: [AuthGuard],\n        component: ButtonsComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'DNF'\n        }\n      },\n      {\n        path: 'kp_customer_details/:id/:from',\n        canActivate: [AuthGuard],\n        component: KPCustomerDetailComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Customer Details'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class KpCallerRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\nimport { DataService } from \"../../data.service\";\nimport {\n  customersColumn,\n  DNFcustomersColumn,\n} from \"../../constants/columnMetadata\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  templateUrl: \"caller_list.component.html\",\n})\nexport class ButtonsComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.columnDefs = [...customersColumn];\n    this.rowSelection = \"single\";\n  }\n  \n  filterForm = this.fb.group({\n    year: [new Date().getFullYear(), Validators.required],\n  });\n\n  loading = true;\n  btnLoading = false;\n  title = \"Verification\";\n  orders: any = {};\n  columnDefs = [];\n  rowData: any = [];\n  selectedYear: any = new Date().getFullYear();\n  years: any = [];\n  private gridApi;\n  private gridColumnApi;\n  filter: any ={};\n\n  ngOnInit(): void {\n    this.loading = true;\n    if (this.router.url === \"/kpcaller/verification\") {\n      this.filter = {\n        is_verified: false,\n      };\n      this.title = \"Verification\";\n    } else if (this.router.url === \"/kpcaller/assigned\") {\n      this.filter = {\n        kp_id: localStorage.getItem(\"uid\"),\n      };\n      this.title = \"Assigned\";\n    } else {\n      this.filter = {\n        MarriageDate_null: true,\n      };\n      this.title = \"Date Not Fixed\";\n      this.columnDefs = [...DNFcustomersColumn];\n    }\n    this.getLists(this.filter);\n    console.log(this.router);\n    let max = new Date().getFullYear() + 10;\n    var min = max - 20;\n    for (var i = max; i >= min; i--) {\n      this.years.push({ year: i });\n    }\n    console.log(this.selectedYear);\n  }\n  getLists(filter) {\n    this.dataservice\n      .getCustomersFilter(filter)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getCustomersFilter\", result.data.customers);\n        this.rowData = result.data.customers;\n      });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    var selectedRows = this.gridApi.getSelectedRows();\n    console.log(selectedRows);\n    this.router.navigate(\n      [\"/kpcaller/kp_customer_details\", selectedRows[0].id, this.router.url],\n      {\n        state: { data: selectedRows },\n      }\n    );\n  }\n  filterSubmit(){\n    this.filter = {\n      ...this.filter,\n      MarriageDate_gte : this.filterForm.value.year+\"-01\"+\"-01\",\n      MarriageDate_lte : this.filterForm.value.year+\"-12\"+\"-31\"\n    }\n    console.log(this.filterForm.value,this.filter);\n    this.getLists(this.filter);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { dateConverter } from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: \"customerdetail.component.html\",\n})\nexport class KPCustomerDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n  @ViewChild(\"commentModal\") public commentModal: ModalDirective;\n\n  id: any;\n  from: boolean = false;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverter = dateConverter;\n  groups: any = [];\n  commentForm = this.fb.group({\n    RemarksText: [\"\", Validators.required],\n    // event_date_time: [\"\", Validators.required],\n    is_verified: [false],\n  });\n\n  ngOnInit(): void {\n    this.getLists();\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n      if(params[\"from\"] === \"/kpcaller/verification\"){\n        this.from = true;\n      }\n    });\n    this.dataservice.getSingleCustomer(this.id).valueChanges.subscribe((result: any) => {\n      console.log(\"getSingleCustomer\", result.data.customer);\n      this.details = result.data.customer;\n      this.loading = false;\n    });\n    console.log(this.from);\n  }\n  getLists() {\n    this.loading = true;\n    this.dataservice.getGroups().valueChanges.subscribe((result: any) => {\n      console.log(\"getGroups\", result.data.groups);\n      this.groups = result.data.groups;\n    });\n  }\n  CommentSubmit() {\n    let resp = {};\n    console.log(this.commentForm.value);\n    this.dataservice\n      .AddCustomerComment(this.details.id, this.commentForm.value)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateCustomer) {\n          alert(\"Comment added successfully!\");\n          this.commentModal.hide();\n        } else {\n          alert(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n            <h2>Customer Details</h2>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <table class=\\\"table table-striped\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <td>ID</td>\\n                                    <td>{{details?.id}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Bride</td>\\n                                    <td>{{details?.NameOfBride}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Father</td>\\n                                    <td>{{details?.NameOfFather}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Mother</td>\\n                                    <td>{{ details?.NameOfMother }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Marriage Date</td>\\n                                    <td>{{ details?.MarriageDate }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Marriage Month</td>\\n                                    <td>{{ details?.MarriageMonth }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Contact number 1</td>\\n                                    <td>{{ details?.Contact_Number_1 }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Contact number 2</td>\\n                                    <td>{{ details?.Contact_Number_2 }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Agent</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-warning\\\">{{ details.tele_caller_contact?.Name }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>House Name</td>\\n                                    <td>{{ details.Address?.HouseName }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Landmark</td>\\n                                    <td>{{ details.Address?.Landmark }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Locality</td>\\n                                    <td>{{ details.Address?.locality?.Name }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div style=\\\"display: flex; justify-content: space-between\\\">\\n                            <h4>Field Report</h4>\\n                        </div>\\n                        <table *ngIf=\\\"details.FieldReport\\\" class=\\\"table table-striped\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <td>Financial category</td>\\n                                    <td>{{details.FieldReport?.FinancialBackground}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Quantity of intended purchase</td>\\n                                    <td>{{details.FieldReport?.QtyOfGold}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Suitable set</td>\\n                                    <td>{{details.FieldReport?.PreferredWeddingSet}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether planning to exchange after marriage?</td>\\n                                    <td>{{ details.FieldReport?.PlanningForReplacementAfterWedding }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Quantity of old gold for exchange</td>\\n                                    <td>{{ details.FieldReport?.OldGoldExchangeQty }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>No cost emi needed?</td>\\n                                    <td>{{ details.FieldReport?.NoCostEmiRequired }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>EMI tenure</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-warning\\\">{{ details.FieldReport?.EmiTenure }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Number of repayments</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-primary\\\">{{ details.FieldReport?.EmiIntervals\\n                                            }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Token advance</td>\\n                                    <td>{{ details.FieldReport?.TokenAdvance }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Rate advance</td>\\n                                    <td>{{ details.FieldReport?.RateAdvance }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether approached by other jewelleries?</td>\\n                                    <td>{{ details.FieldReport?.EnquiriesFromOthers }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Advance paid to other jewellery</td>\\n                                    <td>{{ details.FieldReport?.AdvancePaidToOtherJewellery }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether received any fresh leads?</td>\\n                                    <td>{{ details.FieldReport?.NumberOfNewMarriageAddress }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div *ngIf=\\\"!details.FieldReport\\\" class=\\\"card\\\">\\n                        <div class=\\\"card-body text-center\\\">\\n                            No field report found\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"card\\\" *ngFor=\\\"let item of details.TelecallerRemarks\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">{{dateConverter(item.CallHistory?.event_date_time)}}</h5>\\n                            <p class=\\\"card-text\\\">{{item.RemarksText}}</p>\\n                            <span\\n                                class=\\\"badge badge-primary\\\">{{item.CallHistory.users_permissions_user?.username}}</span>\\n                        </div>\\n                    </div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"commentModal.show()\\\">\\n                        Add Comment\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        <div bsModal #commentModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n            aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <h4 class=\\\"modal-title\\\">Add Comment</h4>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"commentModal.hide()\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"CommentSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\">Remarks</label>\\n                                <textarea class=\\\"form-control\\\" maxlength=\\\"250\\\" id=\\\"RemarksText\\\" name=\\\"RemarksText\\\"\\n                                    formControlName=\\\"RemarksText\\\" placeholder=\\\"Enter remarks\\\"></textarea>\\n                            </div>\\n                            <!-- <div class=\\\"form-group\\\">\\n                                <label for=\\\"email\\\">Date</label>\\n                                <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"event_date_time\\\"\\n                                    name=\\\"event_date_time\\\" formControlName=\\\"event_date_time\\\" />\\n                            </div> -->\\n                            <div *ngIf=\\\"from\\\" class=\\\"form-group\\\">\\n                                <!-- <input type=\\\"checkbox\\\" class=\\\"form-control\\\" id=\\\"is_verified\\\" name=\\\"is_verified\\\"\\n                                    formControlName=\\\"is_verified\\\" />\\n                                <label for=\\\"is_verified\\\">Verification</label> -->\\n                                <div class=\\\"checkbox\\\">\\n                                    <label>\\n                                        <input type=\\\"checkbox\\\" value=\\\"true\\\" id=\\\"is_verified\\\" name=\\\"is_verified\\\"\\n                                            formControlName=\\\"is_verified\\\">\\n                                        Customer Verified\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"commentModal.hide()\\\">\\n                                Close\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\"\\n                                [disabled]=\\\"btnLoading || !commentForm.valid\\\">\\n                                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                                    aria-hidden=\\\"true\\\"></span>\\n                                Save changes\\n                            </button>\\n                        </form>\\n                    </div>\\n                </div>\\n                <!-- /.modal-content -->\\n            </div>\\n            <!-- /.modal-dialog -->\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>{{title}} List</h2>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form [formGroup]=\\\"filterForm\\\" class=\\\"form-inline\\\" (ngSubmit)=\\\"filterSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"visually-hidden\\\" for=\\\"year\\\">Year</label>\\n          <select class=\\\"form-control\\\" id=\\\"year\\\" name=\\\"year\\\" formControlName=\\\"year\\\">\\n            <option *ngFor=\\\"let item of years\\\" value=\\\"{{ item.year }}\\\">\\n              {{ item.year }}\\n            </option>\\n          </select>\\n        </div>\\n        <div class=\\\"ml-3 form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Filter</button>\\n        </div>\\n      </form>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <tabset>\\n            <tab heading=\\\"January\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"February\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"March\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"April\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"May\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"June\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"July\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"August\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"September\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"October\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"November\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n            <tab heading=\\\"December\\\">\\n              <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n                [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n              </ag-grid-angular>\\n            </tab>\\n          </tabset>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";"]}