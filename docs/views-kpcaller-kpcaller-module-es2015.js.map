{"version":3,"sources":["./src/app/views/kpcaller/kpcaller.module.ts","./src/app/views/kpcaller/kpcaller-routing.module.ts","./src/app/views/kpcaller/caller_list.component.ts","./src/app/views/kpcaller/customerdetail.component.ts","./src/app/views/kpcaller/customerdetail.component.html","./src/app/views/kpcaller/caller_list.component.html"],"names":[],"mappings":"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","file":"views-kpcaller-kpcaller-module-es2015.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { ButtonsComponent } from './caller_list.component';\n\n// Dropdowns Component\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n// Buttons Routing\nimport { KpCallerRoutingModule } from './kpcaller-routing.module';\n\n// Angular\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { KPCustomerDetailComponent } from './customerdetail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    KpCallerRoutingModule,\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    ButtonsComponent,\n    KPCustomerDetailComponent\n  ]\n})\nexport class KpCallerModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ButtonsComponent } from './caller_list.component';\nimport { KPCustomerDetailComponent } from './customerdetail.component';\nimport { AuthGuard } from '../login/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    \n    children: [\n      {\n        path: '',\n        redirectTo: 'kpcaller'\n      },\n      {\n        path: 'verification',\n        canActivate: [AuthGuard],\n        component: ButtonsComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Profile'\n        }\n      },\n      {\n        path: 'assigned',\n        canActivate: [AuthGuard],\n        component: ButtonsComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Assigned List'\n        }\n      },\n      {\n        path: 'dnf',\n        canActivate: [AuthGuard],\n        component: ButtonsComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'DNF'\n        }\n      },\n      {\n        path: 'kp_customer_details/:id/:from',\n        canActivate: [AuthGuard],\n        component: KPCustomerDetailComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Customer Details'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class KpCallerRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { DataService } from \"../../data.service\";\nimport { customersColumn,DNFcustomersColumn } from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: 'caller_list.component.html'\n})\nexport class ButtonsComponent {\n\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private router: Router,\n  ) {\n    this.columnDefs = [...customersColumn];\n    this.rowSelection = \"single\";\n  }\n  \n  loading = true;\n  btnLoading = false;\n  title = \"Verification\";\n  orders: any = {};\n  columnDefs = [];\n  rowData: any = [];\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.getLists();\n    console.log(this.router);\n  }\n  getLists() {\n    this.loading = true;\n    let filter ={};\n    if(this.router.url === \"/kpcaller/verification\") {\n      filter = {\n        is_verified: false,\n      };\n      this.title = \"Verification\";\n    }\n    else if(this.router.url === \"/kpcaller/assigned\") {\n      filter = {\n        kp_id: localStorage.getItem(\"uid\"),\n      };\n      this.title = \"Assigned\";\n    }\n    else {\n      filter = {\n        MarriageDate_null: true,\n      };\n      this.title = \"Date Not Fixed\";\n      this.columnDefs = [...DNFcustomersColumn];\n    }\n    this.dataservice.getCustomersFilter(filter).valueChanges.subscribe((result: any) => {\n      console.log(\"getCustomersFilter\", result.data.customers);\n      this.rowData = result.data.customers;\n    });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    var selectedRows = this.gridApi.getSelectedRows();\n    console.log(selectedRows);\n    this.router.navigate([\"/kpcaller/kp_customer_details\",selectedRows[0].id,this.router.url], {\n      state: { data: selectedRows },\n    });\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { dateConverter } from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: \"customerdetail.component.html\",\n})\nexport class KPCustomerDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n  @ViewChild(\"commentModal\") public commentModal: ModalDirective;\n\n  id: any;\n  from: boolean = false;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverter = dateConverter;\n  groups: any = [];\n  commentForm = this.fb.group({\n    RemarksText: [\"\", Validators.required],\n    // event_date_time: [\"\", Validators.required],\n    is_verified: [false],\n  });\n\n  ngOnInit(): void {\n    this.getLists();\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n      if(params[\"from\"] === \"/kpcaller/verification\"){\n        this.from = true;\n      }\n    });\n    this.dataservice.getSingleCustomer(this.id).valueChanges.subscribe((result: any) => {\n      console.log(\"getSingleCustomer\", result.data.customer);\n      this.details = result.data.customer;\n      this.loading = false;\n    });\n    console.log(this.from);\n  }\n  getLists() {\n    this.loading = true;\n    this.dataservice.getGroups().valueChanges.subscribe((result: any) => {\n      console.log(\"getGroups\", result.data.groups);\n      this.groups = result.data.groups;\n    });\n  }\n  CommentSubmit() {\n    let resp = {};\n    console.log(this.commentForm.value);\n    this.dataservice\n      .AddCustomerComment(this.details.id, this.commentForm.value)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateCustomer) {\n          alert(\"Comment added successfully!\");\n          this.commentModal.hide();\n        } else {\n          alert(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n            <h2>Customer Details</h2>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <table class=\\\"table table-striped\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <td>ID</td>\\n                                    <td>{{details?.id}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Bride</td>\\n                                    <td>{{details?.NameOfBride}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Father</td>\\n                                    <td>{{details?.NameOfFather}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Mother</td>\\n                                    <td>{{ details?.NameOfMother }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Marriage Date</td>\\n                                    <td>{{ details?.MarriageDate }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Marriage Month</td>\\n                                    <td>{{ details?.MarriageMonth }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Contact number 1</td>\\n                                    <td>{{ details?.Contact_Number_1 }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Contact number 2</td>\\n                                    <td>{{ details?.Contact_Number_2 }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Agent</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-warning\\\">{{ details.tele_caller_contact?.Name }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>House Name</td>\\n                                    <td>{{ details.Address?.HouseName }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Landmark</td>\\n                                    <td>{{ details.Address?.Landmark }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Locality</td>\\n                                    <td>{{ details.Address?.locality?.Name }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div style=\\\"display: flex; justify-content: space-between\\\">\\n                            <h4>Field Report</h4>\\n                        </div>\\n                        <table *ngIf=\\\"details.FieldReport\\\" class=\\\"table table-striped\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <td>Financial category</td>\\n                                    <td>{{details.FieldReport?.FinancialBackground}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Quantity of intended purchase</td>\\n                                    <td>{{details.FieldReport?.QtyOfGold}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Suitable set</td>\\n                                    <td>{{details.FieldReport?.PreferredWeddingSet}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether planning to exchange after marriage?</td>\\n                                    <td>{{ details.FieldReport?.PlanningForReplacementAfterWedding }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Quantity of old gold for exchange</td>\\n                                    <td>{{ details.FieldReport?.OldGoldExchangeQty }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>No cost emi needed?</td>\\n                                    <td>{{ details.FieldReport?.NoCostEmiRequired }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>EMI tenure</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-warning\\\">{{ details.FieldReport?.EmiTenure }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Number of repayments</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-primary\\\">{{ details.FieldReport?.EmiIntervals\\n                                            }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Token advance</td>\\n                                    <td>{{ details.FieldReport?.TokenAdvance }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Rate advance</td>\\n                                    <td>{{ details.FieldReport?.RateAdvance }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether approached by other jewelleries?</td>\\n                                    <td>{{ details.FieldReport?.EnquiriesFromOthers }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Advance paid to other jewellery</td>\\n                                    <td>{{ details.FieldReport?.AdvancePaidToOtherJewellery }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether received any fresh leads?</td>\\n                                    <td>{{ details.FieldReport?.NumberOfNewMarriageAddress }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div *ngIf=\\\"!details.FieldReport\\\" class=\\\"card\\\">\\n                        <div class=\\\"card-body text-center\\\">\\n                            No field report found\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"card\\\" *ngFor=\\\"let item of details.TelecallerRemarks\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">{{dateConverter(item.CallHistory?.event_date_time)}}</h5>\\n                            <p class=\\\"card-text\\\">{{item.RemarksText}}</p>\\n                            <span\\n                                class=\\\"badge badge-primary\\\">{{item.CallHistory.users_permissions_user?.username}}</span>\\n                        </div>\\n                    </div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"commentModal.show()\\\">\\n                        Add Comment\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        <div bsModal #commentModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n            aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <h4 class=\\\"modal-title\\\">Add Comment</h4>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"commentModal.hide()\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"CommentSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\">Remarks</label>\\n                                <textarea class=\\\"form-control\\\" maxlength=\\\"250\\\" id=\\\"RemarksText\\\" name=\\\"RemarksText\\\"\\n                                    formControlName=\\\"RemarksText\\\" placeholder=\\\"Enter remarks\\\"></textarea>\\n                            </div>\\n                            <!-- <div class=\\\"form-group\\\">\\n                                <label for=\\\"email\\\">Date</label>\\n                                <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"event_date_time\\\"\\n                                    name=\\\"event_date_time\\\" formControlName=\\\"event_date_time\\\" />\\n                            </div> -->\\n                            <div *ngIf=\\\"from\\\" class=\\\"form-group\\\">\\n                                <!-- <input type=\\\"checkbox\\\" class=\\\"form-control\\\" id=\\\"is_verified\\\" name=\\\"is_verified\\\"\\n                                    formControlName=\\\"is_verified\\\" />\\n                                <label for=\\\"is_verified\\\">Verification</label> -->\\n                                <div class=\\\"checkbox\\\">\\n                                    <label>\\n                                        <input type=\\\"checkbox\\\" value=\\\"true\\\" id=\\\"is_verified\\\" name=\\\"is_verified\\\"\\n                                            formControlName=\\\"is_verified\\\">\\n                                        Customer Verified\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"commentModal.hide()\\\">\\n                                Close\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\"\\n                                [disabled]=\\\"btnLoading || !commentForm.valid\\\">\\n                                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                                    aria-hidden=\\\"true\\\"></span>\\n                                Save changes\\n                            </button>\\n                        </form>\\n                    </div>\\n                </div>\\n                <!-- /.modal-content -->\\n            </div>\\n            <!-- /.modal-dialog -->\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>{{title}} List</h2>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n          </ag-grid-angular>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";"],"sourceRoot":"webpack:///"}