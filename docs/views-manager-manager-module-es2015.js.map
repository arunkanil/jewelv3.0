{"version":3,"sources":["./src/app/views/manager/manager.module.ts","./src/app/views/manager/enquiries.component.ts","./src/app/views/manager/customerdetail.component.ts","./src/app/views/manager/customers.component.ts","./node_modules/ngx-bootstrap/carousel/fesm2015/ngx-bootstrap-carousel.js","./src/app/views/manager/manager-routing.module.ts","./src/app/views/manager/verified.component.ts","./src/app/views/manager/verified.component.html","./src/app/views/manager/customerdetail.component.html","./src/app/views/manager/customers.component.html","./src/app/views/manager/enquiries.component.html"],"names":[],"mappings":"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jB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA,2BAA2B,8DAAU;AACrC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB,iEAAK;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,qCAAqC,+DAAwB,kBAAkB,+DAAwB,CAAC,oDAAa,GAAG;AACxL,yBAAyB,+DAAwB,EAAE,8DAA8D,qUAAqU,YAAY,+EAA+E,qiCAAqiC;AACtjD,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,gFAAgF,oBAAoB,EAAE,iFAAiF,2BAA2B,EAAE,2EAA2E,wBAAwB,EAAE,iFAAiF,iCAAiC,EAAE,2EAA2E,2BAA2B,EAAE,6EAA6E,4BAA4B,EAAE;AACzpB,QAAQ,wDAAiB;AACzB,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB;AACzB,QAAQ,wDAA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","file":"views-manager-manager-module-es2015.js","sourcesContent":["// Angular\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { NgModule } from '@angular/core';\r\nimport { VerifiedListComponent } from './verified.component';\r\n\r\n// import { TypographyComponent } from './typography.component';\r\n\r\n// Theme Routing\r\nimport { ManagerRoutingModule } from './manager-routing.module';\r\nimport { ManagerCustomerComponent } from './customers.component';\r\nimport { ManagerCustomerDetailComponent } from './customerdetail.component';\r\nimport { EnquiriesComponent } from './enquiries.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ManagerRoutingModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    ModalModule.forRoot(),\r\n    CarouselModule.forRoot(),\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    VerifiedListComponent,\r\n    ManagerCustomerComponent,\r\n    ManagerCustomerDetailComponent,\r\n    EnquiriesComponent\r\n  ]\r\n})\r\nexport class ManagerModule { }\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { customerColumnsWithKpCaller,Months } from \"../../constants/columnMetadata\";\r\n\r\n@Component({\r\n  templateUrl: \"enquiries.component.html\",\r\n})\r\nexport class EnquiriesComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...customerColumnsWithKpCaller];\r\n    this.Months = [...Months];\r\n    this.rowSelection = \"single\";\r\n  }\r\n\r\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\r\n  customerForm = this.fb.group({\r\n    NameOfBride: [\"\", Validators.required],\r\n    NameOfFather: [\"\", Validators.required],\r\n    NameOfMother: [\"\", Validators.required],\r\n    MarriageDate: [\"\", Validators.required],\r\n    Contact_Number_1: [\"\", Validators.required],\r\n    Contact_Number_2: [\"\", Validators.required],\r\n    MarriageMonth: [\"\", Validators.required],\r\n    tele_caller_contact: [\"\", Validators.required],\r\n    HouseName: [\"\", Validators.required],\r\n    Landmark: [\"\", Validators.required],\r\n    locality: [\"\", Validators.required],\r\n  });\r\n  loading = true;\r\n  btnLoading = false;\r\n  orders: any = {};\r\n  columnDefs = [];\r\n  Months;\r\n  rowData: any = [];\r\n  agents: any = [];\r\n  localities: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n\r\n  ngOnInit(): void {\r\n    this.getLists();\r\n  }\r\n  getLists() {\r\n    this.loading = true;\r\n    this.dataservice.getCustomers().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getCustomers\", result.data.customers);\r\n      this.rowData = result.data.customers;\r\n    });\r\n    this.dataservice.getLocalities().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getLocalities\", result.data.localities);\r\n      this.localities = result.data.localities;\r\n    });\r\n    this.dataservice.getAgents().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getAgents\", result.data.teleCallerContacts);\r\n      this.agents = result.data.teleCallerContacts;\r\n    });\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n  onSelectionChanged(event) {\r\n    var selectedRows = this.gridApi.getSelectedRows();\r\n    console.log(selectedRows);\r\n    this.router.navigate([\"/manager/customer_details\",selectedRows[0].id], {\r\n      state: { data: selectedRows },\r\n    });\r\n  }\r\n  FormSubmit() {\r\n    let resp = {};\r\n    console.log(this.customerForm.value);\r\n    this.dataservice.Addcustomer(this.customerForm.value).subscribe((result: any) => {\r\n      resp = result.data;\r\n      console.log(\"response\", result);\r\n      if (result.data.createCustomer) {\r\n        this.toastr.success(\"customer added successfully!\");\r\n        this.getLists();\r\n        this.myModal.hide();\r\n      } else {\r\n        this.toastr.error(\"Failed. Please check the fields!\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { dateConverter } from \"../../constants/columnMetadata\";\r\n\r\n@Component({\r\n  templateUrl: \"customerdetail.component.html\",\r\n})\r\nexport class ManagerCustomerDetailComponent implements OnInit {\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private activatedRouter: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n    ) {}\r\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\r\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\r\n  @ViewChild(\"commentModal\") public commentModal: ModalDirective;\r\n\r\n  id: any;\r\n  loading = true;\r\n  details: any = [];\r\n  btnLoading = false;\r\n  dateConverter = dateConverter;\r\n  users: any = [];\r\n  agentForm = this.fb.group({\r\n    agent: [\"\", Validators.required],\r\n  });\r\n  commentForm = this.fb.group({\r\n    RemarksText: [\"\", Validators.required],\r\n    // event_date_time: [\"\", Validators.required],\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.getLists();\r\n    this.activatedRouter.params.subscribe((params) => {\r\n      this.id = params[\"id\"];\r\n    });\r\n    this.dataservice\r\n      .getSingleCustomer(this.id)\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getSingleCustomer\", result.data.customer);\r\n        this.details = result.data.customer;\r\n        this.loading = false;\r\n      });\r\n  }\r\n  getLists() {\r\n    this.loading = true;\r\n    this.dataservice\r\n      .getUsers(\"FIELD_AGENT\")\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getUsers\", result.data.users);\r\n        this.users = result.data.users;\r\n      });\r\n  }\r\n  FormSubmit() {\r\n    let resp = {};\r\n    console.log(this.agentForm.value);\r\n    this.dataservice\r\n      .SetFieldAgent(this.agentForm.value.agent, this.details.id)\r\n      .subscribe((result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.updateUser) {\r\n          this.toastr.success(\"Field Agent assigned successfully!\");\r\n          this.myModal.hide();\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n        }\r\n      });\r\n  }\r\n  CommentSubmit() {\r\n    let resp = {};\r\n    console.log(this.commentForm.value);\r\n    this.dataservice\r\n      .AddCustomerComment(this.details.id, this.commentForm.value)\r\n      .subscribe((result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.updateCustomer) {\r\n          this.toastr.success(\"Comment added successfully!\");\r\n          this.commentModal.hide();\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n        }\r\n      });\r\n  }\r\n  deleteAgent() {\r\n    let resp = {};\r\n    this.dataservice.DeleteAgent(this.id).subscribe((result: any) => {\r\n      resp = result.data;\r\n      console.log(\"response\", result);\r\n      if (result.data.deleteTeleCallerContact) {\r\n        this.toastr.success(\"Agent deleted successfully!\");\r\n        this.router.navigate([\"/order/order_processing\"]);\r\n        this.deleteModal.hide();\r\n      } else {\r\n        this.toastr.error(\"Failed. Please check again!\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { customerColumnsWithKpCaller,Months } from \"../../constants/columnMetadata\";\r\n\r\n@Component({\r\n  templateUrl: \"customers.component.html\",\r\n})\r\nexport class ManagerCustomerComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n    ) {\r\n    this.columnDefs = [...customerColumnsWithKpCaller];\r\n    this.Months = [...Months];\r\n    this.rowSelection = \"single\";\r\n  }\r\n\r\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\r\n  customerForm = this.fb.group({\r\n    NameOfBride: [\"\", Validators.required],\r\n    NameOfFather: [\"\", Validators.required],\r\n    NameOfMother: [\"\", Validators.required],\r\n    MarriageDate: [\"\", Validators.required],\r\n    Contact_Number_1: [\"\", Validators.required],\r\n    Contact_Number_2: [\"\", Validators.required],\r\n    MarriageMonth: [\"\", Validators.required],\r\n    tele_caller_contact: [\"\", Validators.required],\r\n    HouseName: [\"\", Validators.required],\r\n    Landmark: [\"\", Validators.required],\r\n    locality: [\"\", Validators.required],\r\n  });\r\n  loading = true;\r\n  btnLoading = false;\r\n  orders: any = {};\r\n  columnDefs = [];\r\n  Months;\r\n  rowData: any = [];\r\n  agents: any = [];\r\n  localities: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n\r\n  ngOnInit(): void {\r\n    this.getLists();\r\n  }\r\n  getLists() {\r\n    this.loading = true;\r\n    this.dataservice.getCustomers().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getCustomers\", result.data.customers);\r\n      this.rowData = result.data.customers;\r\n    });\r\n    this.dataservice.getLocalities().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getLocalities\", result.data.localities);\r\n      this.localities = result.data.localities;\r\n    });\r\n    this.dataservice.getAgents().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getAgents\", result.data.teleCallerContacts);\r\n      this.agents = result.data.teleCallerContacts;\r\n    });\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n  onSelectionChanged(event) {\r\n    var selectedRows = this.gridApi.getSelectedRows();\r\n    console.log(selectedRows);\r\n    this.router.navigate([\"/manager/customer_details\",selectedRows[0].id], {\r\n      state: { data: selectedRows },\r\n    });\r\n  }\r\n  FormSubmit() {\r\n    let resp = {};\r\n    console.log(this.customerForm.value);\r\n    this.dataservice.Addcustomer(this.customerForm.value).subscribe((result: any) => {\r\n      resp = result.data;\r\n      console.log(\"response\", result);\r\n      if (result.data.createCustomer) {\r\n        this.toastr.success(\"customer added successfully!\");\r\n        this.getLists();\r\n        this.myModal.hide();\r\n      } else {\r\n        this.toastr.error(\"Failed. Please check the fields!\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable, ɵɵdefineInjectable, EventEmitter, Component, NgZone, Input, Output, HostBinding, NgModule } from '@angular/core';\nimport { LinkedList, isBs3 } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction CarouselComponent_ol_1_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ol_1_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const i_r5 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.selectSlide(i_r5); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const slide_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r4.active === true);\n} }\nfunction CarouselComponent_ol_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ol\", 5);\n    ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_1_li_1_Template, 1, 2, \"li\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.indicatorsSlides());\n} }\nfunction CarouselComponent_a_4_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 11);\n    ɵngcc0.ɵɵtext(1, \"Previous\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction CarouselComponent_a_4_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_4_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.previousSlide(); });\n    ɵngcc0.ɵɵelement(1, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(2, CarouselComponent_a_4_span_2_Template, 2, 0, \"span\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r1.activeSlide === 0 && ctx_r1.noWrap);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isBs4);\n} }\nfunction CarouselComponent_a_5_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_5_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.nextSlide(); });\n    ɵngcc0.ɵɵelement(1, \"span\", 13);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 11);\n    ɵngcc0.ɵɵtext(3, \"Next\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r2.isLast(ctx_r2.activeSlide) && ctx_r2.noWrap);\n} }\nconst _c0 = function (a0) { return { \"display\": a0 }; };\nconst _c1 = [\"*\"];\nclass CarouselConfig {\n    constructor() {\n        /* Default interval of auto changing of slides */\n        this.interval = 5000;\n        /* Is loop of auto changing of slides can be paused */\n        this.noPause = false;\n        /* Is slides can wrap from the last to the first slide */\n        this.noWrap = false;\n        /* Show carousel-indicators */\n        this.showIndicators = true;\n        /* Slides can be paused on focus */\n        this.pauseOnFocus = false;\n        /* If `true` - carousel indicators indicate slides chunks works ONLY if singleSlideOffset = FALSE */\n        this.indicatorsByChunk = false;\n        /* If value more then 1 — carousel works in multilist mode */\n        this.itemsPerSlide = 1;\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\n            of visible elements (itemsPerSlide field) */\n        this.singleSlideOffset = false;\n    }\n}\nCarouselConfig.ɵfac = function CarouselConfig_Factory(t) { return new (t || CarouselConfig)(); };\n/** @nocollapse */ CarouselConfig.ɵprov = ɵɵdefineInjectable({ factory: function CarouselConfig_Factory() { return new CarouselConfig(); }, token: CarouselConfig, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselConfig, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /** @type {?} */\n    CarouselConfig.prototype.interval;\n    /** @type {?} */\n    CarouselConfig.prototype.noPause;\n    /** @type {?} */\n    CarouselConfig.prototype.noWrap;\n    /** @type {?} */\n    CarouselConfig.prototype.showIndicators;\n    /** @type {?} */\n    CarouselConfig.prototype.pauseOnFocus;\n    /** @type {?} */\n    CarouselConfig.prototype.indicatorsByChunk;\n    /** @type {?} */\n    CarouselConfig.prototype.itemsPerSlide;\n    /** @type {?} */\n    CarouselConfig.prototype.singleSlideOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the index of the last element in the array where predicate is true, and -1\n * otherwise.\n * @template T\n * @param {?} array The source array to search in\n * @param {?} predicate find calls predicate once for each element of the array, in descending\n * order, until it finds one where predicate returns true. If such an element is found,\n * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n * @return {?}\n */\nfunction findLastIndex(array, predicate) {\n    /** @type {?} */\n    let l = array.length;\n    while (l--) {\n        if (predicate(array[l], l, array)) {\n            return l;\n        }\n    }\n    return -1;\n}\n/**\n * @template T\n * @param {?} array\n * @param {?} size\n * @return {?}\n */\nfunction chunkByNumber(array, size) {\n    /** @type {?} */\n    const out = [];\n    /** @type {?} */\n    const n = Math.ceil((array.length) / size);\n    /** @type {?} */\n    let i = 0;\n    while (i < n) {\n        /** @type {?} */\n        const chunk = array.splice(0, (i === n - 1) && size < array.length ? array.length : size);\n        out.push(chunk);\n        i++;\n    }\n    return out;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst Direction = {\n    UNKNOWN: 0,\n    NEXT: 1,\n    PREV: 2,\n};\nDirection[Direction.UNKNOWN] = 'UNKNOWN';\nDirection[Direction.NEXT] = 'NEXT';\nDirection[Direction.PREV] = 'PREV';\n/**\n * Base element to create carousel\n */\nclass CarouselComponent {\n    /**\n     * @param {?} config\n     * @param {?} ngZone\n     */\n    constructor(config, ngZone) {\n        this.ngZone = ngZone;\n        /* If `true` - carousel indicators indicate slides chunks\n             works ONLY if singleSlideOffset = FALSE */\n        this.indicatorsByChunk = false;\n        /* If value more then 1 — carousel works in multilist mode */\n        this.itemsPerSlide = 1;\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\n             of visible elements (itemsPerSlide field) */\n        this.singleSlideOffset = false;\n        /**\n         * Turn on/off animation. Animation doesn't work for multilist carousel\n         */\n        this.isAnimated = false;\n        /**\n         * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n         */\n        this.activeSlideChange = new EventEmitter(false);\n        /**\n         * Will be emitted when active slides has been changed in multilist mode\n         */\n        this.slideRangeChange = new EventEmitter();\n        /* Index to start display slides from it */\n        this.startFromIndex = 0;\n        this._slides = new LinkedList();\n        this._currentVisibleSlidesIndex = 0;\n        this.destroyed = false;\n        this.getActive = (/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => slide.active);\n        this.makeSlidesConsistent = (/**\n         * @param {?} slides\n         * @return {?}\n         */\n        (slides) => {\n            slides.forEach((/**\n             * @param {?} slide\n             * @param {?} index\n             * @return {?}\n             */\n            (slide, index) => slide.item.order = index));\n        });\n        Object.assign(this, config);\n    }\n    /**\n     * Index of currently displayed slide(started for 0)\n     * @param {?} index\n     * @return {?}\n     */\n    set activeSlide(index) {\n        if (this.multilist) {\n            return;\n        }\n        if (this._slides.length && index !== this._currentActiveSlide) {\n            this._select(index);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get activeSlide() {\n        return this._currentActiveSlide;\n    }\n    /**\n     * Delay of item cycling in milliseconds. If false, carousel won't cycle\n     * automatically.\n     * @return {?}\n     */\n    get interval() {\n        return this._interval;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set interval(value) {\n        this._interval = value;\n        this.restartTimer();\n    }\n    /**\n     * @return {?}\n     */\n    get slides() {\n        return this._slides.toArray();\n    }\n    /**\n     * @return {?}\n     */\n    get isBs4() {\n        return !isBs3();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this.singleSlideOffset) {\n                this.indicatorsByChunk = false;\n            }\n            if (this.multilist) {\n                this._chunkedSlides = chunkByNumber(this.mapSlidesAndIndexes(), this.itemsPerSlide);\n                this.selectInitialSlides();\n            }\n        }), 0);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed = true;\n    }\n    /**\n     * Adds new slide. If this slide is first in collection - set it as active\n     * and starts auto changing\n     * @param {?} slide\n     * @return {?}\n     */\n    addSlide(slide) {\n        this._slides.add(slide);\n        if (this.multilist && this._slides.length <= this.itemsPerSlide) {\n            slide.active = true;\n        }\n        if (!this.multilist && this.isAnimated) {\n            slide.isAnimated = true;\n        }\n        if (!this.multilist && this._slides.length === 1) {\n            this._currentActiveSlide = undefined;\n            this.activeSlide = 0;\n            this.play();\n        }\n        if (this.multilist && this._slides.length > this.itemsPerSlide) {\n            this.play();\n        }\n    }\n    /**\n     * Removes specified slide. If this slide is active - will roll to another\n     * slide\n     * @param {?} slide\n     * @return {?}\n     */\n    removeSlide(slide) {\n        /** @type {?} */\n        const remIndex = this._slides.indexOf(slide);\n        if (this._currentActiveSlide === remIndex) {\n            // removing of active slide\n            /** @type {?} */\n            let nextSlideIndex = void 0;\n            if (this._slides.length > 1) {\n                // if this slide last - will roll to first slide, if noWrap flag is\n                // FALSE or to previous, if noWrap is TRUE in case, if this slide in\n                // middle of collection, index of next slide is same to removed\n                nextSlideIndex = !this.isLast(remIndex)\n                    ? remIndex\n                    : this.noWrap ? remIndex - 1 : 0;\n            }\n            this._slides.remove(remIndex);\n            // prevents exception with changing some value after checking\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._select(nextSlideIndex);\n            }), 0);\n        }\n        else {\n            this._slides.remove(remIndex);\n            /** @type {?} */\n            const currentSlideIndex = this.getCurrentSlideIndex();\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // after removing, need to actualize index of current active slide\n                this._currentActiveSlide = currentSlideIndex;\n                this.activeSlideChange.emit(this._currentActiveSlide);\n            }), 0);\n        }\n    }\n    /**\n     * @param {?=} force\n     * @return {?}\n     */\n    nextSlideFromInterval(force = false) {\n        this.move(Direction.NEXT, force);\n    }\n    /**\n     * Rolling to next slide\n     * @param {?=} force\n     * @return {?}\n     */\n    nextSlide(force = false) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        this.move(Direction.NEXT, force);\n    }\n    /**\n     * Rolling to previous slide\n     * @param {?=} force\n     * @return {?}\n     */\n    previousSlide(force = false) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        this.move(Direction.PREV, force);\n    }\n    /**\n     * @return {?}\n     */\n    getFirstVisibleIndex() {\n        return this.slides.findIndex(this.getActive);\n    }\n    /**\n     * @return {?}\n     */\n    getLastVisibleIndex() {\n        return findLastIndex(this.slides, this.getActive);\n    }\n    /**\n     * @param {?} direction\n     * @param {?=} force\n     * @return {?}\n     */\n    move(direction, force = false) {\n        /** @type {?} */\n        const firstVisibleIndex = this.getFirstVisibleIndex();\n        /** @type {?} */\n        const lastVisibleIndex = this.getLastVisibleIndex();\n        if (this.noWrap) {\n            if (direction === Direction.NEXT &&\n                this.isLast(lastVisibleIndex) ||\n                direction === Direction.PREV &&\n                    firstVisibleIndex === 0) {\n                return;\n            }\n        }\n        if (!this.multilist) {\n            this.activeSlide = this.findNextSlideIndex(direction, force);\n        }\n        else {\n            this.moveMultilist(direction);\n        }\n    }\n    /**\n     * Swith slides by enter, space and arrows keys\n     * \\@internal\n     * @param {?} event\n     * @return {?}\n     */\n    keydownPress(event) {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n            this.nextSlide();\n            event.preventDefault();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 37 || event.key === 'LeftArrow') {\n            this.previousSlide();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 39 || event.key === 'RightArrow') {\n            this.nextSlide();\n            return;\n        }\n    }\n    /**\n     * Play on mouse leave\n     * \\@internal\n     * @return {?}\n     */\n    onMouseLeave() {\n        if (!this.pauseOnFocus) {\n            this.play();\n        }\n    }\n    /**\n     * Play on mouse up\n     * \\@internal\n     * @return {?}\n     */\n    onMouseUp() {\n        if (!this.pauseOnFocus) {\n            this.play();\n        }\n    }\n    /**\n     * When slides on focus autoplay is stopped(optional)\n     * \\@internal\n     * @return {?}\n     */\n    pauseFocusIn() {\n        if (this.pauseOnFocus) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    }\n    /**\n     * When slides out of focus autoplay is started\n     * \\@internal\n     * @return {?}\n     */\n    pauseFocusOut() {\n        this.play();\n    }\n    /**\n     * Rolling to specified slide\n     * @param {?} index\n     * @return {?}\n     */\n    selectSlide(index) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        if (!this.multilist) {\n            this.activeSlide = this.indicatorsByChunk ? index * this.itemsPerSlide : index;\n        }\n        else {\n            this.selectSlideRange(this.indicatorsByChunk ? index * this.itemsPerSlide : index);\n        }\n    }\n    /**\n     * Starts a auto changing of slides\n     * @return {?}\n     */\n    play() {\n        if (!this.isPlaying) {\n            this.isPlaying = true;\n            this.restartTimer();\n        }\n    }\n    /**\n     * Stops a auto changing of slides\n     * @return {?}\n     */\n    pause() {\n        if (!this.noPause) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    }\n    /**\n     * Finds and returns index of currently displayed slide\n     * @return {?}\n     */\n    getCurrentSlideIndex() {\n        return this._slides.findIndex(this.getActive);\n    }\n    /**\n     * Defines, whether the specified index is last in collection\n     * @param {?} index\n     * @return {?}\n     */\n    isLast(index) {\n        return index + 1 >= this._slides.length;\n    }\n    /**\n     * Defines, whether the specified index is first in collection\n     * @param {?} index\n     * @return {?}\n     */\n    isFirst(index) {\n        return index === 0;\n    }\n    /**\n     * @return {?}\n     */\n    indicatorsSlides() {\n        return this.slides.filter((/**\n         * @param {?} slide\n         * @param {?} index\n         * @return {?}\n         */\n        (slide, index) => !this.indicatorsByChunk || index % this.itemsPerSlide === 0));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    selectInitialSlides() {\n        /** @type {?} */\n        const startIndex = this.startFromIndex <= this._slides.length\n            ? this.startFromIndex\n            : 0;\n        this.hideSlides();\n        if (this.singleSlideOffset) {\n            this._slidesWithIndexes = this.mapSlidesAndIndexes();\n            if (this._slides.length - startIndex < this.itemsPerSlide) {\n                /** @type {?} */\n                const slidesToAppend = this._slidesWithIndexes.slice(0, startIndex);\n                this._slidesWithIndexes = [\n                    ...this._slidesWithIndexes,\n                    ...slidesToAppend\n                ]\n                    .slice(slidesToAppend.length)\n                    .slice(0, this.itemsPerSlide);\n            }\n            else {\n                this._slidesWithIndexes = this._slidesWithIndexes.slice(startIndex, startIndex + this.itemsPerSlide);\n            }\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n        }\n        else {\n            this.selectRangeByNestedIndex(startIndex);\n        }\n        this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n    /**\n     * Defines next slide index, depending of direction\n     * @private\n     * @param {?} direction\n     * @param {?} force\n     * @return {?}\n     */\n    findNextSlideIndex(direction, force) {\n        /** @type {?} */\n        let nextSlideIndex = 0;\n        if (!force &&\n            (this.isLast(this.activeSlide) &&\n                direction !== Direction.PREV &&\n                this.noWrap)) {\n            return undefined;\n        }\n        switch (direction) {\n            case Direction.NEXT:\n                // if this is last slide, not force, looping is disabled\n                // and need to going forward - select current slide, as a next\n                nextSlideIndex = !this.isLast(this._currentActiveSlide)\n                    ? this._currentActiveSlide + 1\n                    : !force && this.noWrap ? this._currentActiveSlide : 0;\n                break;\n            case Direction.PREV:\n                // if this is first slide, not force, looping is disabled\n                // and need to going backward - select current slide, as a next\n                nextSlideIndex =\n                    this._currentActiveSlide > 0\n                        ? this._currentActiveSlide - 1\n                        : !force && this.noWrap\n                            ? this._currentActiveSlide\n                            : this._slides.length - 1;\n                break;\n            default:\n                throw new Error('Unknown direction');\n        }\n        return nextSlideIndex;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    mapSlidesAndIndexes() {\n        return this.slides\n            .slice()\n            .map((/**\n         * @param {?} slide\n         * @param {?} index\n         * @return {?}\n         */\n        (slide, index) => {\n            return {\n                index,\n                item: slide\n            };\n        }));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    selectSlideRange(index) {\n        if (this.isIndexInRange(index)) {\n            return;\n        }\n        this.hideSlides();\n        if (!this.singleSlideOffset) {\n            this.selectRangeByNestedIndex(index);\n        }\n        else {\n            /** @type {?} */\n            const startIndex = this.isIndexOnTheEdges(index)\n                ? index\n                : index - this.itemsPerSlide + 1;\n            /** @type {?} */\n            const endIndex = this.isIndexOnTheEdges(index)\n                ? index + this.itemsPerSlide\n                : index + 1;\n            this._slidesWithIndexes = this.mapSlidesAndIndexes().slice(startIndex, endIndex);\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n        }\n        this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    selectRangeByNestedIndex(index) {\n        /** @type {?} */\n        const selectedRange = this._chunkedSlides\n            .map((/**\n         * @param {?} slidesList\n         * @param {?} i\n         * @return {?}\n         */\n        (slidesList, i) => {\n            return {\n                index: i,\n                list: slidesList\n            };\n        }))\n            .find((/**\n         * @param {?} slidesList\n         * @return {?}\n         */\n        (slidesList) => {\n            return slidesList.list.find((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            slide => slide.index === index)) !== undefined;\n        }));\n        this._currentVisibleSlidesIndex = selectedRange.index;\n        this._chunkedSlides[selectedRange.index].forEach((/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => {\n            slide.item.active = true;\n        }));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    isIndexOnTheEdges(index) {\n        return (index + 1 - this.itemsPerSlide <= 0 ||\n            index + this.itemsPerSlide <= this._slides.length);\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    isIndexInRange(index) {\n        if (this.singleSlideOffset) {\n            /** @type {?} */\n            const visibleIndexes = this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n            return visibleIndexes.indexOf(index) >= 0;\n        }\n        return (index <= this.getLastVisibleIndex() &&\n            index >= this.getFirstVisibleIndex());\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    hideSlides() {\n        this.slides.forEach((/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => slide.active = false));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isVisibleSlideListLast() {\n        return this._currentVisibleSlidesIndex === this._chunkedSlides.length - 1;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isVisibleSlideListFirst() {\n        return this._currentVisibleSlidesIndex === 0;\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    moveSliderByOneItem(direction) {\n        /** @type {?} */\n        let firstVisibleIndex;\n        /** @type {?} */\n        let lastVisibleIndex;\n        /** @type {?} */\n        let indexToHide;\n        /** @type {?} */\n        let indexToShow;\n        if (this.noWrap) {\n            firstVisibleIndex = this.getFirstVisibleIndex();\n            lastVisibleIndex = this.getLastVisibleIndex();\n            indexToHide = direction === Direction.NEXT\n                ? firstVisibleIndex\n                : lastVisibleIndex;\n            indexToShow = direction !== Direction.NEXT\n                ? firstVisibleIndex - 1\n                : !this.isLast(lastVisibleIndex)\n                    ? lastVisibleIndex + 1 : 0;\n            this._slides.get(indexToHide).active = false;\n            this._slides.get(indexToShow).active = true;\n            /** @type {?} */\n            const slidesToReorder = this.mapSlidesAndIndexes().filter((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active));\n            this.makeSlidesConsistent(slidesToReorder);\n            this.slideRangeChange.emit(this.getVisibleIndexes());\n        }\n        else {\n            /** @type {?} */\n            let displayedIndex;\n            firstVisibleIndex = this._slidesWithIndexes[0].index;\n            lastVisibleIndex = this._slidesWithIndexes[this._slidesWithIndexes.length - 1].index;\n            if (direction === Direction.NEXT) {\n                this._slidesWithIndexes.shift();\n                displayedIndex = this.isLast(lastVisibleIndex)\n                    ? 0\n                    : lastVisibleIndex + 1;\n                this._slidesWithIndexes.push({\n                    index: displayedIndex,\n                    item: this._slides.get(displayedIndex)\n                });\n            }\n            else {\n                this._slidesWithIndexes.pop();\n                displayedIndex = this.isFirst(firstVisibleIndex)\n                    ? this._slides.length - 1\n                    : firstVisibleIndex - 1;\n                this._slidesWithIndexes = [{\n                        index: displayedIndex,\n                        item: this._slides.get(displayedIndex)\n                    }, ...this._slidesWithIndexes];\n            }\n            this.hideSlides();\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            slide => slide.item.active = true));\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n            this.slideRangeChange.emit(this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index)));\n        }\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    moveMultilist(direction) {\n        if (this.singleSlideOffset) {\n            this.moveSliderByOneItem(direction);\n        }\n        else {\n            this.hideSlides();\n            if (this.noWrap) {\n                this._currentVisibleSlidesIndex = direction === Direction.NEXT\n                    ? this._currentVisibleSlidesIndex + 1\n                    : this._currentVisibleSlidesIndex - 1;\n            }\n            else {\n                if (direction === Direction.NEXT) {\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListLast()\n                        ? 0\n                        : this._currentVisibleSlidesIndex + 1;\n                }\n                else {\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListFirst()\n                        ? this._chunkedSlides.length - 1\n                        : this._currentVisibleSlidesIndex - 1;\n                }\n            }\n            this._chunkedSlides[this._currentVisibleSlidesIndex].forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n            this.slideRangeChange.emit(this.getVisibleIndexes());\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getVisibleIndexes() {\n        if (!this.singleSlideOffset) {\n            return this._chunkedSlides[this._currentVisibleSlidesIndex]\n                .map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n        }\n        else {\n            return this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n        }\n    }\n    /**\n     * Sets a slide, which specified through index, as active\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _select(index) {\n        if (isNaN(index)) {\n            this.pause();\n            return;\n        }\n        if (!this.multilist) {\n            /** @type {?} */\n            const currentSlide = this._slides.get(this._currentActiveSlide);\n            if (currentSlide) {\n                currentSlide.active = false;\n            }\n        }\n        /** @type {?} */\n        const nextSlide = this._slides.get(index);\n        if (nextSlide) {\n            this._currentActiveSlide = index;\n            nextSlide.active = true;\n            this.activeSlide = index;\n            this.activeSlideChange.emit(index);\n        }\n    }\n    /**\n     * Starts loop of auto changing of slides\n     * @private\n     * @return {?}\n     */\n    restartTimer() {\n        this.resetTimer();\n        /** @type {?} */\n        const interval = +this.interval;\n        if (!isNaN(interval) && interval > 0) {\n            this.currentInterval = this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return setInterval((/**\n                 * @return {?}\n                 */\n                () => {\n                    /** @type {?} */\n                    const nInterval = +this.interval;\n                    this.ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        if (this.isPlaying &&\n                            !isNaN(this.interval) &&\n                            nInterval > 0 &&\n                            this.slides.length) {\n                            this.nextSlideFromInterval();\n                        }\n                        else {\n                            this.pause();\n                        }\n                    }));\n                }), interval);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get multilist() {\n        return this.itemsPerSlide > 1;\n    }\n    /**\n     * Stops loop of auto changing of slides\n     * @private\n     * @return {?}\n     */\n    resetTimer() {\n        if (this.currentInterval) {\n            clearInterval(this.currentInterval);\n            this.currentInterval = void 0;\n        }\n    }\n}\nCarouselComponent.ɵfac = function CarouselComponent_Factory(t) { return new (t || CarouselComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCarouselComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselComponent, selectors: [[\"carousel\"]], inputs: { indicatorsByChunk: \"indicatorsByChunk\", itemsPerSlide: \"itemsPerSlide\", singleSlideOffset: \"singleSlideOffset\", isAnimated: \"isAnimated\", startFromIndex: \"startFromIndex\", activeSlide: \"activeSlide\", interval: \"interval\", noWrap: \"noWrap\", noPause: \"noPause\", showIndicators: \"showIndicators\", pauseOnFocus: \"pauseOnFocus\" }, outputs: { activeSlideChange: \"activeSlideChange\", slideRangeChange: \"slideRangeChange\" }, ngContentSelectors: _c1, decls: 6, vars: 6, consts: [[\"tabindex\", \"0\", 1, \"carousel\", \"slide\", 3, \"mouseenter\", \"mouseleave\", \"mouseup\", \"keydown\", \"focusin\", \"focusout\"], [\"class\", \"carousel-indicators\", 4, \"ngIf\"], [1, \"carousel-inner\", 3, \"ngStyle\"], [\"class\", \"left carousel-control carousel-control-prev\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"right carousel-control carousel-control-next\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"carousel-indicators\"], [3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"left\", \"carousel-control\", \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-prev\", \"carousel-control-prev-icon\"], [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"right\", \"carousel-control\", \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-next\", \"carousel-control-next-icon\"]], template: function CarouselComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function CarouselComponent_Template_div_mouseenter_0_listener() { return ctx.pause(); })(\"mouseleave\", function CarouselComponent_Template_div_mouseleave_0_listener() { return ctx.onMouseLeave(); })(\"mouseup\", function CarouselComponent_Template_div_mouseup_0_listener() { return ctx.onMouseUp(); })(\"keydown\", function CarouselComponent_Template_div_keydown_0_listener($event) { return ctx.keydownPress($event); })(\"focusin\", function CarouselComponent_Template_div_focusin_0_listener() { return ctx.pauseFocusIn(); })(\"focusout\", function CarouselComponent_Template_div_focusout_0_listener() { return ctx.pauseFocusOut(); });\n        ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_1_Template, 2, 1, \"ol\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, CarouselComponent_a_4_Template, 3, 3, \"a\", 3);\n        ɵngcc0.ɵɵtemplate(5, CarouselComponent_a_5_Template, 4, 2, \"a\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showIndicators && ctx.slides.length > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(4, _c0, ctx.multilist ? \"flex\" : \"block\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf], encapsulation: 2 });\n/** @nocollapse */\nCarouselComponent.ctorParameters = () => [\n    { type: CarouselConfig },\n    { type: NgZone }\n];\nCarouselComponent.propDecorators = {\n    noWrap: [{ type: Input }],\n    noPause: [{ type: Input }],\n    showIndicators: [{ type: Input }],\n    pauseOnFocus: [{ type: Input }],\n    indicatorsByChunk: [{ type: Input }],\n    itemsPerSlide: [{ type: Input }],\n    singleSlideOffset: [{ type: Input }],\n    isAnimated: [{ type: Input }],\n    activeSlideChange: [{ type: Output }],\n    slideRangeChange: [{ type: Output }],\n    activeSlide: [{ type: Input }],\n    startFromIndex: [{ type: Input }],\n    interval: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselComponent, [{\n        type: Component,\n        args: [{\n                selector: 'carousel',\n                template: \"<div (mouseenter)=\\\"pause()\\\"\\n     (mouseleave)=\\\"onMouseLeave()\\\"\\n     (mouseup)=\\\"onMouseUp()\\\"\\n     (keydown)=\\\"keydownPress($event)\\\"\\n     (focusin)=\\\"pauseFocusIn()\\\"\\n     (focusout)=\\\"pauseFocusOut()\\\"\\n     class=\\\"carousel slide\\\" tabindex=\\\"0\\\">\\n  <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showIndicators && slides.length > 1\\\">\\n    <li *ngFor=\\\"let slide of indicatorsSlides(); let i = index;\\\"\\n        [class.active]=\\\"slide.active === true\\\"\\n        (click)=\\\"selectSlide(i)\\\">\\n    </li>\\n  </ol>\\n  <div class=\\\"carousel-inner\\\" [ngStyle]=\\\"{'display': multilist ? 'flex' : 'block'}\\\">\\n    <ng-content></ng-content>\\n  </div>\\n  <a class=\\\"left carousel-control carousel-control-prev\\\"\\n     [class.disabled]=\\\"activeSlide === 0 && noWrap\\\"\\n     (click)=\\\"previousSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n      tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-prev carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span *ngIf=\\\"isBs4\\\" class=\\\"sr-only\\\">Previous</span>\\n  </a>\\n  <a class=\\\"right carousel-control carousel-control-next\\\"\\n     [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\"\\n     (click)=\\\"nextSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n     tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-next carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Next</span>\\n  </a>\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: CarouselConfig }, { type: ɵngcc0.NgZone }]; }, { indicatorsByChunk: [{\n            type: Input\n        }], itemsPerSlide: [{\n            type: Input\n        }], singleSlideOffset: [{\n            type: Input\n        }], isAnimated: [{\n            type: Input\n        }], activeSlideChange: [{\n            type: Output\n        }], slideRangeChange: [{\n            type: Output\n        }], startFromIndex: [{\n            type: Input\n        }], activeSlide: [{\n            type: Input\n        }], interval: [{\n            type: Input\n        }], noWrap: [{\n            type: Input\n        }], noPause: [{\n            type: Input\n        }], showIndicators: [{\n            type: Input\n        }], pauseOnFocus: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CarouselComponent.prototype.noWrap;\n    /** @type {?} */\n    CarouselComponent.prototype.noPause;\n    /** @type {?} */\n    CarouselComponent.prototype.showIndicators;\n    /** @type {?} */\n    CarouselComponent.prototype.pauseOnFocus;\n    /** @type {?} */\n    CarouselComponent.prototype.indicatorsByChunk;\n    /** @type {?} */\n    CarouselComponent.prototype.itemsPerSlide;\n    /** @type {?} */\n    CarouselComponent.prototype.singleSlideOffset;\n    /**\n     * Turn on/off animation. Animation doesn't work for multilist carousel\n     * @type {?}\n     */\n    CarouselComponent.prototype.isAnimated;\n    /**\n     * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n     * @type {?}\n     */\n    CarouselComponent.prototype.activeSlideChange;\n    /**\n     * Will be emitted when active slides has been changed in multilist mode\n     * @type {?}\n     */\n    CarouselComponent.prototype.slideRangeChange;\n    /** @type {?} */\n    CarouselComponent.prototype.startFromIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.currentInterval;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._currentActiveSlide;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._interval;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._slides;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._chunkedSlides;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._slidesWithIndexes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._currentVisibleSlidesIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.isPlaying;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.destroyed;\n    /** @type {?} */\n    CarouselComponent.prototype.getActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    CarouselComponent.prototype.makeSlidesConsistent;\n    /**\n     * @type {?}\n     * @private\n     */\n    CarouselComponent.prototype.ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SlideComponent {\n    /**\n     * @param {?} carousel\n     */\n    constructor(carousel) {\n        this.itemWidth = '100%';\n        this.order = 0;\n        /**\n         * Wraps element by appropriate CSS classes\n         */\n        this.addClass = true;\n        this.carousel = carousel;\n    }\n    /**\n     * Fires changes in container collection after adding a new slide instance\n     * @return {?}\n     */\n    ngOnInit() {\n        this.carousel.addSlide(this);\n        this.itemWidth = `${100 / this.carousel.itemsPerSlide}%`;\n    }\n    /**\n     * Fires changes in container collection after removing of this slide instance\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.carousel.removeSlide(this);\n    }\n}\nSlideComponent.ɵfac = function SlideComponent_Factory(t) { return new (t || SlideComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselComponent)); };\nSlideComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SlideComponent, selectors: [[\"slide\"]], hostVars: 13, hostBindings: function SlideComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-hidden\", !ctx.active);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.itemWidth)(\"order\", ctx.order);\n        ɵngcc0.ɵɵclassProp(\"item\", ctx.addClass)(\"carousel-item\", ctx.addClass)(\"active\", ctx.active)(\"carousel-animation\", ctx.isAnimated);\n    } }, inputs: { active: \"active\" }, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[1, \"item\"]], template: function SlideComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"active\", ctx.active);\n    } }, styles: [\".carousel-animation[_nghost-%COMP%] {\\n       transition: opacity 0.6s ease, visibility 0.6s ease;\\n       float: left;\\n    }\\n    .carousel-animation.active[_nghost-%COMP%] {\\n      opacity: 1;\\n      visibility: visible;\\n    }\\n    .carousel-animation[_nghost-%COMP%]:not(.active) {\\n      display: block;\\n      position: absolute;\\n      opacity: 0;\\n      visibility: hidden;\\n    }\"] });\n/** @nocollapse */\nSlideComponent.ctorParameters = () => [\n    { type: CarouselComponent }\n];\nSlideComponent.propDecorators = {\n    active: [{ type: HostBinding, args: ['class.active',] }, { type: Input }],\n    itemWidth: [{ type: HostBinding, args: ['style.width',] }],\n    order: [{ type: HostBinding, args: ['style.order',] }],\n    isAnimated: [{ type: HostBinding, args: ['class.carousel-animation',] }],\n    addClass: [{ type: HostBinding, args: ['class.item',] }, { type: HostBinding, args: ['class.carousel-item',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SlideComponent, [{\n        type: Component,\n        args: [{\n                selector: 'slide',\n                template: `\n    <div [class.active]=\"active\" class=\"item\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                host: {\n                    '[attr.aria-hidden]': '!active'\n                },\n                styles: [`\n    :host.carousel-animation {\n       transition: opacity 0.6s ease, visibility 0.6s ease;\n       float: left;\n    }\n    :host.carousel-animation.active {\n      opacity: 1;\n      visibility: visible;\n    }\n    :host.carousel-animation:not(.active) {\n      display: block;\n      position: absolute;\n      opacity: 0;\n      visibility: hidden;\n    }\n  `]\n            }]\n    }], function () { return [{ type: CarouselComponent }]; }, { itemWidth: [{\n            type: HostBinding,\n            args: ['style.width']\n        }], order: [{\n            type: HostBinding,\n            args: ['style.order']\n        }], addClass: [{\n            type: HostBinding,\n            args: ['class.item']\n        }, {\n            type: HostBinding,\n            args: ['class.carousel-item']\n        }], active: [{\n            type: HostBinding,\n            args: ['class.active']\n        }, {\n            type: Input\n        }], isAnimated: [{\n            type: HostBinding,\n            args: ['class.carousel-animation']\n        }] }); })();\nif (false) {\n    /**\n     * Is current slide active\n     * @type {?}\n     */\n    SlideComponent.prototype.active;\n    /** @type {?} */\n    SlideComponent.prototype.itemWidth;\n    /** @type {?} */\n    SlideComponent.prototype.order;\n    /** @type {?} */\n    SlideComponent.prototype.isAnimated;\n    /**\n     * Wraps element by appropriate CSS classes\n     * @type {?}\n     */\n    SlideComponent.prototype.addClass;\n    /**\n     * Link to Parent(container-collection) component\n     * @type {?}\n     * @protected\n     */\n    SlideComponent.prototype.carousel;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CarouselModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: CarouselModule, providers: [] };\n    }\n}\nCarouselModule.ɵfac = function CarouselModule_Factory(t) { return new (t || CarouselModule)(); };\nCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CarouselModule });\nCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CarouselModule, { declarations: function () { return [SlideComponent, CarouselComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SlideComponent, CarouselComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [SlideComponent, CarouselComponent],\n                exports: [SlideComponent, CarouselComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CarouselComponent, CarouselConfig, CarouselModule, SlideComponent };\n\n//# sourceMappingURL=ngx-bootstrap-carousel.js.map","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from '../login/auth.guard';\r\nimport { ManagerCustomerDetailComponent } from './customerdetail.component';\r\nimport { ManagerCustomerComponent } from './customers.component';\r\nimport { EnquiriesComponent } from './enquiries.component';\r\n\r\nimport { VerifiedListComponent } from './verified.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    // data: {\r\n    //   title: 'Theme'\r\n    // },\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'manager'\r\n      },\r\n      {\r\n        path: 'verified_list',\r\n        canActivate: [AuthGuard],\r\n        component: VerifiedListComponent,\r\n        data: {\r\n          roles: 'MANAGER',\r\n          title: 'Verified List'\r\n        }\r\n      },\r\n      {\r\n        path: 'customers',\r\n        canActivate: [AuthGuard],\r\n        component: ManagerCustomerComponent,\r\n        data: {\r\n          roles: 'MANAGER',\r\n          title: 'Customers'\r\n        }\r\n      },\r\n      {\r\n        path: 'agents',\r\n        canActivate: [AuthGuard],\r\n        component: VerifiedListComponent,\r\n        data: {\r\n          roles: 'MANAGER',\r\n          title: 'Agents List'\r\n        }\r\n      },\r\n      {\r\n        path: 'enquiries',\r\n        canActivate: [AuthGuard],\r\n        component: EnquiriesComponent,\r\n        data: {\r\n          roles: 'MANAGER',\r\n          title: 'Enquiries'\r\n        }\r\n      },\r\n      {\r\n        path: 'customer_details/:id',\r\n        canActivate: [AuthGuard],\r\n        component: ManagerCustomerDetailComponent,\r\n        data: {\r\n          roles: 'MANAGER',\r\n          title: 'Customer Details'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ManagerRoutingModule {}\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DataService } from \"../../data.service\";\r\nimport { AgentsColumn, customersColumn } from \"../../constants/columnMetadata\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  templateUrl: \"verified.component.html\",\r\n})\r\nexport class VerifiedListComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    if (this.route.snapshot.data.title === \"Agents List\") {\r\n      this.columnDefs = [...AgentsColumn];\r\n    } else {\r\n      this.columnDefs = [...customersColumn];\r\n    }\r\n    this.rowSelection = \"multiple\";\r\n  }\r\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\r\n  callerForm = this.fb.group({\r\n    id: [\"\", Validators.required],\r\n  });\r\n  loading = true;\r\n  label = \"\";\r\n  btnLoading = false;\r\n  orders: any = {};\r\n  columnDefs = [];\r\n  rowData: any = [];\r\n  users: any = [];\r\n  selectedRows: any[];\r\n  btnDisabled = true;\r\n  routerData: any = {};\r\n  private gridApi;\r\n  private gridColumnApi;\r\n\r\n  ngOnInit(): void {\r\n    this.getLists();\r\n    this.routerData = this.route.snapshot.data;\r\n    console.log(this.route.snapshot.data);\r\n  }\r\n  getLists() {\r\n    this.loading = true;\r\n    let filter = {\r\n      is_verified: true,\r\n      kp_caller_assigned_null: true,\r\n    };\r\n    if (this.route.snapshot.data.title === \"Agents List\") {\r\n      this.dataservice.getAgents().valueChanges.subscribe((result: any) => {\r\n        console.log(\"getAgents\", result.data.teleCallerContacts);\r\n        this.rowData = result.data.teleCallerContacts;\r\n      });\r\n      this.dataservice\r\n        .getUsers(\"TELE_CALLER\")\r\n        .valueChanges.subscribe((result: any) => {\r\n          console.log(\"getUsers\", result.data.users);\r\n          this.users = result.data.users;\r\n          this.label = \"Tele \"\r\n        });\r\n    } else {\r\n      this.dataservice\r\n        .getCustomersFilter(filter)\r\n        .valueChanges.subscribe((result: any) => {\r\n          console.log(\"getCustomersFilter\", result.data.customers);\r\n          this.rowData = result.data.customers;\r\n        });\r\n      this.dataservice\r\n        .getUsers(\"KP_CALLER\")\r\n        .valueChanges.subscribe((result: any) => {\r\n          console.log(\"getUsers\", result.data.users);\r\n          this.users = result.data.users;\r\n          this.label = \"KP \"\r\n        });\r\n    }\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n  onSelectionChanged(event) {\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    if (this.selectedRows.length > 0) {\r\n      this.btnDisabled = false;\r\n    } else {\r\n      this.btnDisabled = true;\r\n    }\r\n    console.log(this.selectedRows);\r\n    // this.router.navigate(\r\n    //   [\"/kpcaller/kp_customer_details\", selectedRows[0].id],\r\n    //   {\r\n    //     state: { data: selectedRows },\r\n    //   }\r\n    // );\r\n  }\r\n  FormSubmit() {\r\n    let resp = {};\r\n    console.log(\r\n      this.callerForm.value,\r\n      Array.from(this.selectedRows, (x) => x.id)\r\n    );\r\n    if (this.route.snapshot.data.title === \"Agents List\") {\r\n      this.dataservice\r\n        .SetTeleCaller(\r\n          this.callerForm.value.id,\r\n          Array.from(this.selectedRows, (x) => x.id)\r\n        )\r\n        .subscribe((result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.updateUser) {\r\n            this.toastr.success(\"Assigned successfully!\");\r\n            this.getLists();\r\n            this.myModal.hide();\r\n          } else {\r\n            this.toastr.error(\"Failed. Please check the fields!\");\r\n          }\r\n        });\r\n    } else {\r\n      this.dataservice\r\n        .SetKpCaller(\r\n          this.callerForm.value.id,\r\n          Array.from(this.selectedRows, (x) => x.id)\r\n        )\r\n        .subscribe((result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.updateUser) {\r\n            this.toastr.success(\"Assigned successfully!\");\r\n            this.getLists();\r\n            this.myModal.hide();\r\n          } else {\r\n            this.toastr.error(\"Failed. Please check the fields!\");\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>{{routerData.title}}</h2>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" [disabled]=\\\"btnDisabled\\\"\\r\\n        (click)=\\\"myModal.show()\\\">\\r\\n        Assign to caller\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\r\\n            (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\r\\n          </ag-grid-angular>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n      aria-hidden=\\\"true\\\">\\r\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\">Assign to {{label}} Caller</h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <form [formGroup]=\\\"callerForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"id\\\">{{label}} Caller</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"id\\\" required ngModel name=\\\"group\\\" formControlName=\\\"id\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of users\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.username }}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"myModal.hide()\\\">\\r\\n                Close\\r\\n              </button>\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !callerForm.valid\\\">\\r\\n                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\r\\n                  aria-hidden=\\\"true\\\"></span>\\r\\n                Save changes\\r\\n              </button>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- /.modal-content -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-body text-center\\\">\\r\\n                    Do you want to delete this agent?\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer justify-content-around\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n                        No! Cancel.\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteAgent()\\\">\\r\\n                        Yes! Delete.\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n            <h2>Customer Details</h2>\\r\\n            <span>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\r\\n                    Assign to field agent\\r\\n                </button>\\r\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" (click)=\\\"deleteModal.show()\\\">\\r\\n                Delete\\r\\n            </button> -->\\r\\n            </span>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                            <h4>Basic details</h4>\\r\\n                        </div>\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <td>ID</td>\\r\\n                                    <td>{{details?.id}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Name Of Bride</td>\\r\\n                                    <td>{{details?.NameOfBride}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Name Of Father</td>\\r\\n                                    <td>{{details?.NameOfFather}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Name Of Mother</td>\\r\\n                                    <td>{{ details?.NameOfMother }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Marriage Date</td>\\r\\n                                    <td>{{ details?.MarriageDate }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Marriage Month</td>\\r\\n                                    <td>{{ details?.MarriageMonth }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Contact number 1</td>\\r\\n                                    <td>{{ details?.Contact_Number_1 }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Contact number 2</td>\\r\\n                                    <td>{{ details?.Contact_Number_2 }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Agent</td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"badge badge-warning\\\">{{ details.tele_caller_contact?.Name }}</span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>KP Caller</td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"badge badge-primary\\\">{{ details.kp_caller_assigned?.username\\r\\n                                            }}</span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>House Name</td>\\r\\n                                    <td>{{ details.Address?.HouseName }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Landmark</td>\\r\\n                                    <td>{{ details.Address?.Landmark }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Locality</td>\\r\\n                                    <td>{{ details.Address?.locality?.Name }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Latitude</td>\\r\\n                                    <td>{{ details.Address?.GeoLocation.Latitude }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Longitude</td>\\r\\n                                    <td>{{ details.Address?.GeoLocation.Longitude }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Plus code</td>\\r\\n                                    <td>{{ details.Address?.GeoLocation?.GoogleMapPlusCode }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Map URL</td>\\r\\n                                    <td><a href=\\\"https://www.google.com/maps/place/6JXRM9GR%2BMF/@{{\\r\\n                                          details.Address?.GeoLocation?.Latitude\\r\\n                                        }},{{\\r\\n                                          details.Address?.GeoLocation?.Longitude\\r\\n                                        }},17z/data=!3m1!4b1!4m5!3m4!1s0x0:0x0!8m2!3d9.6766875!4d76.3911875\\\"\\r\\n                                            target=\\\"_blank\\\">Click here to view location</a></td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                            <h4>Field Report</h4>\\r\\n                        </div>\\r\\n                        <table *ngIf=\\\"details.FieldReport\\\" class=\\\"table table-striped\\\">\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <td>Financial category</td>\\r\\n                                    <td>{{details.FieldReport?.FinancialBackground}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Quantity of intended purchase</td>\\r\\n                                    <td>{{details.FieldReport?.QtyOfGold}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Suitable set</td>\\r\\n                                    <td>{{details.FieldReport?.PreferredWeddingSet}}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Whether planning to exchange after marriage?</td>\\r\\n                                    <td>{{ details.FieldReport?.PlanningForReplacementAfterWedding }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Quantity of old gold for exchange</td>\\r\\n                                    <td>{{ details.FieldReport?.OldGoldExchangeQty }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>No cost emi needed?</td>\\r\\n                                    <td>{{ details.FieldReport?.NoCostEmiRequired }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>EMI tenure</td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"badge badge-warning\\\">{{ details.FieldReport?.EmiTenure }}</span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Number of repayments</td>\\r\\n                                    <td>\\r\\n                                        <span class=\\\"badge badge-primary\\\">{{ details.FieldReport?.EmiIntervals\\r\\n                                            }}</span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Token advance</td>\\r\\n                                    <td>{{ details.FieldReport?.TokenAdvance }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Rate advance</td>\\r\\n                                    <td>{{ details.FieldReport?.RateAdvance }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Whether approached by other jewelleries?</td>\\r\\n                                    <td>{{ details.FieldReport?.EnquiriesFromOthers }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Advance paid to other jewellery</td>\\r\\n                                    <td>{{ details.FieldReport?.AdvancePaidToOtherJewellery }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Whether received any fresh leads?</td>\\r\\n                                    <td>{{ details.FieldReport?.NumberOfNewMarriageAddress }}</td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>Captured location</td>\\r\\n                                    <td><a href=\\\"https://www.google.com/maps/place/6JXRM9GR%2BMF/@{{details.FieldReport?.location?.Latitude}},{{details.FieldReport?.location?.Longitude}},17z/data=!3m1!4b1!4m5!3m4!1s0x0:0x0!8m2!3d9.6766875!4d76.3911875\\\"\\r\\n                                            target=\\\"_blank\\\">Click\\r\\n                                            here to view location</a></td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <carousel [interval]=\\\"2000\\\">\\r\\n                            <slide *ngFor=\\\"let item of details.FieldReport?.images\\\">\\r\\n                                <img src=\\\"https://jewel-core.telemarketing.untanglepro.com{{item.url}}\\\"\\r\\n                                    alt=\\\"First slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n                                <!-- <div class=\\\"carousel-caption d-none d-md-block\\\">\\r\\n                                <h3>First slide label</h3>\\r\\n                                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\\r\\n                              </div> -->\\r\\n                            </slide>\\r\\n                        </carousel>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"!details.FieldReport\\\" class=\\\"card\\\">\\r\\n                        <div class=\\\"card-body text-center\\\">\\r\\n                            No field report found\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                        <h4>Remarks</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card\\\" *ngFor=\\\"let item of details.TelecallerRemarks\\\">\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <h5 class=\\\"card-title\\\">{{dateConverter(item.CallHistory?.event_date_time)}}</h5>\\r\\n                            <p class=\\\"card-text\\\">{{item.RemarksText}}</p>\\r\\n                            <span\\r\\n                                class=\\\"badge badge-primary\\\">{{item.CallHistory.users_permissions_user?.username}}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"commentModal.show()\\\">\\r\\n                        Add Comment\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n            aria-hidden=\\\"true\\\">\\r\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <h4 class=\\\"modal-title\\\">Assign to field Agent</h4>\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                        <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"group\\\">Field agent</label>\\r\\n                                <select class=\\\"form-control\\\" id=\\\"agent\\\" required ngModel name=\\\"agent\\\"\\r\\n                                    formControlName=\\\"agent\\\">\\r\\n                                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                                    <option *ngFor=\\\"let item of users\\\" value=\\\"{{ item.id }}\\\">\\r\\n                                        {{ item.username }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"myModal.hide()\\\">\\r\\n                                Close\\r\\n                            </button>\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\"\\r\\n                                [disabled]=\\\"btnLoading || !agentForm.valid\\\">\\r\\n                                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\r\\n                                    aria-hidden=\\\"true\\\"></span>\\r\\n                                Save changes\\r\\n                            </button>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- /.modal-content -->\\r\\n            </div>\\r\\n            <!-- /.modal-dialog -->\\r\\n        </div>\\r\\n        <div bsModal #commentModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n            aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <h4 class=\\\"modal-title\\\">Add Comment</h4>\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"commentModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"CommentSubmit()\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"name\\\">Remarks</label>\\r\\n                                <textarea class=\\\"form-control\\\" maxlength=\\\"250\\\" id=\\\"RemarksText\\\" name=\\\"RemarksText\\\"\\r\\n                                    formControlName=\\\"RemarksText\\\" placeholder=\\\"Enter remarks\\\"></textarea>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"email\\\">Date</label>\\r\\n                                <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"event_date_time\\\"\\r\\n                                    name=\\\"event_date_time\\\" formControlName=\\\"event_date_time\\\" />\\r\\n                            </div> -->\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"commentModal.hide()\\\">\\r\\n                                Close\\r\\n                            </button>\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\"\\r\\n                                [disabled]=\\\"btnLoading || !commentForm.valid\\\">\\r\\n                                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\r\\n                                    aria-hidden=\\\"true\\\"></span>\\r\\n                                Save changes\\r\\n                            </button>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- /.modal-content -->\\r\\n            </div>\\r\\n            <!-- /.modal-dialog -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Customers</h2>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\r\\n        New\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\r\\n            (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\r\\n          </ag-grid-angular>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Add New Customer</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <form [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name\\\">Name of Bride</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfBride\\\" name=\\\"NameOfBride\\\" formControlName=\\\"NameOfBride\\\"\\r\\n                placeholder=\\\"Enter bride's name\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name\\\">Name of Father</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfFather\\\" name=\\\"NameOfFather\\\"\\r\\n                formControlName=\\\"NameOfFather\\\" placeholder=\\\"Enter father's name\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name\\\">Name of Mother</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfMother\\\" name=\\\"NameOfMother\\\"\\r\\n                formControlName=\\\"NameOfMother\\\" placeholder=\\\"Enter mother's name\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name\\\">Contact number 1</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Contact_Number_1\\\" name=\\\"Contact_Number_1\\\"\\r\\n                formControlName=\\\"Contact_Number_1\\\" placeholder=\\\"Enter primary contact number\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name\\\">Contact number 2</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Contact_Number_2\\\" name=\\\"Contact_Number_2\\\"\\r\\n                formControlName=\\\"Contact_Number_2\\\" placeholder=\\\"Enter secondary contact number\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"email\\\">Marriage date</label>\\r\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"MarriageDate\\\" name=\\\"MarriageDate\\\"\\r\\n                formControlName=\\\"MarriageDate\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"group\\\">Marriage month</label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"MarriageMonth\\\" required ngModel name=\\\"MarriageMonth\\\" formControlName=\\\"MarriageMonth\\\">\\r\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                <option *ngFor=\\\"let item of Months\\\" value=\\\"{{ item.id }}\\\">\\r\\n                  {{ item.Name }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"group\\\">Agent</label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"tele_caller_contact\\\" required ngModel name=\\\"tele_caller_contact\\\" formControlName=\\\"tele_caller_contact\\\">\\r\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                <option *ngFor=\\\"let item of agents\\\" value=\\\"{{ item.id }}\\\">\\r\\n                  {{ item.Name }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name\\\">House Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"HouseName\\\" name=\\\"HouseName\\\"\\r\\n                formControlName=\\\"HouseName\\\" placeholder=\\\"Enter House Name\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name\\\">Landmark</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Landmark\\\" name=\\\"Landmark\\\"\\r\\n                formControlName=\\\"Landmark\\\" placeholder=\\\"Enter Landmark\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"locality\\\">Name of locality</label>\\r\\n              <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"locality\\\" name=\\\"locality\\\" formControlName=\\\"locality\\\"\\r\\n                placeholder=\\\"Enter locality\\\" /> -->\\r\\n                <select class=\\\"form-control\\\" id=\\\"locality\\\" required ngModel name=\\\"locality\\\" formControlName=\\\"locality\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of localities\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"myModal.hide()\\\">\\r\\n              Close\\r\\n            </button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !customerForm.valid\\\">\\r\\n              <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n              Save changes\\r\\n            </button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- /.modal-content -->\\r\\n    </div>\\r\\n    <!-- /.modal-dialog -->\\r\\n  </div>\\r\\n  <!-- /.modal -->\\r\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n        <h2>Enquiries</h2>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\r\\n          New\\r\\n        </button> -->\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\r\\n              [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\r\\n              (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\r\\n            </ag-grid-angular>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n      aria-hidden=\\\"true\\\">\\r\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\">Add New Customer</h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <form [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Name of Bride</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfBride\\\" name=\\\"NameOfBride\\\" formControlName=\\\"NameOfBride\\\"\\r\\n                  placeholder=\\\"Enter bride's name\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Name of Father</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfFather\\\" name=\\\"NameOfFather\\\"\\r\\n                  formControlName=\\\"NameOfFather\\\" placeholder=\\\"Enter father's name\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Name of Mother</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfMother\\\" name=\\\"NameOfMother\\\"\\r\\n                  formControlName=\\\"NameOfMother\\\" placeholder=\\\"Enter mother's name\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Contact number 1</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Contact_Number_1\\\" name=\\\"Contact_Number_1\\\"\\r\\n                  formControlName=\\\"Contact_Number_1\\\" placeholder=\\\"Enter primary contact number\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Contact number 2</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Contact_Number_2\\\" name=\\\"Contact_Number_2\\\"\\r\\n                  formControlName=\\\"Contact_Number_2\\\" placeholder=\\\"Enter secondary contact number\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"email\\\">Marriage date</label>\\r\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"MarriageDate\\\" name=\\\"MarriageDate\\\"\\r\\n                  formControlName=\\\"MarriageDate\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"group\\\">Marriage month</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"MarriageMonth\\\" required ngModel name=\\\"MarriageMonth\\\" formControlName=\\\"MarriageMonth\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of Months\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"group\\\">Agent</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"tele_caller_contact\\\" required ngModel name=\\\"tele_caller_contact\\\" formControlName=\\\"tele_caller_contact\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of agents\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">House Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"HouseName\\\" name=\\\"HouseName\\\"\\r\\n                  formControlName=\\\"HouseName\\\" placeholder=\\\"Enter House Name\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Landmark</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Landmark\\\" name=\\\"Landmark\\\"\\r\\n                  formControlName=\\\"Landmark\\\" placeholder=\\\"Enter Landmark\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"locality\\\">Name of locality</label>\\r\\n                <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"locality\\\" name=\\\"locality\\\" formControlName=\\\"locality\\\"\\r\\n                  placeholder=\\\"Enter locality\\\" /> -->\\r\\n                  <select class=\\\"form-control\\\" id=\\\"locality\\\" required ngModel name=\\\"locality\\\" formControlName=\\\"locality\\\">\\r\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                    <option *ngFor=\\\"let item of localities\\\" value=\\\"{{ item.id }}\\\">\\r\\n                      {{ item.Name }}\\r\\n                    </option>\\r\\n                  </select>\\r\\n              </div>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"myModal.hide()\\\">\\r\\n                Close\\r\\n              </button>\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !customerForm.valid\\\">\\r\\n                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                Save changes\\r\\n              </button>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- /.modal-content -->\\r\\n      </div>\\r\\n      <!-- /.modal-dialog -->\\r\\n    </div>\\r\\n    <!-- /.modal -->\\r\\n  </div>\";"],"sourceRoot":"webpack:///"}