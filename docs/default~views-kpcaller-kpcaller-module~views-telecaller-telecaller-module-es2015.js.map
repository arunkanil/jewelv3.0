{"version":3,"sources":["./node_modules/ngx-bootstrap/tabs/fesm2015/ngx-bootstrap-tabs.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+L;AAChJ;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACwC;AACE;;AAE1C,wDAAwD;AACxD,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,uFAAuF,CAAC,2DAAoB,MAAM,iBAAiB,2DAAoB,aAAa,gBAAgB,2DAAoB,GAAG,yBAAyB,kCAAkC,EAAE;AAC7R,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,2BAA2B,yBAAyB;AACpD,iDAAiD;AACjD,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kFAAkF,CAAC,2DAAoB,MAAM,wBAAwB,gBAAgB,2DAAoB,GAAG,2CAA2C,EAAE;AAC9O,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,uEAAuE,+BAA+B,8BAA8B,EAAE;AAC3J,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,IAAI,yDAAkB;AACtB,IAAI,wDAAiB,YAAY,6DAAsB;AACvD,IAAI,uDAAgB;AACpB,IAAI,yDAAkB;AACtB,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wEAAwE,yCAAyC,+DAAwB,CAAC,8DAAuB,GAAG;AACpK,6BAA6B,+DAAwB,EAAE,8EAA8E,+BAA+B,EAAE;AACtK;AACA;AACA,KAAK,OAAO,8DAAgB;AAC5B;AACA;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,8DAAuB,EAAE,EAAE,EAAE,GAAG;AACtE,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAaV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,wCAAwC,wEAAkB,EAAE,2CAA2C,2BAA2B,EAAE,2CAA2C;AAC/K,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAgBV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,8BAA8B,6BAA6B;AAC3D,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA,4DAA4D,mCAAmC,+DAAwB,gBAAgB,+DAAwB,CAAC,uDAAgB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG;AAChO,uBAAuB,+DAAwB,EAAE,4HAA4H;AAC7K,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,6DAA6D,iQAAiQ,+MAA+M;AAC/hB,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,yEAAyE,gCAAgC,EAAE;AACpI,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,wDAAiB;AACzB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,uDAAc,EAAE,uDAAc,yBAAyB,oDAAW,qIAAqI,eAAe,IAAI;AAChP;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,yDAAW,kCAAkC;AACjE;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,0MAA0M,uNAAuN,qWAAqW,gBAAgB,gFAAgF,iBAAiB,oCAAoC;AAC35B,wEAAwE,eAAe;AACvF,aAAa;AACb,KAAK,gBAAgB,UAAU,qBAAqB,GAAG,OAAO,uDAAgB,EAAE,GAAG,OAAO,wDAAiB,EAAE,EAAE,EAAE,GAAG;AACpH,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EA+CV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,qCAAqC,+BAA+B;AACpE;AACA;AACA,sDAAsD,gCAAgC,+DAAwB,mBAAmB,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG;AAC1N,oBAAoB,+DAAwB,EAAE,oIAAoI;AAClL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,2HAA2H,YAAY,mEAAmE,qBAAqB;AACjP;AACA;AACA,KAAK,wBAAwB;AAC7B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,UAAU,OAAO,yDAAW,sBAAsB,GAAG,OAAO,mDAAK,EAAE;AACnE,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,cAAc,OAAO,yDAAW,2BAA2B,GAAG,OAAO,mDAAK,EAAE;AAC5E,iBAAiB,OAAO,oDAAM,EAAE;AAChC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,eAAe,OAAO,oDAAM,EAAE;AAC9B,gBAAgB,OAAO,yDAAW,6BAA6B;AAC/D,YAAY,OAAO,yDAAW,wBAAwB;AACtD,sBAAsB,OAAO,yDAAW,mCAAmC;AAC3E;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB,gBAAgB,0CAA0C;AAC1D,KAAK,gBAAgB,UAAU,wBAAwB,GAAG,OAAO,wDAAiB,EAAE,GAAG,OAAO,uDAAgB,EAAE,EAAE,EAAE,GAAG;AACvH,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EA0DV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,CAAC,yDAAkB,GAAG,+DAAwB,gBAAgB;AACjM,2BAA2B,+DAAwB,EAAE,iEAAiE;AACtH;AACA;AACA,KAAK,OAAO,yDAAW,EAAE;AACzB,KAAK;AACL;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB,gBAAgB,2BAA2B;AAC3C,KAAK,gBAAgB,UAAU,OAAO,yDAAkB,EAAE,GAAG,qBAAqB,EAAE,EAAE,QAAQ,EAAE;AAChG,WAAW,EAGV;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF,kBAAkB,8DAAuB,EAAE,mBAAmB;AAC9D,kBAAkB,8DAAuB,EAAE,YAAY,4DAAY,IAAI;AACvE,cAAc,oDAAoD,gEAAyB,cAAc,4BAA4B,oFAAoF,EAAE,wBAAwB,SAAS,4DAAY,EAAE,EAAE,wBAAwB,oFAAoF,EAAE,EAAE,EAAE,EAAE;AAChY,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA,0BAA0B,4DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE+G;;AAE/G,8C","file":"default~views-kpcaller-kpcaller-module~views-telecaller-telecaller-module-es2015.js","sourcesContent":["import { Directive, ViewContainerRef, Input, Injectable, ɵɵdefineInjectable, Component, Renderer2, ElementRef, HostBinding, EventEmitter, Output, TemplateRef, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction TabsetComponent_li_1_span_4_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function TabsetComponent_li_1_span_4_Template_span_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const tabz_r1 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(); $event.preventDefault(); return ctx_r4.removeTab(tabz_r1); });\n    ɵngcc0.ɵɵtext(1, \" \\u274C\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c0 = function (a1) { return [\"nav-item\", a1]; };\nfunction TabsetComponent_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function TabsetComponent_li_1_Template_li_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const i_r2 = ctx.index; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.keyNavActions($event, i_r2); });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function TabsetComponent_li_1_Template_a_click_1_listener() { const tabz_r1 = ctx.$implicit; return tabz_r1.active = true; });\n    ɵngcc0.ɵɵelementStart(2, \"span\", 5);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, TabsetComponent_li_1_span_4_Template, 2, 0, \"span\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tabz_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"active\", tabz_r1.active)(\"disabled\", tabz_r1.disabled);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(15, _c0, tabz_r1.customClass || \"\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"active\", tabz_r1.active)(\"disabled\", tabz_r1.disabled);\n    ɵngcc0.ɵɵattribute(\"aria-controls\", tabz_r1.id ? tabz_r1.id : \"\")(\"aria-selected\", !!tabz_r1.active)(\"id\", tabz_r1.id ? tabz_r1.id + \"-link\" : \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTransclude\", tabz_r1.headingRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(tabz_r1.heading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tabz_r1.removable);\n} }\nconst _c1 = [\"*\"];\nclass NgTranscludeDirective {\n    /**\n     * @param {?} viewRef\n     */\n    constructor(viewRef) {\n        this.viewRef = viewRef;\n    }\n    /**\n     * @param {?} templateRef\n     * @return {?}\n     */\n    set ngTransclude(templateRef) {\n        this._ngTransclude = templateRef;\n        if (templateRef) {\n            this.viewRef.createEmbeddedView(templateRef);\n        }\n    }\n    /* tslint:disable-next-line:no-any */\n    /**\n     * @return {?}\n     */\n    get ngTransclude() {\n        return this._ngTransclude;\n    }\n}\nNgTranscludeDirective.ɵfac = function NgTranscludeDirective_Factory(t) { return new (t || NgTranscludeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nNgTranscludeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgTranscludeDirective, selectors: [[\"\", \"ngTransclude\", \"\"]], inputs: { ngTransclude: \"ngTransclude\" } });\n/** @nocollapse */\nNgTranscludeDirective.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nNgTranscludeDirective.propDecorators = {\n    ngTransclude: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgTranscludeDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngTransclude]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, { ngTransclude: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    NgTranscludeDirective.prototype.viewRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    NgTranscludeDirective.prototype._viewRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    NgTranscludeDirective.prototype._ngTransclude;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TabsetConfig {\n    constructor() {\n        /**\n         * provides default navigation context class: 'tabs' or 'pills'\n         */\n        this.type = 'tabs';\n        /**\n         * provides possibility to set keyNavigations enable or disable, by default is enable\n         */\n        this.isKeysAllowed = true;\n        /**\n         * aria label for tab list\n         */\n        this.ariaLabel = 'Tabs';\n    }\n}\nTabsetConfig.ɵfac = function TabsetConfig_Factory(t) { return new (t || TabsetConfig)(); };\n/** @nocollapse */ TabsetConfig.ɵprov = ɵɵdefineInjectable({ factory: function TabsetConfig_Factory() { return new TabsetConfig(); }, token: TabsetConfig, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsetConfig, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * provides default navigation context class: 'tabs' or 'pills'\n     * @type {?}\n     */\n    TabsetConfig.prototype.type;\n    /**\n     * provides possibility to set keyNavigations enable or disable, by default is enable\n     * @type {?}\n     */\n    TabsetConfig.prototype.isKeysAllowed;\n    /**\n     * aria label for tab list\n     * @type {?}\n     */\n    TabsetConfig.prototype.ariaLabel;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\nclass TabsetComponent {\n    /**\n     * @param {?} config\n     * @param {?} renderer\n     * @param {?} elementRef\n     */\n    constructor(config, renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.clazz = true;\n        this.tabs = [];\n        this.classMap = {};\n        Object.assign(this, config);\n    }\n    /**\n     * if true tabs will be placed vertically\n     * @return {?}\n     */\n    get vertical() {\n        return this._vertical;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = value;\n        this.setClassMap();\n    }\n    /**\n     * if true tabs fill the container and have a consistent width\n     * @return {?}\n     */\n    get justified() {\n        return this._justified;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set justified(value) {\n        this._justified = value;\n        this.setClassMap();\n    }\n    /**\n     * navigation context class: 'tabs' or 'pills'\n     * @return {?}\n     */\n    get type() {\n        return this._type;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value;\n        this.setClassMap();\n    }\n    /**\n     * @return {?}\n     */\n    get isKeysAllowed() {\n        return this._isKeysAllowed;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set isKeysAllowed(value) {\n        this._isKeysAllowed = value;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.isDestroyed = true;\n    }\n    /**\n     * @param {?} tab\n     * @return {?}\n     */\n    addTab(tab) {\n        this.tabs.push(tab);\n        tab.active = this.tabs.length === 1 && typeof tab.active === 'undefined';\n    }\n    /**\n     * @param {?} tab\n     * @param {?=} options\n     * @return {?}\n     */\n    removeTab(tab, options = { reselect: true, emit: true }) {\n        /** @type {?} */\n        const index = this.tabs.indexOf(tab);\n        if (index === -1 || this.isDestroyed) {\n            return;\n        }\n        // Select a new tab if the tab to be removed is selected and not destroyed\n        if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n            /** @type {?} */\n            const newActiveIndex = this.getClosestTabIndex(index);\n            this.tabs[newActiveIndex].active = true;\n        }\n        if (options.emit) {\n            tab.removed.emit(tab);\n        }\n        this.tabs.splice(index, 1);\n        if (tab.elementRef.nativeElement.parentNode) {\n            this.renderer.removeChild(tab.elementRef.nativeElement.parentNode, tab.elementRef.nativeElement);\n        }\n    }\n    /* tslint:disable-next-line: cyclomatic-complexity */\n    /**\n     * @param {?} event\n     * @param {?} index\n     * @return {?}\n     */\n    keyNavActions(event, index) {\n        if (!this.isKeysAllowed) {\n            return;\n        }\n        /** @type {?} */\n        const list = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link'));\n        // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n            event.preventDefault();\n            /** @type {?} */\n            const currentTab = list[(index) % list.length];\n            currentTab.click();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 39 || event.key === 'RightArrow') {\n            /** @type {?} */\n            let nextTab;\n            /** @type {?} */\n            let shift = 1;\n            do {\n                nextTab = list[(index + shift) % list.length];\n                shift++;\n            } while (nextTab.classList.contains('disabled'));\n            nextTab.focus();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 37 || event.key === 'LeftArrow') {\n            /** @type {?} */\n            let previousTab;\n            /** @type {?} */\n            let shift = 1;\n            /** @type {?} */\n            let i = index;\n            do {\n                if ((i - shift) < 0) {\n                    i = list.length - 1;\n                    previousTab = list[i];\n                    shift = 0;\n                }\n                else {\n                    previousTab = list[i - shift];\n                }\n                shift++;\n            } while (previousTab.classList.contains('disabled'));\n            previousTab.focus();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 36 || event.key === 'Home') {\n            event.preventDefault();\n            /** @type {?} */\n            let firstTab;\n            /** @type {?} */\n            let shift = 0;\n            do {\n                firstTab = list[shift % list.length];\n                shift++;\n            } while (firstTab.classList.contains('disabled'));\n            firstTab.focus();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 35 || event.key === 'End') {\n            event.preventDefault();\n            /** @type {?} */\n            let lastTab;\n            /** @type {?} */\n            let shift = 1;\n            /** @type {?} */\n            let i = index;\n            do {\n                if ((i - shift) < 0) {\n                    i = list.length - 1;\n                    lastTab = list[i];\n                    shift = 0;\n                }\n                else {\n                    lastTab = list[i - shift];\n                }\n                shift++;\n            } while (lastTab.classList.contains('disabled'));\n            lastTab.focus();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 46 || event.key === 'Delete') {\n            if (this.tabs[index].removable) {\n                this.removeTab(this.tabs[index]);\n                if (list[index + 1]) {\n                    list[(index + 1) % list.length].focus();\n                    return;\n                }\n                if (list[list.length - 1]) {\n                    list[0].focus();\n                }\n            }\n        }\n    }\n    /**\n     * @protected\n     * @param {?} index\n     * @return {?}\n     */\n    getClosestTabIndex(index) {\n        /** @type {?} */\n        const tabsLength = this.tabs.length;\n        if (!tabsLength) {\n            return -1;\n        }\n        for (let step = 1; step <= tabsLength; step += 1) {\n            /** @type {?} */\n            const prevIndex = index - step;\n            /** @type {?} */\n            const nextIndex = index + step;\n            if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n                return prevIndex;\n            }\n            if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n                return nextIndex;\n            }\n        }\n        return -1;\n    }\n    /**\n     * @protected\n     * @param {?} index\n     * @return {?}\n     */\n    hasAvailableTabs(index) {\n        /** @type {?} */\n        const tabsLength = this.tabs.length;\n        if (!tabsLength) {\n            return false;\n        }\n        for (let i = 0; i < tabsLength; i += 1) {\n            if (!this.tabs[i].disabled && i !== index) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    setClassMap() {\n        this.classMap = {\n            'nav-stacked': this.vertical,\n            'flex-column': this.vertical,\n            'nav-justified': this.justified,\n            [`nav-${this.type}`]: true\n        };\n    }\n}\nTabsetComponent.ɵfac = function TabsetComponent_Factory(t) { return new (t || TabsetComponent)(ɵngcc0.ɵɵdirectiveInject(TabsetConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nTabsetComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabsetComponent, selectors: [[\"tabset\"]], hostVars: 2, hostBindings: function TabsetComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"tab-container\", ctx.clazz);\n    } }, inputs: { vertical: \"vertical\", justified: \"justified\", type: \"type\" }, ngContentSelectors: _c1, decls: 4, vars: 3, consts: [[\"role\", \"tablist\", 1, \"nav\", 3, \"ngClass\", \"click\"], [3, \"ngClass\", \"active\", \"disabled\", \"keydown\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab-content\"], [3, \"ngClass\", \"keydown\"], [\"href\", \"javascript:void(0);\", \"role\", \"tab\", 1, \"nav-link\", 3, \"click\"], [3, \"ngTransclude\"], [\"class\", \"bs-remove-tab\", 3, \"click\", 4, \"ngIf\"], [1, \"bs-remove-tab\", 3, \"click\"]], template: function TabsetComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function TabsetComponent_Template_ul_click_0_listener($event) { return $event.preventDefault(); });\n        ɵngcc0.ɵɵtemplate(1, TabsetComponent_li_1_Template, 5, 17, \"li\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.classMap);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, NgTranscludeDirective, ɵngcc1.NgIf], styles: [\"[_nghost-%COMP%]   .nav-tabs[_ngcontent-%COMP%]   .nav-item.disabled[_ngcontent-%COMP%]   a.disabled[_ngcontent-%COMP%]{cursor:default}\"] });\n/** @nocollapse */\nTabsetComponent.ctorParameters = () => [\n    { type: TabsetConfig },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nTabsetComponent.propDecorators = {\n    vertical: [{ type: Input }],\n    justified: [{ type: Input }],\n    type: [{ type: Input }],\n    clazz: [{ type: HostBinding, args: ['class.tab-container',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsetComponent, [{\n        type: Component,\n        args: [{\n                selector: 'tabset',\n                template: \"<ul class=\\\"nav\\\" [ngClass]=\\\"classMap\\\"\\n    (click)=\\\"$event.preventDefault()\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    role=\\\"tablist\\\">\\n  <li *ngFor=\\\"let tabz of tabs; let i = index\\\" [ngClass]=\\\"['nav-item', tabz.customClass || '']\\\"\\n      [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\" (keydown)=\\\"keyNavActions($event, i)\\\">\\n    <a href=\\\"javascript:void(0);\\\" class=\\\"nav-link\\\" role=\\\"tab\\\"\\n       [attr.aria-controls]=\\\"tabz.id ? tabz.id : ''\\\"\\n       [attr.aria-selected]=\\\"!!tabz.active\\\"\\n       [attr.id]=\\\"tabz.id ? tabz.id + '-link' : ''\\\"\\n       [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\"\\n       (click)=\\\"tabz.active = true\\\">\\n      <span [ngTransclude]=\\\"tabz.headingRef\\\">{{ tabz.heading }}</span>\\n      <span *ngIf=\\\"tabz.removable\\\" (click)=\\\"$event.preventDefault(); removeTab(tabz);\\\" class=\\\"bs-remove-tab\\\"> &#10060;</span>\\n    </a>\\n  </li>\\n</ul>\\n<div class=\\\"tab-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n                styles: [\":host .nav-tabs .nav-item.disabled a.disabled{cursor:default}\"]\n            }]\n    }], function () { return [{ type: TabsetConfig }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { clazz: [{\n            type: HostBinding,\n            args: ['class.tab-container']\n        }], vertical: [{\n            type: Input\n        }], justified: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    TabsetComponent.prototype.clazz;\n    /** @type {?} */\n    TabsetComponent.prototype.tabs;\n    /** @type {?} */\n    TabsetComponent.prototype.classMap;\n    /**\n     * aria label for tab list\n     * @type {?}\n     */\n    TabsetComponent.prototype.ariaLabel;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TabsetComponent.prototype.isDestroyed;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TabsetComponent.prototype._vertical;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TabsetComponent.prototype._justified;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TabsetComponent.prototype._type;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TabsetComponent.prototype._isKeysAllowed;\n    /**\n     * @type {?}\n     * @private\n     */\n    TabsetComponent.prototype.renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    TabsetComponent.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TabDirective {\n    /**\n     * @param {?} tabset\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(tabset, elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        /**\n         * fired when tab became active, $event:Tab equals to selected instance of Tab component\n         */\n        this.selectTab = new EventEmitter();\n        /**\n         * fired when tab became inactive, $event:Tab equals to deselected instance of Tab component\n         */\n        this.deselect = new EventEmitter();\n        /**\n         * fired before tab will be removed, $event:Tab equals to instance of removed tab\n         */\n        this.removed = new EventEmitter();\n        this.addClass = true;\n        this.role = 'tabpanel';\n        this.tabset = tabset;\n        this.tabset.addTab(this);\n    }\n    /**\n     * if set, will be added to the tab's class attribute. Multiple classes are supported.\n     * @return {?}\n     */\n    get customClass() {\n        return this._customClass;\n    }\n    /**\n     * @param {?} customClass\n     * @return {?}\n     */\n    set customClass(customClass) {\n        if (this.customClass) {\n            this.customClass.split(' ').forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            (cssClass) => {\n                this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\n            }));\n        }\n        this._customClass = customClass ? customClass.trim() : null;\n        if (this.customClass) {\n            this.customClass.split(' ').forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            (cssClass) => {\n                this.renderer.addClass(this.elementRef.nativeElement, cssClass);\n            }));\n        }\n    }\n    /**\n     * tab active state toggle\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * @param {?} active\n     * @return {?}\n     */\n    set active(active) {\n        if (this._active === active) {\n            return;\n        }\n        if ((this.disabled && active) || !active) {\n            if (this._active && !active) {\n                this.deselect.emit(this);\n                this._active = active;\n            }\n            return;\n        }\n        this._active = active;\n        this.selectTab.emit(this);\n        this.tabset.tabs.forEach((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        (tab) => {\n            if (tab !== this) {\n                tab.active = false;\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get ariaLabelledby() {\n        return this.id ? `${this.id}-link` : '';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.removable = this.removable;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.tabset.removeTab(this, { reselect: false, emit: false });\n    }\n}\nTabDirective.ɵfac = function TabDirective_Factory(t) { return new (t || TabDirective)(ɵngcc0.ɵɵdirectiveInject(TabsetComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nTabDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TabDirective, selectors: [[\"tab\"], [\"\", \"tab\", \"\"]], hostVars: 7, hostBindings: function TabDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"aria-labelledby\", ctx.ariaLabelledby)(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"tab-pane\", ctx.addClass)(\"active\", ctx.active);\n    } }, inputs: { customClass: \"customClass\", active: \"active\", removable: \"removable\", heading: \"heading\", id: \"id\", disabled: \"disabled\" }, outputs: { selectTab: \"selectTab\", deselect: \"deselect\", removed: \"removed\" }, exportAs: [\"tab\"] });\n/** @nocollapse */\nTabDirective.ctorParameters = () => [\n    { type: TabsetComponent },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nTabDirective.propDecorators = {\n    heading: [{ type: Input }],\n    id: [{ type: HostBinding, args: ['attr.id',] }, { type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    customClass: [{ type: Input }],\n    active: [{ type: HostBinding, args: ['class.active',] }, { type: Input }],\n    selectTab: [{ type: Output }],\n    deselect: [{ type: Output }],\n    removed: [{ type: Output }],\n    addClass: [{ type: HostBinding, args: ['class.tab-pane',] }],\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    ariaLabelledby: [{ type: HostBinding, args: ['attr.aria-labelledby',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabDirective, [{\n        type: Directive,\n        args: [{ selector: 'tab, [tab]', exportAs: 'tab' }]\n    }], function () { return [{ type: TabsetComponent }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { selectTab: [{\n            type: Output\n        }], deselect: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], addClass: [{\n            type: HostBinding,\n            args: ['class.tab-pane']\n        }], role: [{\n            type: HostBinding,\n            args: ['attr.role']\n        }], customClass: [{\n            type: Input\n        }], active: [{\n            type: HostBinding,\n            args: ['class.active']\n        }, {\n            type: Input\n        }], ariaLabelledby: [{\n            type: HostBinding,\n            args: ['attr.aria-labelledby']\n        }], removable: [{\n            type: Input\n        }], heading: [{\n            type: Input\n        }], id: [{\n            type: HostBinding,\n            args: ['attr.id']\n        }, {\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * tab header text\n     * @type {?}\n     */\n    TabDirective.prototype.heading;\n    /**\n     * tab id. The same id with suffix '-link' will be added to the corresponding &lt;li&gt; element\n     * @type {?}\n     */\n    TabDirective.prototype.id;\n    /**\n     * if true tab can not be activated\n     * @type {?}\n     */\n    TabDirective.prototype.disabled;\n    /**\n     * if true tab can be removable, additional button will appear\n     * @type {?}\n     */\n    TabDirective.prototype.removable;\n    /**\n     * fired when tab became active, $event:Tab equals to selected instance of Tab component\n     * @type {?}\n     */\n    TabDirective.prototype.selectTab;\n    /**\n     * fired when tab became inactive, $event:Tab equals to deselected instance of Tab component\n     * @type {?}\n     */\n    TabDirective.prototype.deselect;\n    /**\n     * fired before tab will be removed, $event:Tab equals to instance of removed tab\n     * @type {?}\n     */\n    TabDirective.prototype.removed;\n    /** @type {?} */\n    TabDirective.prototype.addClass;\n    /** @type {?} */\n    TabDirective.prototype.role;\n    /** @type {?} */\n    TabDirective.prototype.headingRef;\n    /** @type {?} */\n    TabDirective.prototype.tabset;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TabDirective.prototype._active;\n    /**\n     * @type {?}\n     * @protected\n     */\n    TabDirective.prototype._customClass;\n    /** @type {?} */\n    TabDirective.prototype.elementRef;\n    /** @type {?} */\n    TabDirective.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Should be used to mark <ng-template> element as a template for tab heading\n */\nclass TabHeadingDirective {\n    /* tslint:disable-next-line:no-any */\n    /**\n     * @param {?} templateRef\n     * @param {?} tab\n     */\n    constructor(templateRef, tab) {\n        tab.headingRef = templateRef;\n    }\n}\nTabHeadingDirective.ɵfac = function TabHeadingDirective_Factory(t) { return new (t || TabHeadingDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(TabDirective)); };\nTabHeadingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TabHeadingDirective, selectors: [[\"\", \"tabHeading\", \"\"]] });\n/** @nocollapse */\nTabHeadingDirective.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: TabDirective }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabHeadingDirective, [{\n        type: Directive,\n        args: [{ selector: '[tabHeading]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: TabDirective }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    TabHeadingDirective.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TabsModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: TabsModule,\n            providers: []\n        };\n    }\n}\nTabsModule.ɵfac = function TabsModule_Factory(t) { return new (t || TabsModule)(); };\nTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TabsModule });\nTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TabsModule, { declarations: function () { return [NgTranscludeDirective, TabDirective, TabsetComponent, TabHeadingDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [TabDirective, TabsetComponent, TabHeadingDirective, NgTranscludeDirective]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [\n                    NgTranscludeDirective,\n                    TabDirective,\n                    TabsetComponent,\n                    TabHeadingDirective\n                ],\n                exports: [\n                    TabDirective,\n                    TabsetComponent,\n                    TabHeadingDirective,\n                    NgTranscludeDirective\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgTranscludeDirective, TabDirective, TabHeadingDirective, TabsModule, TabsetComponent, TabsetConfig };\n\n//# sourceMappingURL=ngx-bootstrap-tabs.js.map"],"sourceRoot":"webpack:///"}