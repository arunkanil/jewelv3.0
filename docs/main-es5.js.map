{"version":3,"sources":["webpack:///src/app/views/login/authentication.service.ts","webpack:///src/app/graphql.module.ts","webpack:///src/app/views/error/404.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/containers/default-layout/index.ts","webpack:///src/app/containers/index.ts","webpack:///src/app/views/exposed_form/exposed_form.component.ts","webpack:///src/app/containers/default-layout/default-layout.component.ts","webpack:///src/app/views/error/500.component.html","webpack:///src/app/views/exposed_form/exposed_form.component.html","webpack:///src/app/views/login/login.component.ts","webpack:///src/app/data.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/_nav.ts","webpack:///src/app/views/error/500.component.ts","webpack:///src/app/containers/default-layout/default-layout.component.html","webpack:///src/app/views/error/404.component.html","webpack:///src/app/views/login/login.component.html","webpack:///src/app/views/login/auth.guard.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AuthenticationService","http","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","console","log","value","data","post","apiUrl","pipe","user","jwt","setItem","username","id","UserType","email","stringify","next","removeItem","providedIn","uri","createApollo","httpLink","basic","operation","context","headers","Accept","token","auth","Authorization","link","from","create","cache","createNamedApollo","second","name","GraphQLModule","providers","provide","useFactory","deps","P404Component","template","environment","production","ExposedFormComponent","dataservice","route","router","toastr","loginForm","result","error","loading","returnUrl","snapshot","queryParams","usForm","AddEnquiry","subscribe","success","message","selector","DefaultLayoutComponent","authenticationService","sidebarMinimized","userName","navItems","filter","item","role","x","e","logout","navigate","LoginComponent","currentUserValue","login","messages","AgentsQuery","AgentsSingleQuery","AddAgentMutation","GroupsQuery","localitiesQuery","postOfficesQuery","UpdateAgentMutation","DeleteAgentMutation","AddCommentMutation","CustomersQuery","CustomersFilterQuery","CustomerSingleQuery","AddCustomerMutation","UpdateCustomerMutation","AddCustomerCommentMutation","SetKpCallerMutation","SetTeleCallerMutation","SetFieldAgentMutation","UsersQuery","AddCustomerEnquiry","EnquiriesQuery","SingleEnquiryQuery","deleteEnquiry","DataService","apollo","baseURL","params","URLSearchParams","httpOptions1","observe","watchQuery","query","fetchPolicy","variables","condition","tele_caller_id","agent","mutate","mutation","group","phone1","phone2","phone3","errorPolicy","date","Date","toISOString","remarks","RemarksText","type","verified","Customer","NameOfBride","NameOfFather","NameOfMother","MarriageDate","MarriageMonth","parseInt","tele_caller_contact","HouseName","Contact_Number_1","Contact_Number_2","Landmark","locality","post_office","Post_office","added_by_user","Latitude","parseFloat","Longitude","GoogleMapURL","GoogleMapPlusCode","sale_remarks","sale_closed_date","CustomerStatus","isSaleClosed","sale_closed_by","is_verified","cust_id","enquiry","use","Name","PhoneNumber","phone","isWeddingPurchase","marriage_purchase","QtyOfGold","pawan","OptNoCostEMI","emi","PostOfficeNumber","AppComponent","iconSet","icons","events","evt","window","scrollTo","AppModule","imports","withComponents","forRoot","declarations","useClass","bootstrap","routes","path","redirectTo","pathMatch","component","title","canActivate","children","loadChildren","then","m","TelecallerModule","ManagerModule","KpCallerModule","DashboardModule","AppRoutingModule","relativeLinkResolution","exports","url","icon","P500Component","AuthGuard","state","roles","indexOf","bootstrapModule","useJit","preserveWhitespaces","err","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { User } from \"../../models/user\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AuthenticationService {\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(\r\n      JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    console.log(\"curentuser\", this.currentUserSubject);\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(data) {\r\n    return this.http.post<any>(`${environment.apiUrl}auth/local/`, data).pipe(\r\n      map((user) => {\r\n        // login successful if there's a jwt token in the response\r\n        console.log(user);\r\n        if (user.jwt) {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem(\"token\", user.jwt);\r\n          localStorage.setItem(\"username\", user.user.username);\r\n          localStorage.setItem(\"uid\", user.user.id);\r\n          localStorage.setItem(\"user_type\", user.user.UserType);\r\n          localStorage.setItem(\"email\", user.user.email);\r\n          // localStorage.setItem('name', user.data.user_data.name);\r\n          // localStorage.setItem('phone_number', user.data.user_data.phone_number);\r\n          // localStorage.setItem('shop_name', user.data.shops_details[0]?.shop_name);\r\n          // localStorage.setItem('shop_id', user.data.shops_details[0]?.shop);\r\n\r\n          localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n          this.currentUserSubject.next(user);\r\n        }\r\n\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem(\"currentUser\");\r\n    localStorage.removeItem(\"token\");\r\n    this.currentUserSubject.next(null);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { APOLLO_OPTIONS, APOLLO_NAMED_OPTIONS } from \"apollo-angular\";\r\nimport {\r\n  ApolloClientOptions,\r\n  ApolloLink,\r\n  InMemoryCache,\r\n} from \"@apollo/client/core\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { HttpLink } from \"apollo-angular/http\";\r\n\r\nconst uri = \"https://jewel-core.telemarketing.untanglepro.com/graphql\"; //<-- add the URL of the GraphQL server here\r\n\r\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\r\n  const basic = setContext((operation, context) => ({\r\n    headers: {\r\n      Accept: \"charset=utf-8\",\r\n    },\r\n  }));\r\n  // Get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem(\"token\");\r\n  const auth = setContext((operation, context) => ({\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }));\r\n\r\n  return {\r\n    link: ApolloLink.from([basic, auth, httpLink.create({ uri })]),\r\n    cache: new InMemoryCache(),\r\n  };\r\n}\r\n\r\nexport function createNamedApollo(\r\n  httpLink: HttpLink\r\n): Record<string, ApolloClientOptions<any>> {\r\n  const basic = setContext((operation, context) => ({\r\n    headers: {\r\n      Accept: \"charset=utf-8\",\r\n    },\r\n  }));\r\n  return {\r\n    second: {\r\n      name: \"second\",\r\n      link: ApolloLink.from([ basic, httpLink.create({ uri }) ]),\r\n      cache: new InMemoryCache(),\r\n    },\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: APOLLO_OPTIONS,\r\n      useFactory: createApollo,\r\n      deps: [HttpLink],\r\n    },\r\n    {\r\n      provide: APOLLO_NAMED_OPTIONS,\r\n      deps: [HttpLink],\r\n      useFactory: createNamedApollo,\r\n    },\r\n  ],\r\n})\r\nexport class GraphQLModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: '404.component.html'\r\n})\r\nexport class P404Component {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"https://jewel-core.telemarketing.untanglepro.com/\"\r\n};\r\n","export * from './default-layout.component';\r\n","export * from './default-layout';\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DataService } from \"../../data.service\";\r\nimport { first } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"exposed_form.component.html\",\r\n})\r\nexport class ExposedFormComponent {\r\n  @ViewChild(\"usForm\") usForm: NgForm;\r\n\r\n  loginForm: any = {};\r\n  result: any = {};\r\n  returnUrl: string;\r\n  error = \"\";\r\n  loading = false;\r\n\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n  onSubmit() {\r\n    this.loginForm = this.usForm.value;\r\n    console.log(this.loginForm);\r\n    this.loading = true;\r\n    this.dataservice\r\n      .AddEnquiry(this.loginForm)\r\n      .pipe(first())\r\n      .subscribe(\r\n        (data:any) => {\r\n          this.loading = false;\r\n          this.toastr.success(data.message);\r\n        },\r\n        (error) => {\r\n          this.error = error;\r\n          this.loading = false;\r\n          console.log(error);\r\n          this.toastr.error(error.error.message);\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"../../models/user\";\r\nimport { AuthenticationService } from \"../../views/login/authentication.service\";\r\nimport { navItems } from \"../../_nav\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./default-layout.component.html\",\r\n})\r\nexport class DefaultLayoutComponent {\r\n  currentUser: User;\r\n  public sidebarMinimized = false;\r\n  userName = localStorage.getItem(\"username\");\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n    this.authenticationService.currentUser.subscribe(\r\n      (x) => (this.currentUser = x)\r\n    );\r\n    console.log(\"constructor\",this.currentUser.user.UserType)\r\n  }\r\n  public navItems = navItems.filter((item) => item.role == localStorage.getItem(\"user_type\") || item.role == \"\");;\r\n\r\n  toggleMinimize(e) {\r\n    this.sidebarMinimized = e;\r\n    console.log(this.currentUser.user?.UserType);\r\n  }\r\n  logout() {\r\n    this.authenticationService.logout();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n","export default \"<div class=\\\"app flex-row align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <h1 class=\\\"float-left display-3 mr-4\\\">500</h1>\\r\\n          <h4 class=\\\"pt-3\\\">Houston, we have a problem!</h4>\\r\\n          <p class=\\\"text-muted\\\">The page you are looking for is temporarily unavailable.</p>\\r\\n        </div>\\r\\n        <div class=\\\"input-prepend input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\r\\n          <span class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <h2>WEDDING GOLD PURCHASE SCHEME</h2>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form #usForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"shopName\\\"><strong>Name / പേര്</strong></label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" required ngModel placeholder=\\\"Enter your name here\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"phone\\\"><strong>Customer contact number / ഫോൺ നമ്പർ</strong></label>\\r\\n              <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"phone\\\" name=\\\"phone\\\" ngModel required placeholder=\\\"Enter your phone number here\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"HouseName\\\"><strong>House Name / വീട്ടുപേര് </strong></label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"HouseName\\\" name=\\\"HouseName\\\" required ngModel placeholder=\\\"Enter your house Name here\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"PostOfficeNumber\\\"><strong>Post Office number / പോസ്റ്റ് ഓഫീസ് നമ്പർ</strong></label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"PostOfficeNumber\\\" name=\\\"PostOfficeNumber\\\" ngModel required placeholder=\\\"Enter your Post Office Number here\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Landmark\\\"><strong>Landmark </strong></label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Landmark\\\" name=\\\"Landmark\\\" required ngModel placeholder=\\\"Enter your nearest landmark here\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <label for=\\\"marriage_purchase\\\"><strong>വിവാഹ പർച്ചേസ് ?</strong></label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"marriage_purchase\\\" name=\\\"marriage_purchase\\\" required ngModel aria-label=\\\"Default select example\\\">\\r\\n                <option selected value=\\\"true\\\">Yes</option>\\r\\n                <option value=\\\"false\\\">No</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <label for=\\\"pincode\\\"><strong>വിവാഹ തീയതി</strong></label>\\r\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" ngModel id=\\\"date\\\" name=\\\"date\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <label for=\\\"pawan\\\"><strong>ആവിശ്യം ഉള്ള പവൻ</strong></label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"pawan\\\" name=\\\"pawan\\\" required ngModel aria-label=\\\"Default select example\\\">\\r\\n                <option value=\\\"5\\\">5 പവൻ</option>\\r\\n                <option value=\\\"10\\\">10 പവൻ</option>\\r\\n                <option value=\\\"15\\\">15 പവൻ</option>\\r\\n                <option value=\\\"20\\\">20 പവൻ</option>\\r\\n                <option value=\\\"25\\\">25 പവൻ</option>\\r\\n                <option value=\\\"30\\\">30 പവൻ</option>\\r\\n                <option value=\\\">30\\\">30 പവനിൽ കൂടുതൽ </option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"pincode\\\"><strong>വിവാഹ ആവശ്യത്തിനുള്ള പലിശ രഹിത വായ്‌പ പദ്ധതിയിൽ അംഗം ആകാൻ താല്പര്യം?</strong></label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"emi\\\" name=\\\"emi\\\" required ngModel aria-label=\\\"Default select example\\\">\\r\\n              <option selected value=\\\"true\\\">Yes</option>\\r\\n              <option value=\\\"false\\\">No</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { Component, ViewChild } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { first } from \"rxjs/operators\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"login.component.html\",\r\n})\r\nexport class LoginComponent {\r\n  @ViewChild(\"usForm\") usForm: NgForm;\r\n\r\n  loginForm: any = {};\r\n  result: any = {};\r\n  returnUrl: string;\r\n  error = \"\";\r\n  loading = false;\r\n\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    if (this.authenticationService.currentUserValue) {\r\n      this.router.navigate([\"/\"]);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n  onSubmit() {\r\n    this.loginForm = this.usForm.value;\r\n    console.log(this.loginForm);\r\n    this.loading = true;\r\n    this.authenticationService\r\n      .login(this.loginForm)\r\n      .pipe(first())\r\n      .subscribe(\r\n        (data) => {\r\n          this.loading = false;\r\n          this.router.navigate([this.returnUrl]);\r\n          this.toastr.success(\"Login successful\");\r\n        },\r\n        (error) => {\r\n          this.error = error;\r\n          this.loading = false;\r\n          console.log(error.error.message[0].messages[0].message);\r\n          this.toastr.error(\"Error\",error.error.message[0].messages[0].message);\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"../environments/environment\";\r\nimport { Apollo, gql } from \"apollo-angular\";\r\n\r\nconst AgentsQuery = gql`\r\n  query ($tele_caller_id: String, $condition: String) {\r\n    teleCallerContacts(\r\n      sort: $condition\r\n      where: { assigned_telecaller: $tele_caller_id }\r\n    ) {\r\n      id\r\n      Name\r\n      Contact_Number_1\r\n      Contact_Number_2\r\n      Contact_Number_3\r\n      group {\r\n        Name\r\n        Description\r\n      }\r\n      Email\r\n      assigned_telecaller {\r\n        username\r\n        email\r\n      }\r\n      telecaller_remarks {\r\n        RemarksText\r\n        CallHistory {\r\n          event_date_time\r\n          users_permissions_user {\r\n            username\r\n          }\r\n        }\r\n      }\r\n      last_called_date_time\r\n    }\r\n  }\r\n`;\r\nconst AgentsSingleQuery = gql`\r\n  query ($id: ID!) {\r\n    teleCallerContact(id: $id) {\r\n      id\r\n      Name\r\n      Email\r\n      group {\r\n        Name\r\n        Description\r\n      }\r\n      Contact_Number_1\r\n      Contact_Number_2\r\n      Contact_Number_3\r\n      telecaller_remarks {\r\n        RemarksText\r\n        CallHistory {\r\n          event_date_time\r\n          users_permissions_user {\r\n            username\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddAgentMutation = gql`\r\n  mutation (\r\n    $name: String!\r\n    $group: ID!\r\n    $email: String!\r\n    $phone1: Long!\r\n    $phone2: Long!\r\n    $phone3: Long!\r\n  ) {\r\n    createTeleCallerContact(\r\n      input: {\r\n        data: {\r\n          Name: $name\r\n          Email: $email\r\n          Contact_Number_1: $phone1\r\n          Contact_Number_2: $phone2\r\n          Contact_Number_3: $phone3\r\n          group: $group\r\n        }\r\n      }\r\n    ) {\r\n      teleCallerContact {\r\n        id\r\n        Name\r\n        Contact_Number_1\r\n        Contact_Number_2\r\n        Contact_Number_3\r\n        group {\r\n          Name\r\n          Description\r\n        }\r\n        Email\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GroupsQuery = gql`\r\n  query GroupsQuery {\r\n    groups {\r\n      id\r\n      Name\r\n      Description\r\n    }\r\n  }\r\n`;\r\nconst localitiesQuery = gql`\r\n  query {\r\n    localities {\r\n      id\r\n      Name\r\n      post_office {\r\n        Name\r\n        id\r\n        Pincode\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst postOfficesQuery = gql`\r\n  query {\r\n    postOffices {\r\n      id\r\n      Name\r\n      Pincode\r\n      district {\r\n        Name\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst UpdateAgentMutation = gql`\r\n  mutation (\r\n    $id: ID!\r\n    $name: String!\r\n    $group: ID!\r\n    $email: String!\r\n    $phone1: Long!\r\n    $phone2: Long!\r\n    $phone3: Long!\r\n  ) {\r\n    updateTeleCallerContact(\r\n      input: {\r\n        where: { id: $id }\r\n        data: {\r\n          Name: $name\r\n          Email: $email\r\n          Contact_Number_1: $phone1\r\n          Contact_Number_2: $phone2\r\n          Contact_Number_3: $phone3\r\n          group: $group\r\n        }\r\n      }\r\n    ) {\r\n      teleCallerContact {\r\n        id\r\n        Name\r\n        Contact_Number_1\r\n        Contact_Number_2\r\n        Contact_Number_3\r\n        group {\r\n          Name\r\n          Description\r\n        }\r\n        Email\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst DeleteAgentMutation = gql`\r\n  mutation ($id: ID!) {\r\n    deleteTeleCallerContact(input: { where: { id: $id } }) {\r\n      teleCallerContact {\r\n        id\r\n        Name\r\n        Contact_Number_1\r\n        Contact_Number_2\r\n        Contact_Number_3\r\n        group {\r\n          Name\r\n          Description\r\n        }\r\n        Email\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddCommentMutation = gql`\r\n  mutation ($id: ID!, $remarks: String!, $date: DateTime!) {\r\n    updateTeleCallerContact(\r\n      input: {\r\n        where: { id: $id }\r\n        data: {\r\n          telecaller_remarks: {\r\n            RemarksText: $remarks\r\n            CallHistory: { event_date_time: $date }\r\n          }\r\n          last_called_date_time: $date\r\n        }\r\n      }\r\n    ) {\r\n      teleCallerContact {\r\n        id\r\n        Name\r\n        Email\r\n        group {\r\n          Name\r\n          Description\r\n        }\r\n        Contact_Number_1\r\n        Contact_Number_2\r\n        Contact_Number_3\r\n        telecaller_remarks {\r\n          RemarksText\r\n          CallHistory {\r\n            event_date_time\r\n            users_permissions_user {\r\n              username\r\n            }\r\n          }\r\n        }\r\n        last_called_date_time\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CustomersQuery = gql`\r\n  query {\r\n    customers {\r\n      id\r\n      is_verified\r\n      NameOfBride\r\n      NameOfFather\r\n      NameOfMother\r\n      MarriageDate\r\n      Contact_Number_1\r\n      Contact_Number_2\r\n      MarriageMonth\r\n      kp_caller_assigned {\r\n        email\r\n        username\r\n      }\r\n      tele_caller_contact {\r\n        Name\r\n        id\r\n      }\r\n      created_at\r\n      FieldReport {\r\n        id\r\n        FinancialBackground\r\n        QtyOfGold\r\n        PreferredWeddingSet\r\n        PlanningForReplacementAfterWedding\r\n        OldGoldExchangeQty\r\n        NoCostEmiRequired\r\n        EmiTenure\r\n        EmiIntervals\r\n        TokenAdvance\r\n        RateAdvance\r\n        EnquiriesFromOthers\r\n        AdvancePaidToOtherJewellery\r\n        NumberOfNewMarriageAddress\r\n      }\r\n      Address {\r\n        id\r\n        HouseName\r\n        Landmark\r\n        locality {\r\n          Name\r\n        }\r\n        post_office {\r\n          Name\r\n          Pincode\r\n          district {\r\n            Name\r\n          }\r\n        }\r\n        GeoLocation {\r\n          Latitude\r\n          Longitude\r\n          GoogleMapURL\r\n          GoogleMapPlusCode\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CustomersFilterQuery = gql`\r\n  query (\r\n    $is_verified: Boolean\r\n    $kp_caller_assigned_null: Boolean\r\n    $kp_id: ID\r\n    $added_by_user: ID\r\n    $MarriageMonth_null: Boolean\r\n    $MarriageDate_null: Boolean\r\n    $MarriageMonthOR_null: Boolean\r\n    $MarriageDateOR_null: Boolean\r\n    $MarriageDate_gte: String\r\n    $MarriageDate_lte: String\r\n    $condition: String\r\n  ) {\r\n    customers(\r\n      sort: $condition\r\n      where: {\r\n        is_verified: $is_verified\r\n        kp_caller_assigned_null: $kp_caller_assigned_null\r\n        kp_caller_assigned: $kp_id\r\n        MarriageDate_null: $MarriageDate_null\r\n        MarriageMonth_null: $MarriageMonth_null\r\n        added_by_user: $added_by_user\r\n        MarriageDate_gte: $MarriageDate_gte\r\n        MarriageDate_lte: $MarriageDate_lte\r\n        _or: [\r\n          { MarriageDate_null: $MarriageDateOR_null }\r\n          { MarriageMonth_null: $MarriageMonthOR_null }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      is_verified\r\n      NameOfBride\r\n      NameOfFather\r\n      NameOfMother\r\n      MarriageDate\r\n      Contact_Number_1\r\n      Contact_Number_2\r\n      MarriageMonth\r\n      kp_caller_assigned {\r\n        email\r\n        username\r\n      }\r\n      added_by_user {\r\n        id\r\n        username\r\n      }\r\n      tele_caller_contact {\r\n        Name\r\n        id\r\n      }\r\n      created_at\r\n      FieldReport {\r\n        id\r\n        FinancialBackground\r\n        QtyOfGold\r\n        PreferredWeddingSet\r\n        PlanningForReplacementAfterWedding\r\n        OldGoldExchangeQty\r\n        NoCostEmiRequired\r\n        EmiTenure\r\n        EmiIntervals\r\n        TokenAdvance\r\n        RateAdvance\r\n        EnquiriesFromOthers\r\n        AdvancePaidToOtherJewellery\r\n        NumberOfNewMarriageAddress\r\n      }\r\n      Address {\r\n        id\r\n        HouseName\r\n        Landmark\r\n        locality {\r\n          Name\r\n        }\r\n        post_office {\r\n          Name\r\n          Pincode\r\n          district {\r\n            Name\r\n          }\r\n        }\r\n        GeoLocation {\r\n          Latitude\r\n          Longitude\r\n          GoogleMapURL\r\n          GoogleMapPlusCode\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CustomerSingleQuery = gql`\r\n  query ($id: ID!) {\r\n    customer(id: $id) {\r\n      id\r\n      is_verified\r\n      NameOfBride\r\n      NameOfFather\r\n      NameOfMother\r\n      Contact_Number_1\r\n      Contact_Number_2\r\n      MarriageDate\r\n      MarriageMonth\r\n      tele_caller_contact {\r\n        Name\r\n        id\r\n      }\r\n      kp_caller_assigned {\r\n        email\r\n        username\r\n      }\r\n      created_at\r\n      FieldReport {\r\n        id\r\n        FinancialBackground\r\n        QtyOfGold\r\n        PreferredWeddingSet\r\n        PlanningForReplacementAfterWedding\r\n        OldGoldExchangeQty\r\n        NoCostEmiRequired\r\n        EmiTenure\r\n        EmiIntervals\r\n        TokenAdvance\r\n        RateAdvance\r\n        EnquiriesFromOthers\r\n        AdvancePaidToOtherJewellery\r\n        NumberOfNewMarriageAddress\r\n        images {\r\n          name\r\n          url\r\n          previewUrl\r\n        }\r\n        location {\r\n          Latitude\r\n          Longitude\r\n          GoogleMapURL\r\n          GoogleMapPlusCode\r\n        }\r\n      }\r\n      Address {\r\n        id\r\n        HouseName\r\n        Landmark\r\n        locality {\r\n          Name\r\n        }\r\n        post_office {\r\n          Name\r\n          Pincode\r\n          district {\r\n            Name\r\n          }\r\n        }\r\n        GeoLocation {\r\n          Latitude\r\n          Longitude\r\n          GoogleMapURL\r\n          GoogleMapPlusCode\r\n        }\r\n      }\r\n      isSaleClosed\r\n      CustomerStatus\r\n      sale_closed_by {\r\n        id\r\n        email\r\n        username\r\n      }\r\n      sale_closed_date\r\n      sale_remarks\r\n      TelecallerRemarks {\r\n        RemarksText\r\n        CallHistory {\r\n          event_date_time\r\n          users_permissions_user {\r\n            username\r\n            email\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddCustomerMutation = gql`\r\n  mutation (\r\n    $NameOfBride: String!\r\n    $NameOfFather: String!\r\n    $NameOfMother: String!\r\n    $Contact_Number_1: String!\r\n    $Contact_Number_2: String!\r\n    $MarriageDate: Date!\r\n    $MarriageMonth: Int!\r\n    $tele_caller_contact: ID!\r\n    $HouseName: String!\r\n    $Landmark: String!\r\n    $locality: ID!\r\n    $added_by_user: ID!\r\n    $post_office: ID\r\n    $Latitude: Float\r\n    $Longitude: Float\r\n    $GoogleMapURL: String\r\n    $GoogleMapPlusCode: String\r\n  ) {\r\n    createCustomer(\r\n      input: {\r\n        data: {\r\n          NameOfBride: $NameOfBride\r\n          NameOfFather: $NameOfFather\r\n          NameOfMother: $NameOfMother\r\n          MarriageDate: $MarriageDate\r\n          MarriageMonth: $MarriageMonth\r\n          Contact_Number_1: $Contact_Number_1\r\n          Contact_Number_2: $Contact_Number_2\r\n          tele_caller_contact: $tele_caller_contact\r\n          added_by_user: $added_by_user\r\n          Address: {\r\n            HouseName: $HouseName\r\n            Landmark: $Landmark\r\n            locality: $locality\r\n            post_office: $post_office\r\n            GeoLocation: {\r\n              Latitude: $Latitude\r\n              Longitude: $Longitude\r\n              GoogleMapURL: $GoogleMapURL\r\n              GoogleMapPlusCode: $GoogleMapPlusCode\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ) {\r\n      customer {\r\n        id\r\n        NameOfBride\r\n        NameOfFather\r\n        NameOfMother\r\n        MarriageDate\r\n        MarriageMonth\r\n        Contact_Number_1\r\n        Contact_Number_2\r\n        tele_caller_contact {\r\n          Name\r\n          id\r\n        }\r\n        created_at\r\n        Address {\r\n          id\r\n          HouseName\r\n          Landmark\r\n          locality {\r\n            Name\r\n          }\r\n          post_office {\r\n            Name\r\n            Pincode\r\n            district {\r\n              Name\r\n            }\r\n          }\r\n          GeoLocation {\r\n            Latitude\r\n            Longitude\r\n            GoogleMapURL\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst UpdateCustomerMutation = gql`\r\n  mutation (\r\n    $id: ID!\r\n    $sale_remarks: String!\r\n    $sale_closed_date: DateTime!\r\n    $CustomerStatus: String\r\n    $isSaleClosed: Boolean\r\n    $sale_closed_by: ID\r\n  ) {\r\n    updateCustomer(\r\n      input: {\r\n        where: { id: $id }\r\n        data: {\r\n          CustomerStatus: $CustomerStatus\r\n          isSaleClosed: $isSaleClosed\r\n          sale_remarks: $sale_remarks\r\n          sale_closed_date: $sale_closed_date\r\n          sale_closed_by: $sale_closed_by\r\n          kp_caller_assigned: null\r\n        }\r\n      }\r\n    ) {\r\n      customer {\r\n        id\r\n        NameOfBride\r\n        NameOfFather\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddCustomerCommentMutation = gql`\r\n  mutation (\r\n    $id: ID!\r\n    $remarks: String!\r\n    $date: DateTime!\r\n    $is_verified: Boolean\r\n  ) {\r\n    updateCustomer(\r\n      input: {\r\n        where: { id: $id }\r\n        data: {\r\n          TelecallerRemarks: {\r\n            RemarksText: $remarks\r\n            CallHistory: { event_date_time: $date }\r\n          }\r\n          last_called_time: $date\r\n          is_verified: $is_verified\r\n        }\r\n      }\r\n    ) {\r\n      customer {\r\n        id\r\n        is_verified\r\n        NameOfBride\r\n        NameOfFather\r\n        NameOfMother\r\n        MarriageDate\r\n        MarriageMonth\r\n        last_called_time\r\n        tele_caller_contact {\r\n          Name\r\n          id\r\n        }\r\n        created_at\r\n        Address {\r\n          id\r\n          HouseName\r\n          Landmark\r\n          locality {\r\n            Name\r\n          }\r\n          post_office {\r\n            Name\r\n            Pincode\r\n            district {\r\n              Name\r\n            }\r\n          }\r\n          GeoLocation {\r\n            Latitude\r\n            Longitude\r\n            GoogleMapURL\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SetKpCallerMutation = gql`\r\n  mutation ($id: ID!, $cust_id: [ID!]!) {\r\n    updateUser(input: { where: { id: $id }, data: { kp_customer: $cust_id } }) {\r\n      user {\r\n        id\r\n        kp_customer {\r\n          id\r\n          NameOfBride\r\n          NameOfFather\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SetTeleCallerMutation = gql`\r\n  mutation ($id: ID!, $cust_id: [ID!]!) {\r\n    updateUser(\r\n      input: { where: { id: $id }, data: { tele_caller_contacts: $cust_id } }\r\n    ) {\r\n      user {\r\n        id\r\n        tele_caller_contacts {\r\n          id\r\n          Name\r\n          Contact_Number_1\r\n          Email\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SetFieldAgentMutation = gql`\r\n  mutation ($id: ID!, $cust_id: [ID!]!) {\r\n    updateUser(input: { where: { id: $id }, data: { customers: $cust_id } }) {\r\n      user {\r\n        id\r\n        customers {\r\n          NameOfBride\r\n          id\r\n          NameOfFather\r\n          MarriageDate\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst UsersQuery = gql`\r\n  query ($type: String!) {\r\n    users(where: { UserType: $type }) {\r\n      id\r\n      username\r\n      email\r\n      role {\r\n        id\r\n        name\r\n        type\r\n      }\r\n      UserType\r\n    }\r\n  }\r\n`;\r\nconst AddCustomerEnquiry = gql`\r\n  mutation (\r\n    $Name: String!\r\n    $PhoneNumber: String!\r\n    $isWeddingPurchase: Boolean!\r\n    $MarriageDate: Date!\r\n    $QtyOfGold: Int!\r\n    $OptNoCostEMI: Boolean!\r\n    $HouseName: String!\r\n    $Landmark: String!\r\n    $PostOfficeNumber: Long!\r\n  ) {\r\n    createCustomerEnquiry(\r\n      input: {\r\n        data: {\r\n          Name: $Name\r\n          PhoneNumber: $PhoneNumber\r\n          isWeddingPurchase: $isWeddingPurchase\r\n          MarriageDate: $MarriageDate\r\n          QtyOfGold: $QtyOfGold\r\n          OptNoCostEMI: $OptNoCostEMI\r\n          HouseName: $HouseName\r\n          Landmark: $Landmark\r\n          PostOfficeNumber: $PostOfficeNumber\r\n        }\r\n      }\r\n    ) {\r\n      customerEnquiry {\r\n        id\r\n        Name\r\n        PhoneNumber\r\n        isWeddingPurchase\r\n        MarriageDate\r\n        QtyOfGold\r\n        OptNoCostEMI\r\n        HouseName\r\n        Landmark\r\n        PostOfficeNumber\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst EnquiriesQuery = gql`\r\n  query {\r\n    customerEnquiries {\r\n      id\r\n      Name\r\n      PhoneNumber\r\n      HouseName\r\n      Landmark\r\n      PostOfficeNumber\r\n      isWeddingPurchase\r\n      MarriageDate\r\n      QtyOfGold\r\n      OptNoCostEMI\r\n    }\r\n  }\r\n`;\r\nconst SingleEnquiryQuery = gql`\r\n  query ($id: ID!) {\r\n    customerEnquiry(id: $id) {\r\n      id\r\n      Name\r\n      PhoneNumber\r\n      HouseName\r\n      Landmark\r\n      PostOfficeNumber\r\n      isWeddingPurchase\r\n      MarriageDate\r\n      QtyOfGold\r\n      OptNoCostEMI\r\n    }\r\n  }\r\n`;\r\nconst deleteEnquiry = gql`\r\n  mutation ($id: ID!) {\r\n    deleteCustomerEnquiry(input: { where: { id: $id } }) {\r\n      customerEnquiry {\r\n        Name\r\n        PhoneNumber\r\n        HouseName\r\n        Landmark\r\n      }\r\n    }\r\n  }\r\n`;\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DataService {\r\n  baseURL = environment.apiUrl;\r\n  params: URLSearchParams = new URLSearchParams();\r\n\r\n  constructor(private http: HttpClient, private apollo: Apollo) {}\r\n\r\n  Login(data): Observable<any> {\r\n    const httpOptions1: Object = {\r\n      observe: \"response\",\r\n    };\r\n    return this.http.post(this.baseURL + `auth/login/`, data, httpOptions1);\r\n  }\r\n  getAgents() {\r\n    return this.apollo.watchQuery({\r\n      query: AgentsQuery,\r\n      fetchPolicy: \"no-cache\",\r\n    });\r\n  }\r\n  getEnquiries() {\r\n    return this.apollo.watchQuery({\r\n      query: EnquiriesQuery,\r\n      fetchPolicy: \"no-cache\",\r\n    });\r\n  }\r\n  getSingleEnquiry(id) {\r\n    return this.apollo.watchQuery({\r\n      query: SingleEnquiryQuery,\r\n      fetchPolicy: \"no-cache\",\r\n      variables: {\r\n        id: id,\r\n      },\r\n    });\r\n  }\r\n  getfilteredAgents(id, condition) {\r\n    return this.apollo.watchQuery({\r\n      query: AgentsQuery,\r\n      fetchPolicy: \"no-cache\",\r\n      variables: {\r\n        tele_caller_id: id,\r\n        condition: condition,\r\n      },\r\n    });\r\n  }\r\n  getSingleAgent(id) {\r\n    return this.apollo.watchQuery({\r\n      query: AgentsSingleQuery,\r\n      fetchPolicy: \"no-cache\",\r\n      variables: {\r\n        id: id,\r\n      },\r\n    });\r\n  }\r\n  AddAgent(agent) {\r\n    return this.apollo.mutate({\r\n      mutation: AddAgentMutation,\r\n      variables: {\r\n        name: agent.name,\r\n        email: agent.email,\r\n        group: agent.group,\r\n        phone1: agent.phone1,\r\n        phone2: agent.phone2,\r\n        phone3: agent.phone3,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  EditAgent(id, agent) {\r\n    return this.apollo.mutate({\r\n      mutation: UpdateAgentMutation,\r\n      variables: {\r\n        id: id,\r\n        name: agent.name,\r\n        email: agent.email,\r\n        group: agent.group,\r\n        phone1: agent.phone1,\r\n        phone2: agent.phone2,\r\n        phone3: agent.phone3,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  AddComment(id, agent) {\r\n    let date = new Date();\r\n    console.log(date.toISOString());\r\n    return this.apollo.mutate({\r\n      mutation: AddCommentMutation,\r\n      variables: {\r\n        id: id,\r\n        remarks: localStorage.getItem(\"username\") + \": \" + agent.RemarksText,\r\n        date: new Date().toISOString(),\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  DeleteAgent(id) {\r\n    return this.apollo.mutate({\r\n      mutation: DeleteAgentMutation,\r\n      variables: {\r\n        id: id,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  getGroups() {\r\n    return this.apollo.watchQuery({\r\n      query: GroupsQuery,\r\n      fetchPolicy: \"no-cache\",\r\n    });\r\n  }\r\n  getLocalities() {\r\n    return this.apollo.watchQuery({\r\n      query: localitiesQuery,\r\n      fetchPolicy: \"no-cache\",\r\n    });\r\n  }\r\n  getPostOffices() {\r\n    return this.apollo.watchQuery({\r\n      query: postOfficesQuery,\r\n      fetchPolicy: \"no-cache\",\r\n    });\r\n  }\r\n  getCustomers() {\r\n    return this.apollo.watchQuery({\r\n      query: CustomersQuery,\r\n      fetchPolicy: \"no-cache\",\r\n    });\r\n  }\r\n  getUsers(type) {\r\n    return this.apollo.watchQuery({\r\n      query: UsersQuery,\r\n      fetchPolicy: \"no-cache\",\r\n      variables: { type: type },\r\n    });\r\n  }\r\n  getCustomersFilter(verified) {\r\n    return this.apollo.watchQuery({\r\n      query: CustomersFilterQuery,\r\n      fetchPolicy: \"no-cache\",\r\n      variables: verified,\r\n    });\r\n  }\r\n  getSingleCustomer(id) {\r\n    return this.apollo.watchQuery({\r\n      query: CustomerSingleQuery,\r\n      fetchPolicy: \"no-cache\",\r\n      variables: {\r\n        id: id,\r\n      },\r\n    });\r\n  }\r\n  Addcustomer(Customer) {\r\n    return this.apollo.mutate({\r\n      mutation: AddCustomerMutation,\r\n      variables: {\r\n        NameOfBride: Customer.NameOfBride,\r\n        NameOfFather: Customer.NameOfFather,\r\n        NameOfMother: Customer.NameOfMother,\r\n        MarriageDate: Customer.MarriageDate,\r\n        MarriageMonth: parseInt(Customer.MarriageMonth),\r\n        tele_caller_contact: Customer.tele_caller_contact,\r\n        HouseName: Customer.HouseName,\r\n        Contact_Number_1: Customer.Contact_Number_1,\r\n        Contact_Number_2: Customer.Contact_Number_2,\r\n        Landmark: Customer.Landmark,\r\n        locality: Customer.locality,\r\n        post_office: Customer.Post_office,\r\n        added_by_user: localStorage.getItem(\"uid\"),\r\n        Latitude: parseFloat(Customer.Latitude),\r\n        Longitude: parseFloat(Customer.Longitude),\r\n        GoogleMapURL: Customer.GoogleMapURL,\r\n        GoogleMapPlusCode: Customer.GoogleMapPlusCode,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  Updatecustomer(id,Customer) {\r\n    return this.apollo.mutate({\r\n      mutation: UpdateCustomerMutation,\r\n      variables: {\r\n        id: id,\r\n        sale_remarks: Customer.sale_remarks,\r\n        sale_closed_date: Customer.sale_closed_date,\r\n        CustomerStatus: Customer.CustomerStatus,\r\n        isSaleClosed: Customer.isSaleClosed,\r\n        sale_closed_by: Customer.sale_closed_by,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  AddCustomerComment(id, agent) {\r\n    return this.apollo.mutate({\r\n      mutation: AddCustomerCommentMutation,\r\n      variables: {\r\n        id: id,\r\n        remarks: localStorage.getItem(\"username\") + \": \" + agent.RemarksText,\r\n        date: new Date().toISOString(),\r\n        is_verified: agent.is_verified,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  SetKpCaller(id, cust_id) {\r\n    return this.apollo.mutate({\r\n      mutation: SetKpCallerMutation,\r\n      variables: {\r\n        id: id,\r\n        cust_id: cust_id,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  SetFieldAgent(id, cust_id) {\r\n    return this.apollo.mutate({\r\n      mutation: SetFieldAgentMutation,\r\n      variables: {\r\n        id: id,\r\n        cust_id: cust_id,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  SetTeleCaller(id, cust_id) {\r\n    return this.apollo.mutate({\r\n      mutation: SetTeleCallerMutation,\r\n      variables: {\r\n        id: id,\r\n        cust_id: cust_id,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  AddEnquiry(enquiry) {\r\n    let date = new Date();\r\n    console.log(date.toISOString());\r\n    return this.apollo.use(\"second\").mutate({\r\n      mutation: AddCustomerEnquiry,\r\n      variables: {\r\n        Name: enquiry.name,\r\n        PhoneNumber: enquiry.phone,\r\n        isWeddingPurchase: enquiry.marriage_purchase == \"true\" ? true : false,\r\n        MarriageDate: enquiry.date,\r\n        QtyOfGold: parseInt(enquiry.pawan),\r\n        OptNoCostEMI: enquiry.emi == \"true\" ? true : false,\r\n        HouseName: enquiry.HouseName,\r\n        Landmark: enquiry.Landmark,\r\n        PostOfficeNumber: enquiry.PostOfficeNumber,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  DeleteEnquiry(id) {\r\n    return this.apollo.mutate({\r\n      mutation: deleteEnquiry,\r\n      variables: {\r\n        id: id,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { IconSetService } from '@coreui/icons-angular';\r\nimport { freeSet } from '@coreui/icons';\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'body',\r\n  template: '<router-outlet></router-outlet>',\r\n  providers: [IconSetService],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    public iconSet: IconSetService\r\n  ) {\r\n    // iconSet singleton\r\n    iconSet.icons = { ...freeSet };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((evt) => {\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppComponent } from './app.component';\r\n// Import containers\r\nimport { DefaultLayoutComponent } from './containers';\r\nimport { P404Component } from './views/error/404.component';\r\nimport { P500Component } from './views/error/500.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\n\r\n// const APP_CONTAINERS = [\r\n//   DefaultLayoutComponent\r\n// ];\r\n\r\nimport {\r\n  AppAsideModule,\r\n  AppBreadcrumbModule,\r\n  AppHeaderModule,\r\n  AppFooterModule,\r\n  AppSidebarModule,\r\n} from '@coreui/angular';\r\n\r\n// Import routing module\r\nimport { AppRoutingModule } from './app.routing';\r\n// Import 3rd party components\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\n// import { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { GraphQLModule } from './graphql.module';\r\nimport { ExposedFormComponent } from './views/exposed_form/exposed_form.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AgGridModule.withComponents([]),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    AppAsideModule,\r\n    AppBreadcrumbModule.forRoot(),\r\n    ToastrModule.forRoot(),\r\n    AppFooterModule,\r\n    AppHeaderModule,\r\n    AppSidebarModule,\r\n    BsDropdownModule.forRoot(),\r\n    GraphQLModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    P404Component,\r\n    P500Component,\r\n    LoginComponent,\r\n    ExposedFormComponent,\r\n    DefaultLayoutComponent,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: HashLocationStrategy\r\n    },\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n// Import Containers\r\nimport { DefaultLayoutComponent } from './containers';\r\nimport { P404Component } from './views/error/404.component';\r\nimport { P500Component } from './views/error/500.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { AuthGuard } from './views/login/auth.guard';\r\nimport { ExposedFormComponent } from './views/exposed_form/exposed_form.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'dashboard',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '404',\r\n    component: P404Component,\r\n    data: {\r\n      title: 'Page 404'\r\n    }\r\n  },\r\n  {\r\n    path: '500',\r\n    component: P500Component,\r\n    data: {\r\n      title: 'Page 500'\r\n    }\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    data: {\r\n      title: 'Login Page'\r\n    }\r\n  },\r\n  {\r\n    path: 'enquiry_form',\r\n    component: ExposedFormComponent,\r\n    data: {\r\n      title: 'WEDDING GOLD PURCHASE SCHEME'\r\n    }\r\n  },\r\n  {\r\n    path: '',\r\n    component: DefaultLayoutComponent,\r\n    data: {\r\n      title: 'Home'\r\n    },\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'telecaller',\r\n        loadChildren: () => import('./views/telecaller/telecaller.module').then(m => m.TelecallerModule)\r\n      },\r\n      {\r\n        path: 'manager',\r\n        loadChildren: () => import('./views/manager/manager.module').then(m => m.ManagerModule)\r\n      },\r\n      {\r\n        path: 'kpcaller',\r\n        loadChildren: () => import('./views/kpcaller/kpcaller.module').then(m => m.KpCallerModule)\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./views/dashboard/dashboard.module').then(m => m.DashboardModule)\r\n      }\r\n    ]\r\n  },\r\n  { path: '**', component: P404Component }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { INavData } from '@coreui/angular';\r\n\r\nexport const navItems: INavData[] = [\r\n  {\r\n    name: 'Dashboard',\r\n    url: '/dashboard',\r\n    icon: 'icon-speedometer',\r\n    role: \"\"\r\n  },\r\n  {\r\n    name: 'Agents',\r\n    url: '/telecaller/agents',\r\n    icon: 'icon-note',\r\n    role: \"TELE_CALLER\"\r\n  },\r\n  {\r\n    name: 'Customers',\r\n    url: '/telecaller/customers',\r\n    icon: 'icon-basket-loaded',\r\n    role: \"TELE_CALLER\"\r\n  },\r\n  {\r\n    name: 'Verification',\r\n    url: '/kpcaller/verification',\r\n    icon: 'icon-cursor',\r\n    role: \"KP_CALLER\"\r\n  },\r\n  {\r\n    name: 'Assigned',\r\n    url: '/kpcaller/assigned',\r\n    icon: 'icon-cursor',\r\n    role: \"KP_CALLER\"\r\n  },\r\n  {\r\n    name: 'DNF',\r\n    url: '/kpcaller/dnf',\r\n    icon: 'icon-cursor',\r\n    role: \"KP_CALLER\"\r\n  },\r\n  {\r\n    name: 'Verified List',\r\n    url: '/manager/verified_list',\r\n    icon: 'icon-phone',\r\n    role: \"MANAGER\"\r\n  },\r\n  {\r\n    name: 'Agents List',\r\n    url: '/manager/agents',\r\n    icon: 'icon-phone',\r\n    role: \"MANAGER\"\r\n  },\r\n  {\r\n    name: 'Customers',\r\n    url: '/manager/customers',\r\n    icon: 'icon-phone',\r\n    role: \"MANAGER\"\r\n  },\r\n  {\r\n    name: 'Enquiries',\r\n    url: '/manager/enquiries',\r\n    icon: 'icon-phone',\r\n    role: \"MANAGER\"\r\n  },\r\n];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: '500.component.html'\r\n})\r\nexport class P500Component {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","export default \"<app-header [navbarBrandRouterLink]=\\\"['/dashboard']\\\" [fixed]=\\\"true\\\"\\r\\n  [navbarBrandFull]=\\\"{src: 'assets/img/brand/logo.jpg',width:200,alt: 'CartIntoCar Logo'}\\\"\\r\\n  [navbarBrandMinimized]=\\\"{src: 'assets/img/brand/logo.jpg', width: 200, alt: 'CartIntoCar Logo'}\\\"\\r\\n  [sidebarToggler]=\\\"'lg'\\\">\\r\\n  <ul class=\\\"nav navbar-nav ml-auto\\\">\\r\\n    {{userName}}\\r\\n    <li class=\\\"nav-item dropdown\\\" dropdown placement=\\\"bottom right\\\">\\r\\n      <a class=\\\"nav-link\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"\\r\\n        dropdownToggle (click)=\\\"false\\\">\\r\\n        <img src=\\\"assets/img/avatars/6.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\" />\\r\\n      </a>\\r\\n      <div class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu aria-labelledby=\\\"simple-dropdown\\\">\\r\\n        <div class=\\\"dropdown-header text-center\\\"><strong>Settings</strong></div>\\r\\n        <a class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user\\\"></i>{{userName}}</a>\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-lock\\\"></i> Logout</a>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n</app-header>\\r\\n<div class=\\\"app-body\\\">\\r\\n  <app-sidebar #appSidebar [fixed]=\\\"true\\\" [display]=\\\"'lg'\\\" [minimized]=\\\"sidebarMinimized\\\"\\r\\n    (minimizedChange)=\\\"toggleMinimize($event)\\\">\\r\\n    <app-sidebar-nav [navItems]=\\\"navItems\\\"></app-sidebar-nav>\\r\\n    <app-sidebar-minimizer></app-sidebar-minimizer>\\r\\n  </app-sidebar>\\r\\n  <!-- Main content -->\\r\\n  <main class=\\\"main\\\">\\r\\n    <cui-breadcrumb>\\r\\n    </cui-breadcrumb>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\\r\\n<app-footer>\\r\\n  <span><a>Jewel Telecaller</a> &copy; 2021 jewel.</span>\\r\\n  <!-- <span class=\\\"ml-auto\\\">Powered by <a href=\\\"https://www.upsquad.in\\\">upsquad</a></span> -->\\r\\n</app-footer>\";","export default \"<div class=\\\"app flex-row align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <h1 class=\\\"float-left display-3 mr-4\\\">404</h1>\\r\\n          <h4 class=\\\"pt-3\\\">Oops! You're lost.</h4>\\r\\n          <p class=\\\"text-muted\\\">The page you are looking for was not found.</p>\\r\\n        </div>\\r\\n        <div class=\\\"input-prepend input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\r\\n          <span class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- <div class=\\\"app-body bg-image\\\">\\r\\n  <main class=\\\"main d-flex align-items-center\\\" style=\\\"background-color: rgba(0, 0, 0, 0.8);\\\">\\r\\n    <div class=\\\"login-box\\\">\\r\\n      <div class=\\\"card p-4\\\" style=\\\"width: fit-content;\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <form>\\r\\n            <h1>Login</h1>\\r\\n            <p class=\\\"text-muted\\\">Welcome back! Please log in to your account</p>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\r\\n              </div>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" autocomplete=\\\"username\\\" required>\\r\\n            </div>\\r\\n            <div class=\\\"input-group mb-4\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\r\\n              </div>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" autocomplete=\\\"current-password\\\"\\r\\n                required>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\">Login</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n</div> -->\\r\\n<!-- <div class=\\\"bg-image\\\"> -->\\r\\n<div class=\\\"d-md-flex h-md-100 align-items-center\\\">\\r\\n  <div class=\\\"col-md-6 p-0 bg-black h-md-100 login-screen\\\">\\r\\n    <div class=\\\"text-white d-md-flex align-items-center h-100 text-center justify-content-center\\\">\\r\\n      <div class=\\\"container-fluid bg-image\\\" style=\\\" height: 100vh \\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-6 p-0 bg-white h-md-100\\\">\\r\\n    <div class=\\\"d-md-flex align-items-center h-md-100 justify-content-center\\\">\\r\\n      <div class=\\\"container-fluid fallback-image\\\" style=\\\" height: 100vh \\\">\\r\\n        <form class=\\\"login-box\\\" #usForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <img src='assets/img/brand/logo.jpg' width=\\\"300\\\" /> \\r\\n          <h3 class=\\\"mt-3\\\">JEWEL Telecaller</h3>\\r\\n          <p class=\\\"text-muted\\\">Welcome back! Please log in to your account</p>\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" id=\\\"login\\\" maxlength=\\\"80\\\" size=\\\"30\\\" ngModel\\r\\n              value=\\\"\\\" name=\\\"identifier\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"input-group mb-4\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\r\\n            </div>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" size=\\\"30\\\" ngModel\\r\\n              name=\\\"password\\\" value=\\\"\\\" required>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"row\\\"> -->\\r\\n          <!-- <div class=\\\"col-6\\\"> -->\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-lg px-4\\\" style=\\\"background-color: #821E36; color: white;\\\">\\r\\n            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\">\\r\\n            </span>Login\\r\\n          </button>\\r\\n          <!-- </div> -->\\r\\n          <!-- </div> -->\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- </div> -->\";","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const currentUser: any = this.authenticationService.currentUserValue;\r\n    if (currentUser) {\r\n      console.log(currentUser, 'authguard', route.data.roles);\r\n      // check if route is restricted by role\r\n      if (\r\n        route.data.roles &&\r\n        route.data.roles.indexOf(currentUser.user.UserType) === -1\r\n      ) {\r\n        // role not authorised so redirect to home page\r\n        this.router.navigate(['/500']);\r\n        console.log('authguard failed');\r\n        return false;\r\n      }\r\n      // authorised so return true\r\n      return true;\r\n    }\r\n    console.log(currentUser, 'authguard il kerilla', route.data.roles);\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n    return false;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n  useJit: true,\r\n  preserveWhitespaces: true\r\n})\r\n  .catch(err => console.log(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}