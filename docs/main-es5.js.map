{"version":3,"sources":["webpack:///src/app/views/login/authentication.service.ts","webpack:///src/app/graphql.module.ts","webpack:///src/app/views/error/404.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/containers/default-layout/index.ts","webpack:///src/app/containers/index.ts","webpack:///src/app/views/exposed_form/exposed_form.component.ts","webpack:///src/app/containers/default-layout/default-layout.component.ts","webpack:///src/app/views/error/500.component.html","webpack:///src/app/views/exposed_form/exposed_form.component.html","webpack:///src/app/views/login/login.component.ts","webpack:///src/app/data.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/_nav.ts","webpack:///src/app/views/error/500.component.ts","webpack:///src/app/containers/default-layout/default-layout.component.html","webpack:///src/app/views/error/404.component.html","webpack:///src/app/views/login/login.component.html","webpack:///src/app/views/login/auth.guard.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AuthenticationService","http","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","console","log","value","data","post","apiUrl","pipe","user","jwt","setItem","username","id","UserType","email","stringify","next","removeItem","providedIn","uri","createApollo","httpLink","basic","operation","context","headers","Accept","token","auth","Authorization","link","from","create","cache","createNamedApollo","second","name","GraphQLModule","providers","provide","useFactory","deps","P404Component","template","environment","production","ExposedFormComponent","dataservice","route","router","loginForm","result","error","loading","returnUrl","snapshot","queryParams","usForm","AddEnquiry","subscribe","alert","message","selector","DefaultLayoutComponent","authenticationService","sidebarMinimized","userName","navItems","filter","item","role","x","e","logout","navigate","LoginComponent","currentUserValue","login","messages","AgentsQuery","AgentsSingleQuery","AddAgentMutation","GroupsQuery","localitiesQuery","UpdateAgentMutation","DeleteAgentMutation","AddCommentMutation","CustomersQuery","CustomersFilterQuery","CustomerSingleQuery","AddCustomerMutation","AddCustomerCommentMutation","SetKpCallerMutation","SetTeleCallerMutation","SetFieldAgentMutation","UsersQuery","AddCustomerEnquiry","DataService","apollo","baseURL","params","URLSearchParams","httpOptions1","observe","httpOptions","get","watchQuery","query","variables","tele_caller_id","agent","mutate","mutation","group","phone1","phone2","phone3","errorPolicy","date","Date","toISOString","remarks","RemarksText","type","verified","Customer","NameOfBride","NameOfFather","NameOfMother","MarriageDate","MarriageMonth","parseInt","tele_caller_contact","HouseName","ContactNumber_1","ContactNumber_2","Landmark","locality","is_verified","cust_id","enquiry","use","Name","PhoneNumber","phone","Address","address","isWeddingPurchase","marriage_purchase","QtyOfGold","pawan","OptNoCostEMI","emi","landmark","AppComponent","iconSet","icons","events","evt","window","scrollTo","AppModule","imports","withComponents","forRoot","declarations","useClass","bootstrap","routes","path","redirectTo","pathMatch","component","title","canActivate","children","loadChildren","then","m","TelecallerModule","ManagerModule","KpCallerModule","DashboardModule","AppRoutingModule","relativeLinkResolution","exports","url","icon","P500Component","AuthGuard","state","roles","indexOf","bootstrapModule","useJit","preserveWhitespaces","err","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nimport { environment } from \"../../../environments/environment\";\nimport { User } from \"../../models/user\";\n\n@Injectable({ providedIn: \"root\" })\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(\n      JSON.parse(localStorage.getItem(\"currentUser\"))\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    console.log(\"curentuser\", this.currentUserSubject);\n    return this.currentUserSubject.value;\n  }\n\n  login(data) {\n    return this.http.post<any>(`${environment.apiUrl}auth/local/`, data).pipe(\n      map((user) => {\n        // login successful if there's a jwt token in the response\n        console.log(user);\n        if (user.jwt) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem(\"token\", user.jwt);\n          localStorage.setItem(\"username\", user.user.username);\n          localStorage.setItem(\"uid\", user.user.id);\n          localStorage.setItem(\"user_type\", user.user.UserType);\n          localStorage.setItem(\"email\", user.user.email);\n          // localStorage.setItem('name', user.data.user_data.name);\n          // localStorage.setItem('phone_number', user.data.user_data.phone_number);\n          // localStorage.setItem('shop_name', user.data.shops_details[0]?.shop_name);\n          // localStorage.setItem('shop_id', user.data.shops_details[0]?.shop);\n\n          localStorage.setItem(\"currentUser\", JSON.stringify(user));\n          this.currentUserSubject.next(user);\n        }\n\n        return user;\n      })\n    );\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem(\"currentUser\");\n    localStorage.removeItem(\"token\");\n    this.currentUserSubject.next(null);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { APOLLO_OPTIONS, APOLLO_NAMED_OPTIONS } from \"apollo-angular\";\nimport {\n  ApolloClientOptions,\n  ApolloLink,\n  InMemoryCache,\n} from \"@apollo/client/core\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { HttpLink } from \"apollo-angular/http\";\n\nconst uri = \"https://jewel-core.telemarketing.untanglepro.com/graphql\"; // <-- add the URL of the GraphQL server here\n\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  const basic = setContext((operation, context) => ({\n    headers: {\n      Accept: \"charset=utf-8\",\n    },\n  }));\n  // Get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"token\");\n  const auth = setContext((operation, context) => ({\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }));\n\n  return {\n    link: ApolloLink.from([basic, auth, httpLink.create({ uri })]),\n    cache: new InMemoryCache(),\n  };\n}\n\nexport function createNamedApollo(\n  httpLink: HttpLink\n): Record<string, ApolloClientOptions<any>> {\n  const basic = setContext((operation, context) => ({\n    headers: {\n      Accept: \"charset=utf-8\",\n    },\n  }));\n  return {\n    second: {\n      name: \"second\",\n      link: ApolloLink.from([ basic, httpLink.create({ uri }) ]),\n      cache: new InMemoryCache(),\n    },\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n    {\n      provide: APOLLO_NAMED_OPTIONS,\n      deps: [HttpLink],\n      useFactory: createNamedApollo,\n    },\n  ],\n})\nexport class GraphQLModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '404.component.html'\n})\nexport class P404Component {\n\n  constructor() { }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"https://jewel-core.telemarketing.untanglepro.com/\"\n};\n","export * from './default-layout.component';\n","export * from './default-layout';\n","import { Component, ViewChild } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { DataService } from \"../../data.service\";\nimport { first } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"exposed_form.component.html\",\n})\nexport class ExposedFormComponent {\n  @ViewChild(\"usForm\") usForm: NgForm;\n\n  loginForm: any = {};\n  result: any = {};\n  returnUrl: string;\n  error = \"\";\n  loading = false;\n\n  constructor(\n    public dataservice: DataService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\n  }\n  onSubmit() {\n    this.loginForm = this.usForm.value;\n    console.log(this.loginForm);\n    this.loading = true;\n    this.dataservice\n      .AddEnquiry(this.loginForm)\n      .pipe(first())\n      .subscribe(\n        (data:any) => {\n          this.loading = false;\n          alert(data.message);\n        },\n        (error) => {\n          this.error = error;\n          this.loading = false;\n          console.log(error);\n          alert(error.error.message);\n        }\n      );\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { User } from \"../../models/user\";\nimport { AuthenticationService } from \"../../views/login/authentication.service\";\nimport { navItems } from \"../../_nav\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./default-layout.component.html\",\n})\nexport class DefaultLayoutComponent {\n  currentUser: User;\n  public sidebarMinimized = false;\n  userName = localStorage.getItem(\"username\");\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(\n      (x) => (this.currentUser = x)\n    );\n    console.log(\"constructor\",this.currentUser.user.UserType)\n  }\n  public navItems = navItems.filter((item) => item.role == localStorage.getItem(\"user_type\") || item.role == \"\");;\n\n  toggleMinimize(e) {\n    this.sidebarMinimized = e;\n    console.log(this.currentUser.user?.UserType);\n  }\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate([\"/login\"]);\n  }\n}\n","export default \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"clearfix\\\">\\n          <h1 class=\\\"float-left display-3 mr-4\\\">500</h1>\\n          <h4 class=\\\"pt-3\\\">Houston, we have a problem!</h4>\\n          <p class=\\\"text-muted\\\">The page you are looking for is temporarily unavailable.</p>\\n        </div>\\n        <div class=\\\"input-prepend input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n          </div>\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\n          <span class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <h2>WEDDING GOLD PURCHASE SCHEME</h2>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form #usForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"shopName\\\"><strong>Name / പേര്</strong></label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" required ngModel placeholder=\\\"Enter your name here\\\">\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"phone\\\"><strong>Customer contact number / ഫോൺ നമ്പർ</strong></label>\\n              <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"phone\\\" name=\\\"phone\\\" ngModel required placeholder=\\\"Enter your phone number here\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"address\\\"><strong>Address / അഡ്രസ് </strong></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\" required ngModel placeholder=\\\"Enter your address here\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"landmark\\\"><strong>Landmark </strong></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"landmark\\\" name=\\\"landmark\\\" required ngModel placeholder=\\\"Enter your nearest landmark here\\\">\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label for=\\\"marriage_purchase\\\"><strong>വിവാഹ പർച്ചേസ് ?</strong></label>\\n              <select class=\\\"form-control\\\" id=\\\"marriage_purchase\\\" name=\\\"marriage_purchase\\\" required ngModel aria-label=\\\"Default select example\\\">\\n                <option selected value=\\\"true\\\">Yes</option>\\n                <option value=\\\"false\\\">No</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label for=\\\"pincode\\\"><strong>വിവാഹ തീയതി</strong></label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" ngModel id=\\\"date\\\" name=\\\"date\\\">\\n            </div>\\n            <div class=\\\"form-group col-md-4\\\">\\n              <label for=\\\"pawan\\\"><strong>ആവിശ്യം ഉള്ള പവൻ</strong></label>\\n              <select class=\\\"form-control\\\" id=\\\"pawan\\\" name=\\\"pawan\\\" required ngModel aria-label=\\\"Default select example\\\">\\n                <option value=\\\"5\\\">5 പവൻ</option>\\n                <option value=\\\"10\\\">10 പവൻ</option>\\n                <option value=\\\"15\\\">15 പവൻ</option>\\n                <option value=\\\"20\\\">20 പവൻ</option>\\n                <option value=\\\"25\\\">25 പവൻ</option>\\n                <option value=\\\"30\\\">30 പവൻ</option>\\n                <option value=\\\">30\\\">30 പവനിൽ കൂടുതൽ </option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"pincode\\\"><strong>വിവാഹ ആവശ്യത്തിനുള്ള പലിശ രഹിത വായ്‌പ പദ്ധതിയിൽ അംഗം ആകാൻ താല്പര്യം?</strong></label>\\n            <select class=\\\"form-control\\\" id=\\\"emi\\\" name=\\\"emi\\\" required ngModel aria-label=\\\"Default select example\\\">\\n              <option selected value=\\\"true\\\">Yes</option>\\n              <option value=\\\"false\\\">No</option>\\n            </select>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","import { Component, ViewChild } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { DataService } from \"../../data.service\";\nimport { AuthenticationService } from \"./authentication.service\";\nimport { first } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent {\n  @ViewChild(\"usForm\") usForm: NgForm;\n\n  loginForm: any = {};\n  result: any = {};\n  returnUrl: string;\n  error = \"\";\n  loading = false;\n\n  constructor(\n    public dataservice: DataService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate([\"/\"]);\n    }\n  }\n\n  ngOnInit(): void {\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\n  }\n  onSubmit() {\n    this.loginForm = this.usForm.value;\n    console.log(this.loginForm);\n    this.loading = true;\n    this.authenticationService\n      .login(this.loginForm)\n      .pipe(first())\n      .subscribe(\n        (data) => {\n          this.loading = false;\n          this.router.navigate([this.returnUrl]);\n          alert(\"Login successful\");\n        },\n        (error) => {\n          this.error = error;\n          this.loading = false;\n          console.log(error.error.message[0].messages[0].message);\n          alert(error.error.message[0].messages[0].message);\n        }\n      );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"../environments/environment\";\nimport { Apollo, gql } from \"apollo-angular\";\n\nconst AgentsQuery = gql`\n  query ($tele_caller_id: String) {\n    teleCallerContacts(where: { assigned_telecaller: $tele_caller_id }) {\n      id\n      Name\n      Contact_Number_1\n      Contact_Number_2\n      Contact_Number_3\n      group {\n        Name\n        Description\n      }\n      Email\n    }\n  }\n`;\nconst AgentsSingleQuery = gql`\n  query ($id: ID!) {\n    teleCallerContact(id: $id) {\n      id\n      Name\n      Email\n      group {\n        Name\n        Description\n      }\n      Contact_Number_1\n      Contact_Number_2\n      Contact_Number_3\n      telecaller_remarks {\n        RemarksText\n        CallHistory {\n          event_date_time\n          users_permissions_user {\n            username\n          }\n        }\n      }\n    }\n  }\n`;\nconst AddAgentMutation = gql`\n  mutation (\n    $name: String!\n    $group: ID!\n    $email: String!\n    $phone1: Long!\n    $phone2: Long!\n    $phone3: Long!\n  ) {\n    createTeleCallerContact(\n      input: {\n        data: {\n          Name: $name\n          Email: $email\n          Contact_Number_1: $phone1\n          Contact_Number_2: $phone2\n          Contact_Number_3: $phone3\n          group: $group\n        }\n      }\n    ) {\n      teleCallerContact {\n        id\n        Name\n        Contact_Number_1\n        Contact_Number_2\n        Contact_Number_3\n        group {\n          Name\n          Description\n        }\n        Email\n      }\n    }\n  }\n`;\nconst GroupsQuery = gql`\n  query GroupsQuery {\n    groups {\n      id\n      Name\n      Description\n    }\n  }\n`;\nconst localitiesQuery = gql`\n  query {\n    localities {\n      id\n      Name\n      post_office {\n        Name\n        id\n        Pincode\n      }\n    }\n  }\n`;\nconst UpdateAgentMutation = gql`\n  mutation (\n    $id: ID!\n    $name: String!\n    $group: ID!\n    $email: String!\n    $phone1: Long!\n    $phone2: Long!\n    $phone3: Long!\n  ) {\n    updateTeleCallerContact(\n      input: {\n        where: { id: $id }\n        data: {\n          Name: $name\n          Email: $email\n          Contact_Number_1: $phone1\n          Contact_Number_2: $phone2\n          Contact_Number_3: $phone3\n          group: $group\n        }\n      }\n    ) {\n      teleCallerContact {\n        id\n        Name\n        Contact_Number_1\n        Contact_Number_2\n        Contact_Number_3\n        group {\n          Name\n          Description\n        }\n        Email\n      }\n    }\n  }\n`;\nconst DeleteAgentMutation = gql`\n  mutation ($id: ID!) {\n    deleteTeleCallerContact(input: { where: { id: $id } }) {\n      teleCallerContact {\n        id\n        Name\n        Contact_Number_1\n        Contact_Number_2\n        Contact_Number_3\n        group {\n          Name\n          Description\n        }\n        Email\n      }\n    }\n  }\n`;\nconst AddCommentMutation = gql`\n  mutation ($id: ID!, $remarks: String!, $date: DateTime!) {\n    updateTeleCallerContact(\n      input: {\n        where: { id: $id }\n        data: {\n          telecaller_remarks: {\n            RemarksText: $remarks\n            CallHistory: { event_date_time: $date }\n          }\n        }\n      }\n    ) {\n      teleCallerContact {\n        id\n        Name\n        Email\n        group {\n          Name\n          Description\n        }\n        Contact_Number_1\n        Contact_Number_2\n        Contact_Number_3\n        telecaller_remarks {\n          RemarksText\n          CallHistory {\n            event_date_time\n            users_permissions_user {\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nconst CustomersQuery = gql`\n  query {\n    customers {\n      id\n      is_verified\n      NameOfBride\n      NameOfFather\n      NameOfMother\n      MarriageDate\n      ContactNumber_1\n      ContactNumber_2\n      MarriageMonth\n      kp_caller_assigned {\n        email\n        username\n      }\n      tele_caller_contact {\n        Name\n        id\n      }\n      created_at\n      FieldReport {\n        id\n        FinancialBackground\n        QtyOfGold\n        PreferredWeddingSet\n        PlanningForReplacementAfterWedding\n        OldGoldExchangeQty\n        NoCostEmiRequired\n        EmiTenure\n        EmiIntervals\n        TokenAdvance\n        RateAdvance\n        EnquiriesFromOthers\n        AdvancePaidToOtherJewellery\n        NumberOfNewMarriageAddress\n      }\n      Address {\n        id\n        HouseName\n        Landmark\n        locality {\n          Name\n        }\n        post_office {\n          Name\n          Pincode\n          district {\n            Name\n          }\n        }\n        GeoLocation {\n          Latitude\n          Longitude\n          GoogleMapURL\n        }\n      }\n    }\n  }\n`;\nconst CustomersFilterQuery = gql`\n  query (\n    $is_verified: Boolean\n    $kp_caller_assigned_null: Boolean\n    $kp_id: ID\n    $MarriageMonth_null: Boolean\n    $MarriageDate_null: Boolean\n  ) {\n    customers(\n      where: {\n        is_verified: $is_verified\n        kp_caller_assigned_null: $kp_caller_assigned_null\n        kp_caller_assigned: $kp_id\n        MarriageDate_null: $MarriageDate_null\n        MarriageMonth_null: $MarriageMonth_null\n      }\n    ) {\n      id\n      is_verified\n      NameOfBride\n      NameOfFather\n      NameOfMother\n      MarriageDate\n      ContactNumber_1\n      ContactNumber_2\n      MarriageMonth\n      kp_caller_assigned {\n        email\n        username\n      }\n      tele_caller_contact {\n        Name\n        id\n      }\n      created_at\n      FieldReport {\n        id\n        FinancialBackground\n        QtyOfGold\n        PreferredWeddingSet\n        PlanningForReplacementAfterWedding\n        OldGoldExchangeQty\n        NoCostEmiRequired\n        EmiTenure\n        EmiIntervals\n        TokenAdvance\n        RateAdvance\n        EnquiriesFromOthers\n        AdvancePaidToOtherJewellery\n        NumberOfNewMarriageAddress\n      }\n      Address {\n        id\n        HouseName\n        Landmark\n        locality {\n          Name\n        }\n        post_office {\n          Name\n          Pincode\n          district {\n            Name\n          }\n        }\n        GeoLocation {\n          Latitude\n          Longitude\n          GoogleMapURL\n        }\n      }\n    }\n  }\n`;\nconst CustomerSingleQuery = gql`\n  query ($id: ID!) {\n    customer(id: $id) {\n      id\n      is_verified\n      NameOfBride\n      NameOfFather\n      NameOfMother\n      ContactNumber_1\n      ContactNumber_2\n      MarriageDate\n      MarriageMonth\n      tele_caller_contact {\n        Name\n        id\n      }\n      kp_caller_assigned {\n        email\n        username\n      }\n      created_at\n      FieldReport {\n        id\n        FinancialBackground\n        QtyOfGold\n        PreferredWeddingSet\n        PlanningForReplacementAfterWedding\n        OldGoldExchangeQty\n        NoCostEmiRequired\n        EmiTenure\n        EmiIntervals\n        TokenAdvance\n        RateAdvance\n        EnquiriesFromOthers\n        AdvancePaidToOtherJewellery\n        NumberOfNewMarriageAddress\n      }\n      Address {\n        id\n        HouseName\n        Landmark\n        locality {\n          Name\n        }\n        post_office {\n          Name\n          Pincode\n          district {\n            Name\n          }\n        }\n        GeoLocation {\n          Latitude\n          Longitude\n          GoogleMapURL\n        }\n      }\n      TelecallerRemarks {\n        RemarksText\n        CallHistory {\n          event_date_time\n          users_permissions_user {\n            username\n            email\n          }\n        }\n      }\n    }\n  }\n`;\nconst AddCustomerMutation = gql`\n  mutation (\n    $NameOfBride: String!\n    $NameOfFather: String!\n    $NameOfMother: String!\n    $ContactNumber_1: String!\n    $ContactNumber_2: String!\n    $MarriageDate: Date!\n    $MarriageMonth: Int!\n    $tele_caller_contact: ID!\n    $HouseName: String!\n    $Landmark: String!\n    $locality: ID!\n  ) {\n    createCustomer(\n      input: {\n        data: {\n          NameOfBride: $NameOfBride\n          NameOfFather: $NameOfFather\n          NameOfMother: $NameOfMother\n          MarriageDate: $MarriageDate\n          MarriageMonth: $MarriageMonth\n          ContactNumber_1: $ContactNumber_1\n          ContactNumber_2: $ContactNumber_2\n          tele_caller_contact: $tele_caller_contact\n          Address: {\n            HouseName: $HouseName\n            Landmark: $Landmark\n            locality: $locality\n          }\n        }\n      }\n    ) {\n      customer {\n        id\n        NameOfBride\n        NameOfFather\n        NameOfMother\n        MarriageDate\n        MarriageMonth\n        ContactNumber_1\n        ContactNumber_2\n        tele_caller_contact {\n          Name\n          id\n        }\n        created_at\n        Address {\n          id\n          HouseName\n          Landmark\n          locality {\n            Name\n          }\n          post_office {\n            Name\n            Pincode\n            district {\n              Name\n            }\n          }\n          GeoLocation {\n            Latitude\n            Longitude\n            GoogleMapURL\n          }\n        }\n      }\n    }\n  }\n`;\nconst AddCustomerCommentMutation = gql`\n  mutation (\n    $id: ID!\n    $remarks: String!\n    $date: DateTime!\n    $is_verified: Boolean\n  ) {\n    updateCustomer(\n      input: {\n        where: { id: $id }\n        data: {\n          TelecallerRemarks: {\n            RemarksText: $remarks\n            CallHistory: { event_date_time: $date }\n          }\n          is_verified: $is_verified\n        }\n      }\n    ) {\n      customer {\n        id\n        is_verified\n        NameOfBride\n        NameOfFather\n        NameOfMother\n        MarriageDate\n        MarriageMonth\n        tele_caller_contact {\n          Name\n          id\n        }\n        created_at\n        Address {\n          id\n          HouseName\n          Landmark\n          locality {\n            Name\n          }\n          post_office {\n            Name\n            Pincode\n            district {\n              Name\n            }\n          }\n          GeoLocation {\n            Latitude\n            Longitude\n            GoogleMapURL\n          }\n        }\n      }\n    }\n  }\n`;\nconst SetKpCallerMutation = gql`\n  mutation ($id: ID!, $cust_id: [ID!]!) {\n    updateUser(input: { where: { id: $id }, data: { kp_customer: $cust_id } }) {\n      user {\n        id\n        kp_customer {\n          id\n          NameOfBride\n          NameOfFather\n        }\n      }\n    }\n  }\n`;\nconst SetTeleCallerMutation = gql`\n  mutation ($id: ID!, $cust_id: [ID!]!) {\n    updateUser(\n      input: { where: { id: $id }, data: { tele_caller_contacts: $cust_id } }\n    ) {\n      user {\n        id\n        tele_caller_contacts {\n          id\n          Name\n          Contact_Number_1\n          Email\n        }\n      }\n    }\n  }\n`;\nconst SetFieldAgentMutation = gql`\n  mutation ($id: ID!, $cust_id: [ID!]!) {\n    updateUser(input: { where: { id: $id }, data: { customers: $cust_id } }) {\n      user {\n        id\n        customers {\n          NameOfBride\n          id\n          NameOfFather\n          MarriageDate\n        }\n      }\n    }\n  }\n`;\nconst UsersQuery = gql`\n  query ($type: String!) {\n    users(where: { UserType: $type }) {\n      id\n      username\n      email\n      role {\n        id\n        name\n        type\n      }\n      UserType\n    }\n  }\n`;\nconst AddCustomerEnquiry = gql`\n  mutation (\n    $Name: String!\n    $PhoneNumber: String!\n    $Address: String!\n    $isWeddingPurchase: Boolean!\n    $MarriageDate: Date!\n    $QtyOfGold: Int!\n    $OptNoCostEMI: Boolean!\n    $landmark: String\n  ) {\n    createEnquiryCustomer(\n      input: {\n        data: {\n          Name: $Name\n          PhoneNumber: $PhoneNumber\n          Address: $Address\n          isWeddingPurchase: $isWeddingPurchase\n          MarriageDate: $MarriageDate\n          QtyOfGold: $QtyOfGold\n          OptNoCostEMI: $OptNoCostEMI\n          landmark: $landmark\n        }\n      }\n    ) {\n      enquiryCustomer {\n        id\n        Name\n        PhoneNumber\n        Address\n        isWeddingPurchase\n        MarriageDate\n        QtyOfGold\n        OptNoCostEMI\n        landmark\n      }\n    }\n  }\n`;\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DataService {\n  baseURL = environment.apiUrl;\n  params: URLSearchParams = new URLSearchParams();\n\n  constructor(private http: HttpClient, private apollo: Apollo) {}\n\n  Login(data): Observable<any> {\n    const httpOptions1: Object = {\n      observe: \"response\",\n    };\n    return this.http.post(this.baseURL + `auth/login/`, data, httpOptions1);\n  }\n  getOrders() {\n    const httpOptions: Object = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`,\n      }),\n      observe: \"response\",\n    };\n    return this.http.get(this.baseURL + \"order/1/shop/\", httpOptions);\n  }\n\n  getAgents() {\n    return this.apollo.watchQuery({\n      query: AgentsQuery,\n    });\n  }\n  getfilteredAgents(id) {\n    return this.apollo.watchQuery({\n      query: AgentsQuery,\n      variables: {\n        tele_caller_id: id,\n      },\n    });\n  }\n  getSingleAgent(id) {\n    return this.apollo.watchQuery({\n      query: AgentsSingleQuery,\n      variables: {\n        id: id,\n      },\n    });\n  }\n  AddAgent(agent) {\n    return this.apollo.mutate({\n      mutation: AddAgentMutation,\n      variables: {\n        name: agent.name,\n        email: agent.email,\n        group: agent.group,\n        phone1: agent.phone1,\n        phone2: agent.phone2,\n        phone3: agent.phone3,\n      },\n      errorPolicy: \"all\",\n    });\n  }\n  EditAgent(id, agent) {\n    return this.apollo.mutate({\n      mutation: UpdateAgentMutation,\n      variables: {\n        id: id,\n        name: agent.name,\n        email: agent.email,\n        group: agent.group,\n        phone1: agent.phone1,\n        phone2: agent.phone2,\n        phone3: agent.phone3,\n      },\n      errorPolicy: \"all\",\n    });\n  }\n  AddComment(id, agent) {\n    let date = new Date();\n    console.log(date.toISOString());\n    return this.apollo.mutate({\n      mutation: AddCommentMutation,\n      variables: {\n        id: id,\n        remarks: localStorage.getItem(\"username\") + \": \" + agent.RemarksText,\n        date: new Date().toISOString(),\n      },\n      errorPolicy: \"all\",\n    });\n  }\n  DeleteAgent(id) {\n    return this.apollo.mutate({\n      mutation: DeleteAgentMutation,\n      variables: {\n        id: id,\n      },\n      errorPolicy: \"all\",\n    });\n  }\n  getGroups() {\n    return this.apollo.watchQuery({\n      query: GroupsQuery,\n    });\n  }\n  getLocalities() {\n    return this.apollo.watchQuery({\n      query: localitiesQuery,\n    });\n  }\n  getCustomers() {\n    return this.apollo.watchQuery({\n      query: CustomersQuery,\n    });\n  }\n  getUsers(type) {\n    return this.apollo.watchQuery({\n      query: UsersQuery,\n      variables: { type: type },\n    });\n  }\n  getCustomersFilter(verified) {\n    return this.apollo.watchQuery({\n      query: CustomersFilterQuery,\n      variables: verified,\n    });\n  }\n  getSingleCustomer(id) {\n    return this.apollo.watchQuery({\n      query: CustomerSingleQuery,\n      variables: {\n        id: id,\n      },\n    });\n  }\n  Addcustomer(Customer) {\n    return this.apollo.mutate({\n      mutation: AddCustomerMutation,\n      variables: {\n        NameOfBride: Customer.NameOfBride,\n        NameOfFather: Customer.NameOfFather,\n        NameOfMother: Customer.NameOfMother,\n        MarriageDate: Customer.MarriageDate,\n        MarriageMonth: parseInt(Customer.MarriageMonth),\n        tele_caller_contact: Customer.tele_caller_contact,\n        HouseName: Customer.HouseName,\n        ContactNumber_1: Customer.ContactNumber_1,\n        ContactNumber_2: Customer.ContactNumber_2,\n        Landmark: Customer.Landmark,\n        locality: Customer.locality,\n      },\n      errorPolicy: \"all\",\n    });\n  }\n  AddCustomerComment(id, agent) {\n    return this.apollo.mutate({\n      mutation: AddCustomerCommentMutation,\n      variables: {\n        id: id,\n        remarks: localStorage.getItem(\"username\") + \": \" + agent.RemarksText,\n        date: new Date().toISOString(),\n        is_verified: agent.is_verified,\n      },\n      errorPolicy: \"all\",\n    });\n  }\n  SetKpCaller(id, cust_id) {\n    return this.apollo.mutate({\n      mutation: SetKpCallerMutation,\n      variables: {\n        id: id,\n        cust_id: cust_id,\n      },\n      errorPolicy: \"all\",\n    });\n  }\n  SetFieldAgent(id, cust_id) {\n    return this.apollo.mutate({\n      mutation: SetFieldAgentMutation,\n      variables: {\n        id: id,\n        cust_id: cust_id,\n      },\n      errorPolicy: \"all\",\n    });\n  }\n  SetTeleCaller(id, cust_id) {\n    return this.apollo.mutate({\n      mutation: SetTeleCallerMutation,\n      variables: {\n        id: id,\n        cust_id: cust_id,\n      },\n      errorPolicy: \"all\",\n    });\n  }\n  AddEnquiry(enquiry) {\n    let date = new Date();\n    console.log(date.toISOString());\n    return this.apollo.use(\"second\").mutate({\n      mutation: AddCustomerEnquiry,\n      variables: {\n        Name: enquiry.name,\n        PhoneNumber: enquiry.phone,\n        Address: enquiry.address,\n        isWeddingPurchase: enquiry.marriage_purchase == \"true\" ? true : false,\n        MarriageDate: enquiry.date,\n        QtyOfGold: parseInt(enquiry.pawan),\n        OptNoCostEMI: enquiry.emi == \"true\" ? true : false,\n        landmark: enquiry.landmark,\n      },\n      errorPolicy: \"all\",\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\nimport { IconSetService } from '@coreui/icons-angular';\nimport { freeSet } from '@coreui/icons';\n\n@Component({\n  // tslint:disable-next-line\n  selector: 'body',\n  template: '<router-outlet></router-outlet>',\n  providers: [IconSetService],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private router: Router,\n    public iconSet: IconSetService\n  ) {\n    // iconSet singleton\n    iconSet.icons = { ...freeSet };\n  }\n\n  ngOnInit() {\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AgGridModule } from 'ag-grid-angular';\n\nimport { AppComponent } from './app.component';\n// Import containers\nimport { DefaultLayoutComponent } from './containers';\nimport { P404Component } from './views/error/404.component';\nimport { P500Component } from './views/error/500.component';\nimport { LoginComponent } from './views/login/login.component';\n\n// const APP_CONTAINERS = [\n//   DefaultLayoutComponent\n// ];\n\nimport {\n  AppAsideModule,\n  AppBreadcrumbModule,\n  AppHeaderModule,\n  AppFooterModule,\n  AppSidebarModule,\n} from '@coreui/angular';\n\n// Import routing module\nimport { AppRoutingModule } from './app.routing';\n// Import 3rd party components\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n// import { TabsModule } from 'ngx-bootstrap/tabs';\nimport { GraphQLModule } from './graphql.module';\nimport { ExposedFormComponent } from './views/exposed_form/exposed_form.component';\n\n@NgModule({\n  imports: [\n    AgGridModule.withComponents([]),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AppAsideModule,\n    AppBreadcrumbModule.forRoot(),\n    AppFooterModule,\n    AppHeaderModule,\n    AppSidebarModule,\n    BsDropdownModule.forRoot(),\n    GraphQLModule,\n  ],\n  declarations: [\n    AppComponent,\n    P404Component,\n    P500Component,\n    LoginComponent,\n    ExposedFormComponent,\n    DefaultLayoutComponent,\n  ],\n  providers: [\n    {\n      provide: LocationStrategy,\n      useClass: HashLocationStrategy\n    },\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// Import Containers\nimport { DefaultLayoutComponent } from './containers';\nimport { P404Component } from './views/error/404.component';\nimport { P500Component } from './views/error/500.component';\nimport { LoginComponent } from './views/login/login.component';\nimport { AuthGuard } from './views/login/auth.guard';\nimport { ExposedFormComponent } from './views/exposed_form/exposed_form.component';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full',\n  },\n  {\n    path: '404',\n    component: P404Component,\n    data: {\n      title: 'Page 404'\n    }\n  },\n  {\n    path: '500',\n    component: P500Component,\n    data: {\n      title: 'Page 500'\n    }\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: {\n      title: 'Login Page'\n    }\n  },\n  {\n    path: 'enquiry_form',\n    component: ExposedFormComponent,\n    data: {\n      title: 'WEDDING GOLD PURCHASE SCHEME'\n    }\n  },\n  {\n    path: '',\n    component: DefaultLayoutComponent,\n    data: {\n      title: 'Home'\n    },\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'telecaller',\n        loadChildren: () => import('./views/telecaller/telecaller.module').then(m => m.TelecallerModule)\n      },\n      {\n        path: 'manager',\n        loadChildren: () => import('./views/manager/manager.module').then(m => m.ManagerModule)\n      },\n      {\n        path: 'kpcaller',\n        loadChildren: () => import('./views/kpcaller/kpcaller.module').then(m => m.KpCallerModule)\n      },\n      {\n        path: 'dashboard',\n        loadChildren: () => import('./views/dashboard/dashboard.module').then(m => m.DashboardModule)\n      }\n    ]\n  },\n  { path: '**', component: P404Component }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { INavData } from '@coreui/angular';\n\nexport const navItems: INavData[] = [\n  {\n    name: 'Dashboard',\n    url: '/dashboard',\n    icon: 'icon-speedometer',\n    role: \"\"\n  },\n  {\n    name: 'Agents',\n    url: '/telecaller/agents',\n    icon: 'icon-note',\n    role: \"TELE_CALLER\"\n  },\n  {\n    name: 'Customers',\n    url: '/telecaller/customers',\n    icon: 'icon-basket-loaded',\n    role: \"TELE_CALLER\"\n  },\n  {\n    name: 'Verification',\n    url: '/kpcaller/verification',\n    icon: 'icon-cursor',\n    role: \"KP_CALLER\"\n  },\n  {\n    name: 'Assigned',\n    url: '/kpcaller/assigned',\n    icon: 'icon-cursor',\n    role: \"KP_CALLER\"\n  },\n  {\n    name: 'DNF',\n    url: '/kpcaller/dnf',\n    icon: 'icon-cursor',\n    role: \"KP_CALLER\"\n  },\n  {\n    name: 'Verified List',\n    url: '/manager/verified_list',\n    icon: 'icon-phone',\n    role: \"MANAGER\"\n  },\n  {\n    name: 'Agents List',\n    url: '/manager/agents',\n    icon: 'icon-phone',\n    role: \"MANAGER\"\n  },\n  {\n    name: 'Customers',\n    url: '/manager/customers',\n    icon: 'icon-basket-loaded',\n    role: \"MANAGER\"\n  },\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '500.component.html'\n})\nexport class P500Component {\n\n  constructor() { }\n\n}\n","export default \"<app-header [navbarBrandRouterLink]=\\\"['/dashboard']\\\" [fixed]=\\\"true\\\"\\n  [navbarBrandFull]=\\\"{src: 'assets/img/brand/logo.png',width:200,alt: 'CartIntoCar Logo'}\\\"\\n  [navbarBrandMinimized]=\\\"{src: 'assets/img/brand/sygnet.svg', width: 30, height: 30, alt: 'CartIntoCar Logo'}\\\"\\n  [sidebarToggler]=\\\"'lg'\\\">\\n  <ul class=\\\"nav navbar-nav ml-auto\\\">\\n    {{userName}}\\n    <li class=\\\"nav-item dropdown\\\" dropdown placement=\\\"bottom right\\\">\\n      <a class=\\\"nav-link\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"\\n        dropdownToggle (click)=\\\"false\\\">\\n        <img src=\\\"assets/img/avatars/6.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\" />\\n      </a>\\n      <div class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu aria-labelledby=\\\"simple-dropdown\\\">\\n        <div class=\\\"dropdown-header text-center\\\"><strong>Settings</strong></div>\\n        <a class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user\\\"></i>{{userName}}</a>\\n        <div class=\\\"divider\\\"></div>\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-lock\\\"></i> Logout</a>\\n      </div>\\n    </li>\\n  </ul>\\n</app-header>\\n<div class=\\\"app-body\\\">\\n  <app-sidebar #appSidebar [fixed]=\\\"true\\\" [display]=\\\"'lg'\\\" [minimized]=\\\"sidebarMinimized\\\"\\n    (minimizedChange)=\\\"toggleMinimize($event)\\\">\\n    <app-sidebar-nav [navItems]=\\\"navItems\\\"></app-sidebar-nav>\\n    <app-sidebar-minimizer></app-sidebar-minimizer>\\n  </app-sidebar>\\n  <!-- Main content -->\\n  <main class=\\\"main\\\">\\n    <cui-breadcrumb>\\n    </cui-breadcrumb>\\n    <div class=\\\"container-fluid\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </main>\\n</div>\\n<app-footer>\\n  <span><a>Jewel Telecaller</a> &copy; 2021 jewel.</span>\\n  <!-- <span class=\\\"ml-auto\\\">Powered by <a href=\\\"https://www.upsquad.in\\\">upsquad</a></span> -->\\n</app-footer>\";","export default \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"clearfix\\\">\\n          <h1 class=\\\"float-left display-3 mr-4\\\">404</h1>\\n          <h4 class=\\\"pt-3\\\">Oops! You're lost.</h4>\\n          <p class=\\\"text-muted\\\">The page you are looking for was not found.</p>\\n        </div>\\n        <div class=\\\"input-prepend input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n          </div>\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\n          <span class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<!-- <div class=\\\"app-body bg-image\\\">\\n  <main class=\\\"main d-flex align-items-center\\\" style=\\\"background-color: rgba(0, 0, 0, 0.8);\\\">\\n    <div class=\\\"login-box\\\">\\n      <div class=\\\"card p-4\\\" style=\\\"width: fit-content;\\\">\\n        <div class=\\\"card-body\\\">\\n          <form>\\n            <h1>Login</h1>\\n            <p class=\\\"text-muted\\\">Welcome back! Please log in to your account</p>\\n            <div class=\\\"input-group mb-3\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n              </div>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" autocomplete=\\\"username\\\" required>\\n            </div>\\n            <div class=\\\"input-group mb-4\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n              </div>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" autocomplete=\\\"current-password\\\"\\n                required>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\">Login</button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div> -->\\n<!-- <div class=\\\"bg-image\\\"> -->\\n<div class=\\\"d-md-flex h-md-100 align-items-center\\\">\\n  <div class=\\\"col-md-6 p-0 bg-black h-md-100 login-screen\\\">\\n    <div class=\\\"text-white d-md-flex align-items-center h-100 text-center justify-content-center\\\">\\n      <div class=\\\"container-fluid bg-image\\\" style=\\\" height: 100vh \\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-6 p-0 bg-white h-md-100\\\">\\n    <div class=\\\"d-md-flex align-items-center h-md-100 justify-content-center\\\">\\n      <div class=\\\"container-fluid fallback-image\\\" style=\\\" height: 100vh \\\">\\n        <form class=\\\"login-box\\\" #usForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <h1>JEWEL</h1>\\n          <p class=\\\"text-muted\\\">Welcome back! Please log in to your account</p>\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" id=\\\"login\\\" maxlength=\\\"80\\\" size=\\\"30\\\" ngModel\\n              value=\\\"\\\" name=\\\"identifier\\\" required>\\n          </div>\\n          <div class=\\\"input-group mb-4\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n            </div>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" size=\\\"30\\\" ngModel\\n              name=\\\"password\\\" value=\\\"\\\" required>\\n          </div>\\n          <!-- <div class=\\\"row\\\"> -->\\n          <!-- <div class=\\\"col-6\\\"> -->\\n          <button type=\\\"submit\\\" class=\\\"btn btn-lg px-4\\\" style=\\\"background-color: #43425D; color: white;\\\">\\n            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\">\\n            </span>Login\\n          </button>\\n          <!-- </div> -->\\n          <!-- </div> -->\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!-- </div> -->\";","import { Injectable } from '@angular/core';\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser: any = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      console.log(currentUser, 'authguard', route.data.roles);\n      // check if route is restricted by role\n      if (\n        route.data.roles &&\n        route.data.roles.indexOf(currentUser.user.UserType) === -1\n      ) {\n        // role not authorised so redirect to home page\n        this.router.navigate(['/500']);\n        console.log('authguard failed');\n        return false;\n      }\n      // authorised so return true\n      return true;\n    }\n    console.log(currentUser, 'authguard il kerilla', route.data.roles);\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, {\n  useJit: true,\n  preserveWhitespaces: true\n})\n  .catch(err => console.log(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}