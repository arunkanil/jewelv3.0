{"version":3,"sources":["webpack:///src/app/views/manager/manager.module.ts","webpack:///src/app/views/manager/customerdetail.component.ts","webpack:///src/app/views/manager/customers.component.ts","webpack:///src/app/views/manager/manager-routing.module.ts","webpack:///src/app/views/manager/verified.component.ts","webpack:///src/app/views/manager/verified.component.html","webpack:///src/app/views/manager/customerdetail.component.html","webpack:///src/app/views/manager/customers.component.html"],"names":["ManagerModule","imports","withComponents","forRoot","declarations","ManagerCustomerDetailComponent","dataservice","activatedRouter","router","fb","loading","details","btnLoading","users","agentForm","group","agent","required","commentForm","RemarksText","event_date_time","getLists","params","subscribe","id","getSingleCustomer","valueChanges","result","console","log","data","customer","getUsers","resp","value","SetFieldAgent","updateUser","alert","myModal","hide","AddCustomerComment","updateCustomer","commentModal","DeleteAgent","deleteTeleCallerContact","navigate","deleteModal","template","ManagerCustomerComponent","customerForm","NameOfBride","NameOfFather","NameOfMother","MarriageDate","MarriageMonth","tele_caller_contact","HouseName","Landmark","locality","orders","columnDefs","rowData","agents","localities","Months","rowSelection","getCustomers","customers","getLocalities","getAgents","teleCallerContacts","gridApi","api","gridColumnApi","columnApi","event","selectedRows","getSelectedRows","state","Addcustomer","createCustomer","routes","path","children","redirectTo","canActivate","component","roles","title","ManagerRoutingModule","forChild","exports","VerifiedListComponent","callerForm","btnDisabled","filter","is_verified","kp_caller_assigned_null","getCustomersFilter","length","Array","from","x","SetKpCaller"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAAA;AASA;AAEA;;;UAoBaA,aAAa;AAAA;AAAA,O;;AAAbA,mBAAa,6DAfzB,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,4EAFO,EAGP,kEAHO,EAIP,6DAAaC,cAAb,CAA4B,EAA5B,CAJO,EAKP,gEAAYC,OAAZ,EALO,EAMP,0DANO,CADD;AASRC,oBAAY,EAAE,CACZ,yEADY,EAEZ,6EAFY,EAGZ,wFAHY;AATN,OAAT,CAeyB,GAAbJ,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtBAK,8BAA8B;AACzC,gDACSC,WADT,EAEUC,eAFV,EAGUC,MAHV,EAIUC,EAJV,EAIyB;AAAA;;AAHhB,eAAAH,WAAA,GAAAA,WAAA;AACC,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AAOV,eAAAC,OAAA,GAAU,IAAV;AACA,eAAAC,OAAA,GAAe,EAAf;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,KAAA,GAAa,EAAb;AACA,eAAAC,SAAA,GAAY,KAAKL,EAAL,CAAQM,KAAR,CAAc;AACxBC,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AADiB,WAAd,CAAZ;AAGA,eAAAC,WAAA,GAAc,KAAKT,EAAL,CAAQM,KAAR,CAAc;AAC1BI,uBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CADa;AAE1BG,2BAAe,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB;AAFS,WAAd,CAAd;AAbI;;AANqC;AAAA;AAAA,iBAwBzC,oBAAQ;AAAA;;AACN,iBAAKI,QAAL;AACA,iBAAKd,eAAL,CAAqBe,MAArB,CAA4BC,SAA5B,CAAsC,UAACD,MAAD,EAAY;AAChD,mBAAI,CAACE,EAAL,GAAUF,MAAM,CAAC,IAAD,CAAhB;AACD,aAFD;AAGA,iBAAKhB,WAAL,CACGmB,iBADH,CACqB,KAAKD,EAD1B,EAEGE,YAFH,CAEgBH,SAFhB,CAE0B,UAACI,MAAD,EAAiB;AACvCC,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,MAAM,CAACG,IAAP,CAAYC,QAA7C;AACA,mBAAI,CAACpB,OAAL,GAAegB,MAAM,CAACG,IAAP,CAAYC,QAA3B;AACA,mBAAI,CAACrB,OAAL,GAAe,KAAf;AACD,aANH;AAOD;AApCwC;AAAA;AAAA,iBAqCzC,oBAAW;AAAA;;AACT,iBAAKA,OAAL,GAAe,IAAf;AACA,iBAAKJ,WAAL,CACG0B,QADH,CACY,aADZ,EAEGN,YAFH,CAEgBH,SAFhB,CAE0B,UAACI,MAAD,EAAiB;AACvCC,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAM,CAACG,IAAP,CAAYjB,KAApC;AACA,oBAAI,CAACA,KAAL,GAAac,MAAM,CAACG,IAAP,CAAYjB,KAAzB;AACD,aALH;AAMD;AA7CwC;AAAA;AAAA,iBA8CzC,sBAAa;AAAA;;AACX,gBAAIoB,IAAI,GAAG,EAAX;AACAL,mBAAO,CAACC,GAAR,CAAY,KAAKf,SAAL,CAAeoB,KAA3B;AACA,iBAAK5B,WAAL,CACG6B,aADH,CACiB,KAAKrB,SAAL,CAAeoB,KAAf,CAAqBlB,KADtC,EAC6C,KAAKL,OAAL,CAAaa,EAD1D,EAEGD,SAFH,CAEa,UAACI,MAAD,EAAiB;AAC1BM,kBAAI,GAAGN,MAAM,CAACG,IAAd;AACAF,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;;AACA,kBAAIA,MAAM,CAACG,IAAP,CAAYM,UAAhB,EAA4B;AAC1BC,qBAAK,CAAC,oCAAD,CAAL;;AACA,sBAAI,CAACC,OAAL,CAAaC,IAAb;AACD,eAHD,MAGO;AACLF,qBAAK,CAAC,kCAAD,CAAL;AACD;AACF,aAXH;AAYD;AA7DwC;AAAA;AAAA,iBA8DzC,yBAAgB;AAAA;;AACd,gBAAIJ,IAAI,GAAG,EAAX;AACAL,mBAAO,CAACC,GAAR,CAAY,KAAKX,WAAL,CAAiBgB,KAA7B;AACA,iBAAK5B,WAAL,CACGkC,kBADH,CACsB,KAAK7B,OAAL,CAAaa,EADnC,EACuC,KAAKN,WAAL,CAAiBgB,KADxD,EAEGX,SAFH,CAEa,UAACI,MAAD,EAAiB;AAC1BM,kBAAI,GAAGN,MAAM,CAACG,IAAd;AACAF,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;;AACA,kBAAIA,MAAM,CAACG,IAAP,CAAYW,cAAhB,EAAgC;AAC9BJ,qBAAK,CAAC,6BAAD,CAAL;;AACA,sBAAI,CAACK,YAAL,CAAkBH,IAAlB;AACD,eAHD,MAGO;AACLF,qBAAK,CAAC,kCAAD,CAAL;AACD;AACF,aAXH;AAYD;AA7EwC;AAAA;AAAA,iBA8EzC,uBAAc;AAAA;;AACZ,gBAAIJ,IAAI,GAAG,EAAX;AACA,iBAAK3B,WAAL,CAAiBqC,WAAjB,CAA6B,KAAKnB,EAAlC,EAAsCD,SAAtC,CAAgD,UAACI,MAAD,EAAiB;AAC/DM,kBAAI,GAAGN,MAAM,CAACG,IAAd;AACAF,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;;AACA,kBAAIA,MAAM,CAACG,IAAP,CAAYc,uBAAhB,EAAyC;AACvCP,qBAAK,CAAC,6BAAD,CAAL;;AACA,sBAAI,CAAC7B,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,yBAAD,CAArB;;AACA,sBAAI,CAACC,WAAL,CAAiBP,IAAjB;AACD,eAJD,MAIO;AACLF,qBAAK,CAAC,6BAAD,CAAL;AACD;AACF,aAVD;AAWD;AA3FwC;;AAAA;AAAA,S;;;;gBANlC;;gBAFQ;;gBAAR;;gBAGA;;;;;;gBAYN,uD;AAAS,iBAAC,SAAD;;;gBACT,uD;AAAS,iBAAC,aAAD;;;gBACT,uD;AAAS,iBAAC,cAAD;;;AATChC,oCAA8B,6DAH1C,gEAAU;AACT0C,gBAAQ,EAAR;AADS,OAAV,CAG0C,E,+EAEnB,yD,EACK,8D,EACT,sD,EACJ,0D,EAL2B,GAA9B1C,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCA2C,wBAAwB;AAEnC,0CACS1C,WADT,EAEUE,MAFV,EAGUC,EAHV,EAGyB;AAAA;;AAFhB,eAAAH,WAAA,GAAAA,WAAA;AACC,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AAQV,eAAAwC,YAAA,GAAe,KAAKxC,EAAL,CAAQM,KAAR,CAAc;AAC3BmC,uBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWjC,QAAhB,CADc;AAE3BkC,wBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWlC,QAAhB,CAFa;AAG3BmC,wBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWnC,QAAhB,CAHa;AAI3BoC,wBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWpC,QAAhB,CAJa;AAK3BqC,yBAAa,EAAE,CAAC,EAAD,EAAK,0DAAWrC,QAAhB,CALY;AAM3BsC,+BAAmB,EAAE,CAAC,EAAD,EAAK,0DAAWtC,QAAhB,CANM;AAO3BuC,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWvC,QAAhB,CAPgB;AAQ3BwC,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWxC,QAAhB,CARiB;AAS3ByC,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWzC,QAAhB;AATiB,WAAd,CAAf;AAWA,eAAAP,OAAA,GAAU,IAAV;AACA,eAAAE,UAAA,GAAa,KAAb;AACA,eAAA+C,MAAA,GAAc,EAAd;AACA,eAAAC,UAAA,GAAa,EAAb;AAEA,eAAAC,OAAA,GAAe,EAAf;AACA,eAAAC,MAAA,GAAc,EAAd;AACA,eAAAC,UAAA,GAAkB,EAAlB;AAxBE,eAAKH,UAAL,sBAAsB,yEAAtB;AACA,eAAKI,MAAL,sBAAkB,gEAAlB;AACA,eAAKC,YAAL,GAAoB,QAApB;AACD;;AAVkC;AAAA;AAAA,iBAmCnC,oBAAQ;AACN,iBAAK5C,QAAL;AACD;AArCkC;AAAA;AAAA,iBAsCnC,oBAAW;AAAA;;AACT,iBAAKX,OAAL,GAAe,IAAf;AACA,iBAAKJ,WAAL,CAAiB4D,YAAjB,GAAgCxC,YAAhC,CAA6CH,SAA7C,CAAuD,UAACI,MAAD,EAAiB;AACtEC,qBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAAM,CAACG,IAAP,CAAYqC,SAAxC;AACA,oBAAI,CAACN,OAAL,GAAelC,MAAM,CAACG,IAAP,CAAYqC,SAA3B;AACD,aAHD;AAIA,iBAAK7D,WAAL,CAAiB8D,aAAjB,GAAiC1C,YAAjC,CAA8CH,SAA9C,CAAwD,UAACI,MAAD,EAAiB;AACvEC,qBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,MAAM,CAACG,IAAP,CAAYiC,UAAzC;AACA,oBAAI,CAACA,UAAL,GAAkBpC,MAAM,CAACG,IAAP,CAAYiC,UAA9B;AACD,aAHD;AAIA,iBAAKzD,WAAL,CAAiB+D,SAAjB,GAA6B3C,YAA7B,CAA0CH,SAA1C,CAAoD,UAACI,MAAD,EAAiB;AACnEC,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAM,CAACG,IAAP,CAAYwC,kBAArC;AACA,oBAAI,CAACR,MAAL,GAAcnC,MAAM,CAACG,IAAP,CAAYwC,kBAA1B;AACD,aAHD;AAID;AApDkC;AAAA;AAAA,iBAqDnC,qBAAYhD,MAAZ,EAAoB;AAClB,iBAAKiD,OAAL,GAAejD,MAAM,CAACkD,GAAtB;AACA,iBAAKC,aAAL,GAAqBnD,MAAM,CAACoD,SAA5B;AACD;AAxDkC;AAAA;AAAA,iBAyDnC,4BAAmBC,KAAnB,EAA0B;AACxB,gBAAIC,YAAY,GAAG,KAAKL,OAAL,CAAaM,eAAb,EAAnB;AACAjD,mBAAO,CAACC,GAAR,CAAY+C,YAAZ;AACA,iBAAKpE,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,2BAAD,EAA6B+B,YAAY,CAAC,CAAD,CAAZ,CAAgBpD,EAA7C,CAArB,EAAuE;AACrEsD,mBAAK,EAAE;AAAEhD,oBAAI,EAAE8C;AAAR;AAD8D,aAAvE;AAGD;AA/DkC;AAAA;AAAA,iBAgEnC,sBAAa;AAAA;;AACX,gBAAI3C,IAAI,GAAG,EAAX;AACAL,mBAAO,CAACC,GAAR,CAAY,KAAKoB,YAAL,CAAkBf,KAA9B;AACA,iBAAK5B,WAAL,CAAiByE,WAAjB,CAA6B,KAAK9B,YAAL,CAAkBf,KAA/C,EAAsDX,SAAtD,CAAgE,UAACI,MAAD,EAAiB;AAC/EM,kBAAI,GAAGN,MAAM,CAACG,IAAd;AACAF,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;;AACA,kBAAIA,MAAM,CAACG,IAAP,CAAYkD,cAAhB,EAAgC;AAC9B3C,qBAAK,CAAC,8BAAD,CAAL;;AACA,sBAAI,CAAChB,QAAL;;AACA,sBAAI,CAACiB,OAAL,CAAaC,IAAb;AACD,eAJD,MAIO;AACLF,qBAAK,CAAC,kCAAD,CAAL;AACD;AACF,aAVD;AAWD;AA9EkC;;AAAA;AAAA,S;;;;gBAP5B;;gBAFA;;gBAGA;;;;;;gBAkBN,uD;AAAS,iBAAC,SAAD;;;AAZCW,8BAAwB,6DAHpC,gEAAU;AACTD,gBAAQ,EAAR;AADS,OAAV,CAGoC,E,+EAGb,yD,EACJ,sD,EACJ,0D,EALqB,GAAxBC,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,UAAMiC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEE;AACA;AACA;AACAC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,oBAAU,EAAE;AAFd,SADQ,EAKR;AACEF,cAAI,EAAE,eADR;AAEEG,qBAAW,EAAE,CAAC,2DAAD,CAFf;AAGEC,mBAAS,EAAE,yEAHb;AAIExD,cAAI,EAAE;AACJyD,iBAAK,EAAE,SADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SALQ,EAcR;AACEN,cAAI,EAAE,WADR;AAEEG,qBAAW,EAAE,CAAC,2DAAD,CAFf;AAGEC,mBAAS,EAAE,6EAHb;AAIExD,cAAI,EAAE;AACJyD,iBAAK,EAAE,SADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAdQ,EAuBR;AACEN,cAAI,EAAE,sBADR;AAEEG,qBAAW,EAAE,CAAC,2DAAD,CAFf;AAGEC,mBAAS,EAAE,wFAHb;AAIExD,cAAI,EAAE;AACJyD,iBAAK,EAAE,SADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAvBQ;AALZ,OADqB,CAAvB;;UA8CaC,oBAAoB;AAAA;AAAA,O;;AAApBA,0BAAoB,6DAJhC,+DAAS;AACRxF,eAAO,EAAE,CAAC,6DAAayF,QAAb,CAAsBT,MAAtB,CAAD,CADD;AAERU,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIgC,GAApBF,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC5CAG,qBAAqB;AAEhC,uCACStF,WADT,EAEUE,MAFV,EAGUC,EAHV,EAGyB;AAAA;;AAFhB,eAAAH,WAAA,GAAAA,WAAA;AACC,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AAMV,eAAAoF,UAAA,GAAa,KAAKpF,EAAL,CAAQM,KAAR,CAAc;AACzBS,cAAE,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB;AADqB,WAAd,CAAb;AAGA,eAAAP,OAAA,GAAU,IAAV;AACA,eAAAE,UAAA,GAAa,KAAb;AACA,eAAA+C,MAAA,GAAc,EAAd;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,OAAA,GAAe,EAAf;AACA,eAAAhD,KAAA,GAAa,EAAb;AAEA,eAAAiF,WAAA,GAAc,IAAd;AAdE,eAAKlC,UAAL,sBAAsB,yEAAtB;AACA,eAAKK,YAAL,GAAoB,UAApB;AACD;;AAT+B;AAAA;AAAA,iBAyBhC,oBAAQ;AACN,iBAAK5C,QAAL;AACD;AA3B+B;AAAA;AAAA,iBA4BhC,oBAAW;AAAA;;AACT,iBAAKX,OAAL,GAAe,IAAf;AACA,gBAAIqF,MAAM,GAAG;AACXC,yBAAW,EAAE,IADF;AAEXC,qCAAuB,EAAE;AAFd,aAAb;AAIA,iBAAK3F,WAAL,CACG4F,kBADH,CACsBH,MADtB,EAEGrE,YAFH,CAEgBH,SAFhB,CAE0B,UAACI,MAAD,EAAiB;AACvCC,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,MAAM,CAACG,IAAP,CAAYqC,SAA9C;AACA,oBAAI,CAACN,OAAL,GAAelC,MAAM,CAACG,IAAP,CAAYqC,SAA3B;AACD,aALH;AAMA,iBAAK7D,WAAL,CACG0B,QADH,CACY,WADZ,EAEGN,YAFH,CAEgBH,SAFhB,CAE0B,UAACI,MAAD,EAAiB;AACvCC,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAM,CAACG,IAAP,CAAYjB,KAApC;AACA,oBAAI,CAACA,KAAL,GAAac,MAAM,CAACG,IAAP,CAAYjB,KAAzB;AACD,aALH;AAMD;AA9C+B;AAAA;AAAA,iBA+ChC,qBAAYS,MAAZ,EAAoB;AAClB,iBAAKiD,OAAL,GAAejD,MAAM,CAACkD,GAAtB;AACA,iBAAKC,aAAL,GAAqBnD,MAAM,CAACoD,SAA5B;AACD;AAlD+B;AAAA;AAAA,iBAmDhC,4BAAmBC,KAAnB,EAA0B;AACxB,iBAAKC,YAAL,GAAoB,KAAKL,OAAL,CAAaM,eAAb,EAApB;;AACA,gBAAI,KAAKD,YAAL,CAAkBuB,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,mBAAKL,WAAL,GAAmB,KAAnB;AACD,aAFD,MAEO;AACL,mBAAKA,WAAL,GAAmB,IAAnB;AACD;;AACDlE,mBAAO,CAACC,GAAR,CAAY,KAAK+C,YAAjB,EAPwB,CAQxB;AACA;AACA;AACA;AACA;AACA;AACD;AAjE+B;AAAA;AAAA,iBAkEhC,sBAAa;AAAA;;AACX,gBAAI3C,IAAI,GAAG,EAAX;AACAL,mBAAO,CAACC,GAAR,CACE,KAAKgE,UAAL,CAAgB3D,KADlB,EAEEkE,KAAK,CAACC,IAAN,CAAW,KAAKzB,YAAhB,EAA8B,UAAC0B,CAAD;AAAA,qBAAOA,CAAC,CAAC9E,EAAT;AAAA,aAA9B,CAFF;AAIA,iBAAKlB,WAAL,CACGiG,WADH,CAEI,KAAKV,UAAL,CAAgB3D,KAAhB,CAAsBV,EAF1B,EAGI4E,KAAK,CAACC,IAAN,CAAW,KAAKzB,YAAhB,EAA8B,UAAC0B,CAAD;AAAA,qBAAOA,CAAC,CAAC9E,EAAT;AAAA,aAA9B,CAHJ,EAKGD,SALH,CAKa,UAACI,MAAD,EAAiB;AAC1BM,kBAAI,GAAGN,MAAM,CAACG,IAAd;AACAF,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;;AACA,kBAAIA,MAAM,CAACG,IAAP,CAAYM,UAAhB,EAA4B;AAC1BC,qBAAK,CAAC,wBAAD,CAAL;;AACA,sBAAI,CAAChB,QAAL;;AACA,sBAAI,CAACiB,OAAL,CAAaC,IAAb;AACD,eAJD,MAIO;AACLF,qBAAK,CAAC,kCAAD,CAAL;AACD;AACF,aAfH;AAgBD;AAxF+B;;AAAA;AAAA,S;;;;gBARzB;;gBADA;;gBAIA;;;;;;gBAeN,uD;AAAS,iBAAC,SAAD;;;AAVCuD,2BAAqB,6DAHjC,gEAAU;AACT7C,gBAAQ,EAAR;AADS,OAAV,CAGiC,E,+EAGV,yD,EACJ,sD,EACJ,0D,EALkB,GAArB6C,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACVb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA","file":"views-manager-manager-module-es5.js","sourcesContent":["// Angular\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { NgModule } from '@angular/core';\nimport { VerifiedListComponent } from './verified.component';\n\n// import { TypographyComponent } from './typography.component';\n\n// Theme Routing\nimport { ManagerRoutingModule } from './manager-routing.module';\nimport { ManagerCustomerComponent } from './customers.component';\nimport { ManagerCustomerDetailComponent } from './customerdetail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ManagerRoutingModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    VerifiedListComponent,\n    ManagerCustomerComponent,\n    ManagerCustomerDetailComponent\n  ]\n})\nexport class ManagerModule { }\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  templateUrl: \"customerdetail.component.html\",\n})\nexport class ManagerCustomerDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n  @ViewChild(\"commentModal\") public commentModal: ModalDirective;\n\n  id: any;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  users: any = [];\n  agentForm = this.fb.group({\n    agent: [\"\", Validators.required],\n  });\n  commentForm = this.fb.group({\n    RemarksText: [\"\", Validators.required],\n    event_date_time: [\"\", Validators.required],\n  });\n\n  ngOnInit(): void {\n    this.getLists();\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n    });\n    this.dataservice\n      .getSingleCustomer(this.id)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getSingleCustomer\", result.data.customer);\n        this.details = result.data.customer;\n        this.loading = false;\n      });\n  }\n  getLists() {\n    this.loading = true;\n    this.dataservice\n      .getUsers(\"FIELD_AGENT\")\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getUsers\", result.data.users);\n        this.users = result.data.users;\n      });\n  }\n  FormSubmit() {\n    let resp = {};\n    console.log(this.agentForm.value);\n    this.dataservice\n      .SetFieldAgent(this.agentForm.value.agent, this.details.id)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateUser) {\n          alert(\"Field Agent assigned successfully!\");\n          this.myModal.hide();\n        } else {\n          alert(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n  CommentSubmit() {\n    let resp = {};\n    console.log(this.commentForm.value);\n    this.dataservice\n      .AddCustomerComment(this.details.id, this.commentForm.value)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateCustomer) {\n          alert(\"Comment added successfully!\");\n          this.commentModal.hide();\n        } else {\n          alert(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n  deleteAgent() {\n    let resp = {};\n    this.dataservice.DeleteAgent(this.id).subscribe((result: any) => {\n      resp = result.data;\n      console.log(\"response\", result);\n      if (result.data.deleteTeleCallerContact) {\n        alert(\"Agent deleted successfully!\");\n        this.router.navigate([\"/order/order_processing\"]);\n        this.deleteModal.hide();\n      } else {\n        alert(\"Failed. Please check again!\");\n      }\n    });\n  }\n}\n","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { customersColumn,Months } from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: \"customers.component.html\",\n})\nexport class ManagerCustomerComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.columnDefs = [...customersColumn];\n    this.Months = [...Months];\n    this.rowSelection = \"single\";\n  }\n\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  customerForm = this.fb.group({\n    NameOfBride: [\"\", Validators.required],\n    NameOfFather: [\"\", Validators.required],\n    NameOfMother: [\"\", Validators.required],\n    MarriageDate: [\"\", Validators.required],\n    MarriageMonth: [\"\", Validators.required],\n    tele_caller_contact: [\"\", Validators.required],\n    HouseName: [\"\", Validators.required],\n    Landmark: [\"\", Validators.required],\n    locality: [\"\", Validators.required],\n  });\n  loading = true;\n  btnLoading = false;\n  orders: any = {};\n  columnDefs = [];\n  Months;\n  rowData: any = [];\n  agents: any = [];\n  localities: any = [];\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.getLists();\n  }\n  getLists() {\n    this.loading = true;\n    this.dataservice.getCustomers().valueChanges.subscribe((result: any) => {\n      console.log(\"getCustomers\", result.data.customers);\n      this.rowData = result.data.customers;\n    });\n    this.dataservice.getLocalities().valueChanges.subscribe((result: any) => {\n      console.log(\"getLocalities\", result.data.localities);\n      this.localities = result.data.localities;\n    });\n    this.dataservice.getAgents().valueChanges.subscribe((result: any) => {\n      console.log(\"getAgents\", result.data.teleCallerContacts);\n      this.agents = result.data.teleCallerContacts;\n    });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    var selectedRows = this.gridApi.getSelectedRows();\n    console.log(selectedRows);\n    this.router.navigate([\"/manager/customer_details\",selectedRows[0].id], {\n      state: { data: selectedRows },\n    });\n  }\n  FormSubmit() {\n    let resp = {};\n    console.log(this.customerForm.value);\n    this.dataservice.Addcustomer(this.customerForm.value).subscribe((result: any) => {\n      resp = result.data;\n      console.log(\"response\", result);\n      if (result.data.createCustomer) {\n        alert(\"customer added successfully!\");\n        this.getLists();\n        this.myModal.hide();\n      } else {\n        alert(\"Failed. Please check the fields!\");\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../login/auth.guard';\nimport { ManagerCustomerDetailComponent } from './customerdetail.component';\nimport { ManagerCustomerComponent } from './customers.component';\n\nimport { VerifiedListComponent } from './verified.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    // data: {\n    //   title: 'Theme'\n    // },\n    children: [\n      {\n        path: '',\n        redirectTo: 'manager'\n      },\n      {\n        path: 'verified_list',\n        canActivate: [AuthGuard],\n        component: VerifiedListComponent,\n        data: {\n          roles: 'MANAGER',\n          title: 'Verified List'\n        }\n      },\n      {\n        path: 'customers',\n        canActivate: [AuthGuard],\n        component: ManagerCustomerComponent,\n        data: {\n          roles: 'MANAGER',\n          title: 'Customers'\n        }\n      },\n      {\n        path: 'customer_details/:id',\n        canActivate: [AuthGuard],\n        component: ManagerCustomerDetailComponent,\n        data: {\n          roles: 'MANAGER',\n          title: 'Customer Details'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManagerRoutingModule {}\n","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { DataService } from \"../../data.service\";\nimport { customersColumn } from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  templateUrl: \"verified.component.html\",\n})\nexport class VerifiedListComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.columnDefs = [...customersColumn];\n    this.rowSelection = \"multiple\";\n  }\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  callerForm = this.fb.group({\n    id: [\"\", Validators.required],\n  });\n  loading = true;\n  btnLoading = false;\n  orders: any = {};\n  columnDefs = [];\n  rowData: any = [];\n  users: any = [];\n  selectedRows: any[];\n  btnDisabled = true;\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.getLists();\n  }\n  getLists() {\n    this.loading = true;\n    let filter = {\n      is_verified: true,\n      kp_caller_assigned_null: true,\n    };\n    this.dataservice\n      .getCustomersFilter(filter)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getCustomersFilter\", result.data.customers);\n        this.rowData = result.data.customers;\n      });\n    this.dataservice\n      .getUsers(\"KP_CALLER\")\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getUsers\", result.data.users);\n        this.users = result.data.users;\n      });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.btnDisabled = false;\n    } else {\n      this.btnDisabled = true;\n    }\n    console.log(this.selectedRows);\n    // this.router.navigate(\n    //   [\"/kpcaller/kp_customer_details\", selectedRows[0].id],\n    //   {\n    //     state: { data: selectedRows },\n    //   }\n    // );\n  }\n  FormSubmit() {\n    let resp = {};\n    console.log(\n      this.callerForm.value,\n      Array.from(this.selectedRows, (x) => x.id)\n    );\n    this.dataservice\n      .SetKpCaller(\n        this.callerForm.value.id,\n        Array.from(this.selectedRows, (x) => x.id)\n      )\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateUser) {\n          alert(\"Assigned successfully!\");\n          this.getLists();\n          this.myModal.hide();\n        } else {\n          alert(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>Verified List</h2>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" [disabled]=\\\"btnDisabled\\\"\\n        (click)=\\\"myModal.show()\\\">\\n        Assign to caller\\n      </button>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n          </ag-grid-angular>\\n        </div>\\n      </div>\\n    </div>\\n    <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n      aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Assign to Caller</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <form [formGroup]=\\\"callerForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"id\\\">KP Caller</label>\\n                <select class=\\\"form-control\\\" id=\\\"id\\\" required ngModel name=\\\"group\\\" formControlName=\\\"id\\\">\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of users\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.username }}\\n                  </option>\\n                </select>\\n              </div>\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\n                Close\\n              </button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !callerForm.valid\\\">\\n                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                  aria-hidden=\\\"true\\\"></span>\\n                Save changes\\n              </button>\\n            </form>\\n          </div>\\n        </div>\\n        <!-- /.modal-content -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n        aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-body text-center\\\">\\n                    Do you want to delete this agent?\\n                </div>\\n                <div class=\\\"modal-footer justify-content-around\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\n                        No! Cancel.\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteAgent()\\\">\\n                        Yes! Delete.\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n            <h2>Customer Details</h2>\\n            <span>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\n                Assign to field agent\\n            </button>\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" (click)=\\\"deleteModal.show()\\\">\\n                Delete\\n            </button> -->\\n            </span>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <div style=\\\"display: flex; justify-content: space-between\\\">\\n                            <h4>Basic details</h4>\\n                        </div>\\n                        <table class=\\\"table table-striped\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <td>ID</td>\\n                                    <td>{{details?.id}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Father</td>\\n                                    <td>{{details?.NameOfBride}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Father</td>\\n                                    <td>{{details?.NameOfFather}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Mother</td>\\n                                    <td>{{ details?.NameOfMother }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Marriage Date</td>\\n                                    <td>{{ details?.MarriageDate }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Marriage Month</td>\\n                                    <td>{{ details?.MarriageMonth }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Agent</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-warning\\\">{{ details.tele_caller_contact?.Name }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>KP Caller</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-primary\\\">{{ details.kp_caller_assigned?.username\\n                                            }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>House Name</td>\\n                                    <td>{{ details.Address?.HouseName }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Landmark</td>\\n                                    <td>{{ details.Address?.Landmark }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Locality</td>\\n                                    <td>{{ details.Address?.locality?.Name }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div style=\\\"display: flex; justify-content: space-between\\\">\\n                            <h4>Field Report</h4>\\n                        </div>\\n                        <table class=\\\"table table-striped\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <td>Financial category</td>\\n                                    <td>{{details.FieldReport?.FinancialBackground}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Quantity of intended purchase</td>\\n                                    <td>{{details.FieldReport?.QtyOfGold}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Suitable set</td>\\n                                    <td>{{details.FieldReport?.PreferredWeddingSet}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether planning to exchange after marriage?</td>\\n                                    <td>{{ details.FieldReport?.PlanningForReplacementAfterWedding }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Quantity of old gold for exchange</td>\\n                                    <td>{{ details.FieldReport?.OldGoldExchangeQty }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>No cost emi needed?</td>\\n                                    <td>{{ details.FieldReport?.NoCostEmiRequired }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>EMI tenure</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-warning\\\">{{ details.FieldReport?.EmiTenure }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Number of repayments</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-primary\\\">{{ details.FieldReport?.EmiIntervals\\n                                            }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Token advance</td>\\n                                    <td>{{ details.FieldReport?.TokenAdvance }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Rate advance</td>\\n                                    <td>{{ details.FieldReport?.RateAdvance }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether approached by other jewelleries?</td>\\n                                    <td>{{ details.FieldReport?.EnquiriesFromOthers }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Advance paid to other jewellery</td>\\n                                    <td>{{ details.FieldReport?.AdvancePaidToOtherJewellery }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether received any fresh leads?</td>\\n                                    <td>{{ details.FieldReport?.NumberOfNewMarriageAddress }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div style=\\\"display: flex; justify-content: space-between\\\">\\n                        <h4>Remarks</h4>\\n                    </div>\\n                    <div class=\\\"card\\\" *ngFor=\\\"let item of details.TelecallerRemarks\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">{{item.CallHistory?.event_date_time}}</h5>\\n                            <p class=\\\"card-text\\\">{{item.RemarksText}}</p>\\n                            <span\\n                                class=\\\"badge badge-primary\\\">{{item.CallHistory.users_permissions_user?.username}}</span>\\n                        </div>\\n                    </div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"commentModal.show()\\\">\\n                        Add Comment\\n                    </button>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n            aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <h4 class=\\\"modal-title\\\">Assign to field Agent</h4>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">                            \\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"group\\\">Field agent</label>\\n                                <select class=\\\"form-control\\\" id=\\\"agent\\\" required ngModel name=\\\"agent\\\"\\n                                    formControlName=\\\"agent\\\">\\n                                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                                    <option *ngFor=\\\"let item of users\\\" value=\\\"{{ item.id }}\\\">\\n                                        {{ item.username }}\\n                                    </option>\\n                                </select>\\n                            </div>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\n                                Close\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\"\\n                                [disabled]=\\\"btnLoading || !agentForm.valid\\\">\\n                                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                                    aria-hidden=\\\"true\\\"></span>\\n                                Save changes\\n                            </button>\\n                        </form>\\n                    </div>\\n                </div>\\n                <!-- /.modal-content -->\\n            </div>\\n            <!-- /.modal-dialog -->\\n        </div>\\n        <div bsModal #commentModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n            aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <h4 class=\\\"modal-title\\\">Add Comment</h4>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"commentModal.hide()\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"CommentSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\">Remarks</label>\\n                                <textarea class=\\\"form-control\\\" maxlength=\\\"250\\\" id=\\\"RemarksText\\\" name=\\\"RemarksText\\\"\\n                                    formControlName=\\\"RemarksText\\\" placeholder=\\\"Enter remarks\\\"></textarea>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"email\\\">Date</label>\\n                                <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"event_date_time\\\"\\n                                    name=\\\"event_date_time\\\" formControlName=\\\"event_date_time\\\" />\\n                            </div>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\n                                Close\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\"\\n                                [disabled]=\\\"btnLoading || !commentForm.valid\\\">\\n                                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                                    aria-hidden=\\\"true\\\"></span>\\n                                Save changes\\n                            </button>\\n                        </form>\\n                    </div>\\n                </div>\\n                <!-- /.modal-content -->\\n            </div>\\n            <!-- /.modal-dialog -->\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>Customers</h2>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\n        New\\n      </button>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n          </ag-grid-angular>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Add New Customer</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Name of Bride</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfBride\\\" name=\\\"NameOfBride\\\" formControlName=\\\"NameOfBride\\\"\\n                placeholder=\\\"Enter bride's name\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Name of Father</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfFather\\\" name=\\\"NameOfFather\\\"\\n                formControlName=\\\"NameOfFather\\\" placeholder=\\\"Enter father's name\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Name of Mother</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfMother\\\" name=\\\"NameOfMother\\\"\\n                formControlName=\\\"NameOfMother\\\" placeholder=\\\"Enter mother's name\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Marriage date</label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"MarriageDate\\\" name=\\\"MarriageDate\\\"\\n                formControlName=\\\"MarriageDate\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"group\\\">Marriage month</label>\\n              <select class=\\\"form-control\\\" id=\\\"MarriageMonth\\\" required ngModel name=\\\"MarriageMonth\\\" formControlName=\\\"MarriageMonth\\\">\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                <option *ngFor=\\\"let item of Months\\\" value=\\\"{{ item.id }}\\\">\\n                  {{ item.Name }}\\n                </option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"group\\\">Agent</label>\\n              <select class=\\\"form-control\\\" id=\\\"tele_caller_contact\\\" required ngModel name=\\\"tele_caller_contact\\\" formControlName=\\\"tele_caller_contact\\\">\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                <option *ngFor=\\\"let item of agents\\\" value=\\\"{{ item.id }}\\\">\\n                  {{ item.Name }}\\n                </option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">House Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"HouseName\\\" name=\\\"HouseName\\\"\\n                formControlName=\\\"HouseName\\\" placeholder=\\\"Enter House Name\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Landmark</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Landmark\\\" name=\\\"Landmark\\\"\\n                formControlName=\\\"Landmark\\\" placeholder=\\\"Enter Landmark\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"locality\\\">Name of locality</label>\\n              <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"locality\\\" name=\\\"locality\\\" formControlName=\\\"locality\\\"\\n                placeholder=\\\"Enter locality\\\" /> -->\\n                <select class=\\\"form-control\\\" id=\\\"locality\\\" required ngModel name=\\\"locality\\\" formControlName=\\\"locality\\\">\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of localities\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.Name }}\\n                  </option>\\n                </select>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\n              Close\\n            </button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !customerForm.valid\\\">\\n              <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\n              Save changes\\n            </button>\\n          </form>\\n        </div>\\n      </div>\\n      <!-- /.modal-content -->\\n    </div>\\n    <!-- /.modal-dialog -->\\n  </div>\\n  <!-- /.modal -->\\n</div>\";"]}