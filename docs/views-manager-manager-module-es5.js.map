{"version":3,"sources":["webpack:///src/app/views/manager/manager.module.ts","webpack:///src/app/views/manager/enquiries.component.ts","webpack:///src/app/views/manager/customerdetail.component.ts","webpack:///src/app/views/manager/customers.component.ts","webpack:///node_modules/ngx-bootstrap/carousel/fesm2015/ngx-bootstrap-carousel.js","webpack:///src/app/views/manager/manager-routing.module.ts","webpack:///src/app/views/manager/verified.component.ts","webpack:///src/app/views/manager/verified.component.html","webpack:///src/app/views/manager/customerdetail.component.html","webpack:///src/app/views/manager/customers.component.html","webpack:///src/app/views/manager/enquiries.component.html"],"names":["ManagerModule","imports","withComponents","forRoot","declarations","EnquiriesComponent","dataservice","router","fb","customerForm","group","NameOfBride","required","NameOfFather","NameOfMother","MarriageDate","Contact_Number_1","Contact_Number_2","MarriageMonth","tele_caller_contact","HouseName","Landmark","locality","loading","btnLoading","orders","columnDefs","rowData","agents","localities","Months","rowSelection","getLists","getCustomers","valueChanges","subscribe","result","console","log","data","customers","getLocalities","getAgents","teleCallerContacts","params","gridApi","api","gridColumnApi","columnApi","event","selectedRows","getSelectedRows","navigate","id","state","resp","value","Addcustomer","createCustomer","alert","myModal","hide","template","ManagerCustomerDetailComponent","activatedRouter","details","dateConverter","users","agentForm","agent","commentForm","RemarksText","getSingleCustomer","customer","getUsers","SetFieldAgent","updateUser","AddCustomerComment","updateCustomer","commentModal","DeleteAgent","deleteTeleCallerContact","deleteModal","ManagerCustomerComponent","CarouselComponent_ol_1_li_1_Template","rf","ctx","_r7","CarouselComponent_ol_1_li_1_Template_li_click_0_listener","i_r5","index","ctx_r6","selectSlide","slide_r4","$implicit","active","CarouselComponent_ol_1_Template","ctx_r0","indicatorsSlides","CarouselComponent_a_4_span_2_Template","CarouselComponent_a_4_Template","_r10","CarouselComponent_a_4_Template_a_click_0_listener","ctx_r9","previousSlide","ctx_r1","activeSlide","noWrap","isBs4","CarouselComponent_a_5_Template","_r12","CarouselComponent_a_5_Template_a_click_0_listener","ctx_r11","nextSlide","ctx_r2","isLast","_c0","a0","_c1","CarouselConfig","interval","noPause","showIndicators","pauseOnFocus","indicatorsByChunk","itemsPerSlide","singleSlideOffset","ɵfac","CarouselConfig_Factory","t","ɵprov","factory","token","providedIn","ngDevMode","type","args","findLastIndex","array","predicate","l","length","chunkByNumber","size","out","n","Math","ceil","i","chunk","splice","push","Direction","UNKNOWN","NEXT","PREV","CarouselComponent","config","ngZone","isAnimated","activeSlideChange","slideRangeChange","startFromIndex","_slides","_currentVisibleSlidesIndex","destroyed","getActive","slide","makeSlidesConsistent","slides","forEach","item","order","Object","assign","_currentActiveSlide","multilist","_select","_interval","restartTimer","toArray","setTimeout","_chunkedSlides","mapSlidesAndIndexes","selectInitialSlides","add","undefined","play","remIndex","indexOf","nextSlideIndex","remove","currentSlideIndex","getCurrentSlideIndex","emit","force","move","isPlaying","findIndex","direction","firstVisibleIndex","getFirstVisibleIndex","lastVisibleIndex","getLastVisibleIndex","findNextSlideIndex","moveMultilist","keyCode","key","preventDefault","resetTimer","selectSlideRange","filter","startIndex","hideSlides","_slidesWithIndexes","slidesToAppend","slice","selectRangeByNestedIndex","getVisibleIndexes","Error","map","isIndexInRange","isIndexOnTheEdges","endIndex","selectedRange","slidesList","list","find","visibleIndexes","indexToHide","indexToShow","get","slidesToReorder","displayedIndex","shift","pop","isFirst","moveSliderByOneItem","isVisibleSlideListLast","isVisibleSlideListFirst","isNaN","pause","currentSlide","currentInterval","runOutsideAngular","setInterval","nInterval","run","nextSlideFromInterval","clearInterval","CarouselComponent_Factory","ɵcmp","selectors","inputs","outputs","ngContentSelectors","decls","vars","consts","CarouselComponent_Template","CarouselComponent_Template_div_mouseenter_0_listener","CarouselComponent_Template_div_mouseleave_0_listener","onMouseLeave","CarouselComponent_Template_div_mouseup_0_listener","onMouseUp","CarouselComponent_Template_div_keydown_0_listener","$event","keydownPress","CarouselComponent_Template_div_focusin_0_listener","pauseFocusIn","CarouselComponent_Template_div_focusout_0_listener","pauseFocusOut","directives","encapsulation","ctorParameters","propDecorators","selector","SlideComponent","carousel","itemWidth","addClass","addSlide","removeSlide","SlideComponent_Factory","hostVars","hostBindings","SlideComponent_HostBindings","SlideComponent_Template","styles","host","CarouselModule","ngModule","providers","ɵmod","ɵinj","CarouselModule_Factory","ngJitMode","exports","routes","path","children","redirectTo","canActivate","component","roles","title","ManagerRoutingModule","forChild","VerifiedListComponent","route","callerForm","label","btnDisabled","routerData","snapshot","is_verified","kp_caller_assigned_null","getCustomersFilter","Array","from","x","SetTeleCaller","SetKpCaller"],"mappings":"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","file":"views-manager-manager-module-es5.js","sourcesContent":["// Angular\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { NgModule } from '@angular/core';\nimport { VerifiedListComponent } from './verified.component';\n\n// import { TypographyComponent } from './typography.component';\n\n// Theme Routing\nimport { ManagerRoutingModule } from './manager-routing.module';\nimport { ManagerCustomerComponent } from './customers.component';\nimport { ManagerCustomerDetailComponent } from './customerdetail.component';\nimport { EnquiriesComponent } from './enquiries.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ManagerRoutingModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    ModalModule.forRoot(),\n    CarouselModule.forRoot(),\n    FormsModule,\n  ],\n  declarations: [\n    VerifiedListComponent,\n    ManagerCustomerComponent,\n    ManagerCustomerDetailComponent,\n    EnquiriesComponent\n  ]\n})\nexport class ManagerModule { }\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { customerColumnsWithKpCaller,Months } from \"../../constants/columnMetadata\";\r\n\r\n@Component({\r\n  templateUrl: \"enquiries.component.html\",\r\n})\r\nexport class EnquiriesComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private router: Router,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.columnDefs = [...customerColumnsWithKpCaller];\r\n    this.Months = [...Months];\r\n    this.rowSelection = \"single\";\r\n  }\r\n\r\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\r\n  customerForm = this.fb.group({\r\n    NameOfBride: [\"\", Validators.required],\r\n    NameOfFather: [\"\", Validators.required],\r\n    NameOfMother: [\"\", Validators.required],\r\n    MarriageDate: [\"\", Validators.required],\r\n    Contact_Number_1: [\"\", Validators.required],\r\n    Contact_Number_2: [\"\", Validators.required],\r\n    MarriageMonth: [\"\", Validators.required],\r\n    tele_caller_contact: [\"\", Validators.required],\r\n    HouseName: [\"\", Validators.required],\r\n    Landmark: [\"\", Validators.required],\r\n    locality: [\"\", Validators.required],\r\n  });\r\n  loading = true;\r\n  btnLoading = false;\r\n  orders: any = {};\r\n  columnDefs = [];\r\n  Months;\r\n  rowData: any = [];\r\n  agents: any = [];\r\n  localities: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n\r\n  ngOnInit(): void {\r\n    this.getLists();\r\n  }\r\n  getLists() {\r\n    this.loading = true;\r\n    this.dataservice.getCustomers().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getCustomers\", result.data.customers);\r\n      this.rowData = result.data.customers;\r\n    });\r\n    this.dataservice.getLocalities().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getLocalities\", result.data.localities);\r\n      this.localities = result.data.localities;\r\n    });\r\n    this.dataservice.getAgents().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getAgents\", result.data.teleCallerContacts);\r\n      this.agents = result.data.teleCallerContacts;\r\n    });\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n  onSelectionChanged(event) {\r\n    var selectedRows = this.gridApi.getSelectedRows();\r\n    console.log(selectedRows);\r\n    this.router.navigate([\"/manager/customer_details\",selectedRows[0].id], {\r\n      state: { data: selectedRows },\r\n    });\r\n  }\r\n  FormSubmit() {\r\n    let resp = {};\r\n    console.log(this.customerForm.value);\r\n    this.dataservice.Addcustomer(this.customerForm.value).subscribe((result: any) => {\r\n      resp = result.data;\r\n      console.log(\"response\", result);\r\n      if (result.data.createCustomer) {\r\n        alert(\"customer added successfully!\");\r\n        this.getLists();\r\n        this.myModal.hide();\r\n      } else {\r\n        alert(\"Failed. Please check the fields!\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { dateConverter } from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: \"customerdetail.component.html\",\n})\nexport class ManagerCustomerDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n  @ViewChild(\"commentModal\") public commentModal: ModalDirective;\n\n  id: any;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverter = dateConverter;\n  users: any = [];\n  agentForm = this.fb.group({\n    agent: [\"\", Validators.required],\n  });\n  commentForm = this.fb.group({\n    RemarksText: [\"\", Validators.required],\n    // event_date_time: [\"\", Validators.required],\n  });\n\n  ngOnInit(): void {\n    this.getLists();\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n    });\n    this.dataservice\n      .getSingleCustomer(this.id)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getSingleCustomer\", result.data.customer);\n        this.details = result.data.customer;\n        this.loading = false;\n      });\n  }\n  getLists() {\n    this.loading = true;\n    this.dataservice\n      .getUsers(\"FIELD_AGENT\")\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getUsers\", result.data.users);\n        this.users = result.data.users;\n      });\n  }\n  FormSubmit() {\n    let resp = {};\n    console.log(this.agentForm.value);\n    this.dataservice\n      .SetFieldAgent(this.agentForm.value.agent, this.details.id)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateUser) {\n          alert(\"Field Agent assigned successfully!\");\n          this.myModal.hide();\n        } else {\n          alert(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n  CommentSubmit() {\n    let resp = {};\n    console.log(this.commentForm.value);\n    this.dataservice\n      .AddCustomerComment(this.details.id, this.commentForm.value)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateCustomer) {\n          alert(\"Comment added successfully!\");\n          this.commentModal.hide();\n        } else {\n          alert(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n  deleteAgent() {\n    let resp = {};\n    this.dataservice.DeleteAgent(this.id).subscribe((result: any) => {\n      resp = result.data;\n      console.log(\"response\", result);\n      if (result.data.deleteTeleCallerContact) {\n        alert(\"Agent deleted successfully!\");\n        this.router.navigate([\"/order/order_processing\"]);\n        this.deleteModal.hide();\n      } else {\n        alert(\"Failed. Please check again!\");\n      }\n    });\n  }\n}\n","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { customerColumnsWithKpCaller,Months } from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: \"customers.component.html\",\n})\nexport class ManagerCustomerComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.columnDefs = [...customerColumnsWithKpCaller];\n    this.Months = [...Months];\n    this.rowSelection = \"single\";\n  }\n\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  customerForm = this.fb.group({\n    NameOfBride: [\"\", Validators.required],\n    NameOfFather: [\"\", Validators.required],\n    NameOfMother: [\"\", Validators.required],\n    MarriageDate: [\"\", Validators.required],\n    Contact_Number_1: [\"\", Validators.required],\n    Contact_Number_2: [\"\", Validators.required],\n    MarriageMonth: [\"\", Validators.required],\n    tele_caller_contact: [\"\", Validators.required],\n    HouseName: [\"\", Validators.required],\n    Landmark: [\"\", Validators.required],\n    locality: [\"\", Validators.required],\n  });\n  loading = true;\n  btnLoading = false;\n  orders: any = {};\n  columnDefs = [];\n  Months;\n  rowData: any = [];\n  agents: any = [];\n  localities: any = [];\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.getLists();\n  }\n  getLists() {\n    this.loading = true;\n    this.dataservice.getCustomers().valueChanges.subscribe((result: any) => {\n      console.log(\"getCustomers\", result.data.customers);\n      this.rowData = result.data.customers;\n    });\n    this.dataservice.getLocalities().valueChanges.subscribe((result: any) => {\n      console.log(\"getLocalities\", result.data.localities);\n      this.localities = result.data.localities;\n    });\n    this.dataservice.getAgents().valueChanges.subscribe((result: any) => {\n      console.log(\"getAgents\", result.data.teleCallerContacts);\n      this.agents = result.data.teleCallerContacts;\n    });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    var selectedRows = this.gridApi.getSelectedRows();\n    console.log(selectedRows);\n    this.router.navigate([\"/manager/customer_details\",selectedRows[0].id], {\n      state: { data: selectedRows },\n    });\n  }\n  FormSubmit() {\n    let resp = {};\n    console.log(this.customerForm.value);\n    this.dataservice.Addcustomer(this.customerForm.value).subscribe((result: any) => {\n      resp = result.data;\n      console.log(\"response\", result);\n      if (result.data.createCustomer) {\n        alert(\"customer added successfully!\");\n        this.getLists();\n        this.myModal.hide();\n      } else {\n        alert(\"Failed. Please check the fields!\");\n      }\n    });\n  }\n}\n","import { Injectable, ɵɵdefineInjectable, EventEmitter, Component, NgZone, Input, Output, HostBinding, NgModule } from '@angular/core';\nimport { LinkedList, isBs3 } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction CarouselComponent_ol_1_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ol_1_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const i_r5 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.selectSlide(i_r5); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const slide_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r4.active === true);\n} }\nfunction CarouselComponent_ol_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ol\", 5);\n    ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_1_li_1_Template, 1, 2, \"li\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.indicatorsSlides());\n} }\nfunction CarouselComponent_a_4_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 11);\n    ɵngcc0.ɵɵtext(1, \"Previous\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction CarouselComponent_a_4_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_4_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.previousSlide(); });\n    ɵngcc0.ɵɵelement(1, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(2, CarouselComponent_a_4_span_2_Template, 2, 0, \"span\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r1.activeSlide === 0 && ctx_r1.noWrap);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isBs4);\n} }\nfunction CarouselComponent_a_5_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_5_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.nextSlide(); });\n    ɵngcc0.ɵɵelement(1, \"span\", 13);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 11);\n    ɵngcc0.ɵɵtext(3, \"Next\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r2.isLast(ctx_r2.activeSlide) && ctx_r2.noWrap);\n} }\nconst _c0 = function (a0) { return { \"display\": a0 }; };\nconst _c1 = [\"*\"];\nclass CarouselConfig {\n    constructor() {\n        /* Default interval of auto changing of slides */\n        this.interval = 5000;\n        /* Is loop of auto changing of slides can be paused */\n        this.noPause = false;\n        /* Is slides can wrap from the last to the first slide */\n        this.noWrap = false;\n        /* Show carousel-indicators */\n        this.showIndicators = true;\n        /* Slides can be paused on focus */\n        this.pauseOnFocus = false;\n        /* If `true` - carousel indicators indicate slides chunks works ONLY if singleSlideOffset = FALSE */\n        this.indicatorsByChunk = false;\n        /* If value more then 1 — carousel works in multilist mode */\n        this.itemsPerSlide = 1;\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\n            of visible elements (itemsPerSlide field) */\n        this.singleSlideOffset = false;\n    }\n}\nCarouselConfig.ɵfac = function CarouselConfig_Factory(t) { return new (t || CarouselConfig)(); };\n/** @nocollapse */ CarouselConfig.ɵprov = ɵɵdefineInjectable({ factory: function CarouselConfig_Factory() { return new CarouselConfig(); }, token: CarouselConfig, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselConfig, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /** @type {?} */\n    CarouselConfig.prototype.interval;\n    /** @type {?} */\n    CarouselConfig.prototype.noPause;\n    /** @type {?} */\n    CarouselConfig.prototype.noWrap;\n    /** @type {?} */\n    CarouselConfig.prototype.showIndicators;\n    /** @type {?} */\n    CarouselConfig.prototype.pauseOnFocus;\n    /** @type {?} */\n    CarouselConfig.prototype.indicatorsByChunk;\n    /** @type {?} */\n    CarouselConfig.prototype.itemsPerSlide;\n    /** @type {?} */\n    CarouselConfig.prototype.singleSlideOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the index of the last element in the array where predicate is true, and -1\n * otherwise.\n * @template T\n * @param {?} array The source array to search in\n * @param {?} predicate find calls predicate once for each element of the array, in descending\n * order, until it finds one where predicate returns true. If such an element is found,\n * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n * @return {?}\n */\nfunction findLastIndex(array, predicate) {\n    /** @type {?} */\n    let l = array.length;\n    while (l--) {\n        if (predicate(array[l], l, array)) {\n            return l;\n        }\n    }\n    return -1;\n}\n/**\n * @template T\n * @param {?} array\n * @param {?} size\n * @return {?}\n */\nfunction chunkByNumber(array, size) {\n    /** @type {?} */\n    const out = [];\n    /** @type {?} */\n    const n = Math.ceil((array.length) / size);\n    /** @type {?} */\n    let i = 0;\n    while (i < n) {\n        /** @type {?} */\n        const chunk = array.splice(0, (i === n - 1) && size < array.length ? array.length : size);\n        out.push(chunk);\n        i++;\n    }\n    return out;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst Direction = {\n    UNKNOWN: 0,\n    NEXT: 1,\n    PREV: 2,\n};\nDirection[Direction.UNKNOWN] = 'UNKNOWN';\nDirection[Direction.NEXT] = 'NEXT';\nDirection[Direction.PREV] = 'PREV';\n/**\n * Base element to create carousel\n */\nclass CarouselComponent {\n    /**\n     * @param {?} config\n     * @param {?} ngZone\n     */\n    constructor(config, ngZone) {\n        this.ngZone = ngZone;\n        /* If `true` - carousel indicators indicate slides chunks\n             works ONLY if singleSlideOffset = FALSE */\n        this.indicatorsByChunk = false;\n        /* If value more then 1 — carousel works in multilist mode */\n        this.itemsPerSlide = 1;\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\n             of visible elements (itemsPerSlide field) */\n        this.singleSlideOffset = false;\n        /**\n         * Turn on/off animation. Animation doesn't work for multilist carousel\n         */\n        this.isAnimated = false;\n        /**\n         * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n         */\n        this.activeSlideChange = new EventEmitter(false);\n        /**\n         * Will be emitted when active slides has been changed in multilist mode\n         */\n        this.slideRangeChange = new EventEmitter();\n        /* Index to start display slides from it */\n        this.startFromIndex = 0;\n        this._slides = new LinkedList();\n        this._currentVisibleSlidesIndex = 0;\n        this.destroyed = false;\n        this.getActive = (/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => slide.active);\n        this.makeSlidesConsistent = (/**\n         * @param {?} slides\n         * @return {?}\n         */\n        (slides) => {\n            slides.forEach((/**\n             * @param {?} slide\n             * @param {?} index\n             * @return {?}\n             */\n            (slide, index) => slide.item.order = index));\n        });\n        Object.assign(this, config);\n    }\n    /**\n     * Index of currently displayed slide(started for 0)\n     * @param {?} index\n     * @return {?}\n     */\n    set activeSlide(index) {\n        if (this.multilist) {\n            return;\n        }\n        if (this._slides.length && index !== this._currentActiveSlide) {\n            this._select(index);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get activeSlide() {\n        return this._currentActiveSlide;\n    }\n    /**\n     * Delay of item cycling in milliseconds. If false, carousel won't cycle\n     * automatically.\n     * @return {?}\n     */\n    get interval() {\n        return this._interval;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set interval(value) {\n        this._interval = value;\n        this.restartTimer();\n    }\n    /**\n     * @return {?}\n     */\n    get slides() {\n        return this._slides.toArray();\n    }\n    /**\n     * @return {?}\n     */\n    get isBs4() {\n        return !isBs3();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this.singleSlideOffset) {\n                this.indicatorsByChunk = false;\n            }\n            if (this.multilist) {\n                this._chunkedSlides = chunkByNumber(this.mapSlidesAndIndexes(), this.itemsPerSlide);\n                this.selectInitialSlides();\n            }\n        }), 0);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed = true;\n    }\n    /**\n     * Adds new slide. If this slide is first in collection - set it as active\n     * and starts auto changing\n     * @param {?} slide\n     * @return {?}\n     */\n    addSlide(slide) {\n        this._slides.add(slide);\n        if (this.multilist && this._slides.length <= this.itemsPerSlide) {\n            slide.active = true;\n        }\n        if (!this.multilist && this.isAnimated) {\n            slide.isAnimated = true;\n        }\n        if (!this.multilist && this._slides.length === 1) {\n            this._currentActiveSlide = undefined;\n            this.activeSlide = 0;\n            this.play();\n        }\n        if (this.multilist && this._slides.length > this.itemsPerSlide) {\n            this.play();\n        }\n    }\n    /**\n     * Removes specified slide. If this slide is active - will roll to another\n     * slide\n     * @param {?} slide\n     * @return {?}\n     */\n    removeSlide(slide) {\n        /** @type {?} */\n        const remIndex = this._slides.indexOf(slide);\n        if (this._currentActiveSlide === remIndex) {\n            // removing of active slide\n            /** @type {?} */\n            let nextSlideIndex = void 0;\n            if (this._slides.length > 1) {\n                // if this slide last - will roll to first slide, if noWrap flag is\n                // FALSE or to previous, if noWrap is TRUE in case, if this slide in\n                // middle of collection, index of next slide is same to removed\n                nextSlideIndex = !this.isLast(remIndex)\n                    ? remIndex\n                    : this.noWrap ? remIndex - 1 : 0;\n            }\n            this._slides.remove(remIndex);\n            // prevents exception with changing some value after checking\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._select(nextSlideIndex);\n            }), 0);\n        }\n        else {\n            this._slides.remove(remIndex);\n            /** @type {?} */\n            const currentSlideIndex = this.getCurrentSlideIndex();\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // after removing, need to actualize index of current active slide\n                this._currentActiveSlide = currentSlideIndex;\n                this.activeSlideChange.emit(this._currentActiveSlide);\n            }), 0);\n        }\n    }\n    /**\n     * @param {?=} force\n     * @return {?}\n     */\n    nextSlideFromInterval(force = false) {\n        this.move(Direction.NEXT, force);\n    }\n    /**\n     * Rolling to next slide\n     * @param {?=} force\n     * @return {?}\n     */\n    nextSlide(force = false) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        this.move(Direction.NEXT, force);\n    }\n    /**\n     * Rolling to previous slide\n     * @param {?=} force\n     * @return {?}\n     */\n    previousSlide(force = false) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        this.move(Direction.PREV, force);\n    }\n    /**\n     * @return {?}\n     */\n    getFirstVisibleIndex() {\n        return this.slides.findIndex(this.getActive);\n    }\n    /**\n     * @return {?}\n     */\n    getLastVisibleIndex() {\n        return findLastIndex(this.slides, this.getActive);\n    }\n    /**\n     * @param {?} direction\n     * @param {?=} force\n     * @return {?}\n     */\n    move(direction, force = false) {\n        /** @type {?} */\n        const firstVisibleIndex = this.getFirstVisibleIndex();\n        /** @type {?} */\n        const lastVisibleIndex = this.getLastVisibleIndex();\n        if (this.noWrap) {\n            if (direction === Direction.NEXT &&\n                this.isLast(lastVisibleIndex) ||\n                direction === Direction.PREV &&\n                    firstVisibleIndex === 0) {\n                return;\n            }\n        }\n        if (!this.multilist) {\n            this.activeSlide = this.findNextSlideIndex(direction, force);\n        }\n        else {\n            this.moveMultilist(direction);\n        }\n    }\n    /**\n     * Swith slides by enter, space and arrows keys\n     * \\@internal\n     * @param {?} event\n     * @return {?}\n     */\n    keydownPress(event) {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n            this.nextSlide();\n            event.preventDefault();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 37 || event.key === 'LeftArrow') {\n            this.previousSlide();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 39 || event.key === 'RightArrow') {\n            this.nextSlide();\n            return;\n        }\n    }\n    /**\n     * Play on mouse leave\n     * \\@internal\n     * @return {?}\n     */\n    onMouseLeave() {\n        if (!this.pauseOnFocus) {\n            this.play();\n        }\n    }\n    /**\n     * Play on mouse up\n     * \\@internal\n     * @return {?}\n     */\n    onMouseUp() {\n        if (!this.pauseOnFocus) {\n            this.play();\n        }\n    }\n    /**\n     * When slides on focus autoplay is stopped(optional)\n     * \\@internal\n     * @return {?}\n     */\n    pauseFocusIn() {\n        if (this.pauseOnFocus) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    }\n    /**\n     * When slides out of focus autoplay is started\n     * \\@internal\n     * @return {?}\n     */\n    pauseFocusOut() {\n        this.play();\n    }\n    /**\n     * Rolling to specified slide\n     * @param {?} index\n     * @return {?}\n     */\n    selectSlide(index) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        if (!this.multilist) {\n            this.activeSlide = this.indicatorsByChunk ? index * this.itemsPerSlide : index;\n        }\n        else {\n            this.selectSlideRange(this.indicatorsByChunk ? index * this.itemsPerSlide : index);\n        }\n    }\n    /**\n     * Starts a auto changing of slides\n     * @return {?}\n     */\n    play() {\n        if (!this.isPlaying) {\n            this.isPlaying = true;\n            this.restartTimer();\n        }\n    }\n    /**\n     * Stops a auto changing of slides\n     * @return {?}\n     */\n    pause() {\n        if (!this.noPause) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    }\n    /**\n     * Finds and returns index of currently displayed slide\n     * @return {?}\n     */\n    getCurrentSlideIndex() {\n        return this._slides.findIndex(this.getActive);\n    }\n    /**\n     * Defines, whether the specified index is last in collection\n     * @param {?} index\n     * @return {?}\n     */\n    isLast(index) {\n        return index + 1 >= this._slides.length;\n    }\n    /**\n     * Defines, whether the specified index is first in collection\n     * @param {?} index\n     * @return {?}\n     */\n    isFirst(index) {\n        return index === 0;\n    }\n    /**\n     * @return {?}\n     */\n    indicatorsSlides() {\n        return this.slides.filter((/**\n         * @param {?} slide\n         * @param {?} index\n         * @return {?}\n         */\n        (slide, index) => !this.indicatorsByChunk || index % this.itemsPerSlide === 0));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    selectInitialSlides() {\n        /** @type {?} */\n        const startIndex = this.startFromIndex <= this._slides.length\n            ? this.startFromIndex\n            : 0;\n        this.hideSlides();\n        if (this.singleSlideOffset) {\n            this._slidesWithIndexes = this.mapSlidesAndIndexes();\n            if (this._slides.length - startIndex < this.itemsPerSlide) {\n                /** @type {?} */\n                const slidesToAppend = this._slidesWithIndexes.slice(0, startIndex);\n                this._slidesWithIndexes = [\n                    ...this._slidesWithIndexes,\n                    ...slidesToAppend\n                ]\n                    .slice(slidesToAppend.length)\n                    .slice(0, this.itemsPerSlide);\n            }\n            else {\n                this._slidesWithIndexes = this._slidesWithIndexes.slice(startIndex, startIndex + this.itemsPerSlide);\n            }\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n        }\n        else {\n            this.selectRangeByNestedIndex(startIndex);\n        }\n        this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n    /**\n     * Defines next slide index, depending of direction\n     * @private\n     * @param {?} direction\n     * @param {?} force\n     * @return {?}\n     */\n    findNextSlideIndex(direction, force) {\n        /** @type {?} */\n        let nextSlideIndex = 0;\n        if (!force &&\n            (this.isLast(this.activeSlide) &&\n                direction !== Direction.PREV &&\n                this.noWrap)) {\n            return undefined;\n        }\n        switch (direction) {\n            case Direction.NEXT:\n                // if this is last slide, not force, looping is disabled\n                // and need to going forward - select current slide, as a next\n                nextSlideIndex = !this.isLast(this._currentActiveSlide)\n                    ? this._currentActiveSlide + 1\n                    : !force && this.noWrap ? this._currentActiveSlide : 0;\n                break;\n            case Direction.PREV:\n                // if this is first slide, not force, looping is disabled\n                // and need to going backward - select current slide, as a next\n                nextSlideIndex =\n                    this._currentActiveSlide > 0\n                        ? this._currentActiveSlide - 1\n                        : !force && this.noWrap\n                            ? this._currentActiveSlide\n                            : this._slides.length - 1;\n                break;\n            default:\n                throw new Error('Unknown direction');\n        }\n        return nextSlideIndex;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    mapSlidesAndIndexes() {\n        return this.slides\n            .slice()\n            .map((/**\n         * @param {?} slide\n         * @param {?} index\n         * @return {?}\n         */\n        (slide, index) => {\n            return {\n                index,\n                item: slide\n            };\n        }));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    selectSlideRange(index) {\n        if (this.isIndexInRange(index)) {\n            return;\n        }\n        this.hideSlides();\n        if (!this.singleSlideOffset) {\n            this.selectRangeByNestedIndex(index);\n        }\n        else {\n            /** @type {?} */\n            const startIndex = this.isIndexOnTheEdges(index)\n                ? index\n                : index - this.itemsPerSlide + 1;\n            /** @type {?} */\n            const endIndex = this.isIndexOnTheEdges(index)\n                ? index + this.itemsPerSlide\n                : index + 1;\n            this._slidesWithIndexes = this.mapSlidesAndIndexes().slice(startIndex, endIndex);\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n        }\n        this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    selectRangeByNestedIndex(index) {\n        /** @type {?} */\n        const selectedRange = this._chunkedSlides\n            .map((/**\n         * @param {?} slidesList\n         * @param {?} i\n         * @return {?}\n         */\n        (slidesList, i) => {\n            return {\n                index: i,\n                list: slidesList\n            };\n        }))\n            .find((/**\n         * @param {?} slidesList\n         * @return {?}\n         */\n        (slidesList) => {\n            return slidesList.list.find((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            slide => slide.index === index)) !== undefined;\n        }));\n        this._currentVisibleSlidesIndex = selectedRange.index;\n        this._chunkedSlides[selectedRange.index].forEach((/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => {\n            slide.item.active = true;\n        }));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    isIndexOnTheEdges(index) {\n        return (index + 1 - this.itemsPerSlide <= 0 ||\n            index + this.itemsPerSlide <= this._slides.length);\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    isIndexInRange(index) {\n        if (this.singleSlideOffset) {\n            /** @type {?} */\n            const visibleIndexes = this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n            return visibleIndexes.indexOf(index) >= 0;\n        }\n        return (index <= this.getLastVisibleIndex() &&\n            index >= this.getFirstVisibleIndex());\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    hideSlides() {\n        this.slides.forEach((/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => slide.active = false));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isVisibleSlideListLast() {\n        return this._currentVisibleSlidesIndex === this._chunkedSlides.length - 1;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isVisibleSlideListFirst() {\n        return this._currentVisibleSlidesIndex === 0;\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    moveSliderByOneItem(direction) {\n        /** @type {?} */\n        let firstVisibleIndex;\n        /** @type {?} */\n        let lastVisibleIndex;\n        /** @type {?} */\n        let indexToHide;\n        /** @type {?} */\n        let indexToShow;\n        if (this.noWrap) {\n            firstVisibleIndex = this.getFirstVisibleIndex();\n            lastVisibleIndex = this.getLastVisibleIndex();\n            indexToHide = direction === Direction.NEXT\n                ? firstVisibleIndex\n                : lastVisibleIndex;\n            indexToShow = direction !== Direction.NEXT\n                ? firstVisibleIndex - 1\n                : !this.isLast(lastVisibleIndex)\n                    ? lastVisibleIndex + 1 : 0;\n            this._slides.get(indexToHide).active = false;\n            this._slides.get(indexToShow).active = true;\n            /** @type {?} */\n            const slidesToReorder = this.mapSlidesAndIndexes().filter((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active));\n            this.makeSlidesConsistent(slidesToReorder);\n            this.slideRangeChange.emit(this.getVisibleIndexes());\n        }\n        else {\n            /** @type {?} */\n            let displayedIndex;\n            firstVisibleIndex = this._slidesWithIndexes[0].index;\n            lastVisibleIndex = this._slidesWithIndexes[this._slidesWithIndexes.length - 1].index;\n            if (direction === Direction.NEXT) {\n                this._slidesWithIndexes.shift();\n                displayedIndex = this.isLast(lastVisibleIndex)\n                    ? 0\n                    : lastVisibleIndex + 1;\n                this._slidesWithIndexes.push({\n                    index: displayedIndex,\n                    item: this._slides.get(displayedIndex)\n                });\n            }\n            else {\n                this._slidesWithIndexes.pop();\n                displayedIndex = this.isFirst(firstVisibleIndex)\n                    ? this._slides.length - 1\n                    : firstVisibleIndex - 1;\n                this._slidesWithIndexes = [{\n                        index: displayedIndex,\n                        item: this._slides.get(displayedIndex)\n                    }, ...this._slidesWithIndexes];\n            }\n            this.hideSlides();\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            slide => slide.item.active = true));\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n            this.slideRangeChange.emit(this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index)));\n        }\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    moveMultilist(direction) {\n        if (this.singleSlideOffset) {\n            this.moveSliderByOneItem(direction);\n        }\n        else {\n            this.hideSlides();\n            if (this.noWrap) {\n                this._currentVisibleSlidesIndex = direction === Direction.NEXT\n                    ? this._currentVisibleSlidesIndex + 1\n                    : this._currentVisibleSlidesIndex - 1;\n            }\n            else {\n                if (direction === Direction.NEXT) {\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListLast()\n                        ? 0\n                        : this._currentVisibleSlidesIndex + 1;\n                }\n                else {\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListFirst()\n                        ? this._chunkedSlides.length - 1\n                        : this._currentVisibleSlidesIndex - 1;\n                }\n            }\n            this._chunkedSlides[this._currentVisibleSlidesIndex].forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n            this.slideRangeChange.emit(this.getVisibleIndexes());\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getVisibleIndexes() {\n        if (!this.singleSlideOffset) {\n            return this._chunkedSlides[this._currentVisibleSlidesIndex]\n                .map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n        }\n        else {\n            return this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n        }\n    }\n    /**\n     * Sets a slide, which specified through index, as active\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _select(index) {\n        if (isNaN(index)) {\n            this.pause();\n            return;\n        }\n        if (!this.multilist) {\n            /** @type {?} */\n            const currentSlide = this._slides.get(this._currentActiveSlide);\n            if (currentSlide) {\n                currentSlide.active = false;\n            }\n        }\n        /** @type {?} */\n        const nextSlide = this._slides.get(index);\n        if (nextSlide) {\n            this._currentActiveSlide = index;\n            nextSlide.active = true;\n            this.activeSlide = index;\n            this.activeSlideChange.emit(index);\n        }\n    }\n    /**\n     * Starts loop of auto changing of slides\n     * @private\n     * @return {?}\n     */\n    restartTimer() {\n        this.resetTimer();\n        /** @type {?} */\n        const interval = +this.interval;\n        if (!isNaN(interval) && interval > 0) {\n            this.currentInterval = this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return setInterval((/**\n                 * @return {?}\n                 */\n                () => {\n                    /** @type {?} */\n                    const nInterval = +this.interval;\n                    this.ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        if (this.isPlaying &&\n                            !isNaN(this.interval) &&\n                            nInterval > 0 &&\n                            this.slides.length) {\n                            this.nextSlideFromInterval();\n                        }\n                        else {\n                            this.pause();\n                        }\n                    }));\n                }), interval);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get multilist() {\n        return this.itemsPerSlide > 1;\n    }\n    /**\n     * Stops loop of auto changing of slides\n     * @private\n     * @return {?}\n     */\n    resetTimer() {\n        if (this.currentInterval) {\n            clearInterval(this.currentInterval);\n            this.currentInterval = void 0;\n        }\n    }\n}\nCarouselComponent.ɵfac = function CarouselComponent_Factory(t) { return new (t || CarouselComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCarouselComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CarouselComponent, selectors: [[\"carousel\"]], inputs: { indicatorsByChunk: \"indicatorsByChunk\", itemsPerSlide: \"itemsPerSlide\", singleSlideOffset: \"singleSlideOffset\", isAnimated: \"isAnimated\", startFromIndex: \"startFromIndex\", activeSlide: \"activeSlide\", interval: \"interval\", noWrap: \"noWrap\", noPause: \"noPause\", showIndicators: \"showIndicators\", pauseOnFocus: \"pauseOnFocus\" }, outputs: { activeSlideChange: \"activeSlideChange\", slideRangeChange: \"slideRangeChange\" }, ngContentSelectors: _c1, decls: 6, vars: 6, consts: [[\"tabindex\", \"0\", 1, \"carousel\", \"slide\", 3, \"mouseenter\", \"mouseleave\", \"mouseup\", \"keydown\", \"focusin\", \"focusout\"], [\"class\", \"carousel-indicators\", 4, \"ngIf\"], [1, \"carousel-inner\", 3, \"ngStyle\"], [\"class\", \"left carousel-control carousel-control-prev\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"right carousel-control carousel-control-next\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"carousel-indicators\"], [3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"left\", \"carousel-control\", \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-prev\", \"carousel-control-prev-icon\"], [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"right\", \"carousel-control\", \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-next\", \"carousel-control-next-icon\"]], template: function CarouselComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function CarouselComponent_Template_div_mouseenter_0_listener() { return ctx.pause(); })(\"mouseleave\", function CarouselComponent_Template_div_mouseleave_0_listener() { return ctx.onMouseLeave(); })(\"mouseup\", function CarouselComponent_Template_div_mouseup_0_listener() { return ctx.onMouseUp(); })(\"keydown\", function CarouselComponent_Template_div_keydown_0_listener($event) { return ctx.keydownPress($event); })(\"focusin\", function CarouselComponent_Template_div_focusin_0_listener() { return ctx.pauseFocusIn(); })(\"focusout\", function CarouselComponent_Template_div_focusout_0_listener() { return ctx.pauseFocusOut(); });\n        ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_1_Template, 2, 1, \"ol\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, CarouselComponent_a_4_Template, 3, 3, \"a\", 3);\n        ɵngcc0.ɵɵtemplate(5, CarouselComponent_a_5_Template, 4, 2, \"a\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showIndicators && ctx.slides.length > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(4, _c0, ctx.multilist ? \"flex\" : \"block\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf], encapsulation: 2 });\n/** @nocollapse */\nCarouselComponent.ctorParameters = () => [\n    { type: CarouselConfig },\n    { type: NgZone }\n];\nCarouselComponent.propDecorators = {\n    noWrap: [{ type: Input }],\n    noPause: [{ type: Input }],\n    showIndicators: [{ type: Input }],\n    pauseOnFocus: [{ type: Input }],\n    indicatorsByChunk: [{ type: Input }],\n    itemsPerSlide: [{ type: Input }],\n    singleSlideOffset: [{ type: Input }],\n    isAnimated: [{ type: Input }],\n    activeSlideChange: [{ type: Output }],\n    slideRangeChange: [{ type: Output }],\n    activeSlide: [{ type: Input }],\n    startFromIndex: [{ type: Input }],\n    interval: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselComponent, [{\n        type: Component,\n        args: [{\n                selector: 'carousel',\n                template: \"<div (mouseenter)=\\\"pause()\\\"\\n     (mouseleave)=\\\"onMouseLeave()\\\"\\n     (mouseup)=\\\"onMouseUp()\\\"\\n     (keydown)=\\\"keydownPress($event)\\\"\\n     (focusin)=\\\"pauseFocusIn()\\\"\\n     (focusout)=\\\"pauseFocusOut()\\\"\\n     class=\\\"carousel slide\\\" tabindex=\\\"0\\\">\\n  <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showIndicators && slides.length > 1\\\">\\n    <li *ngFor=\\\"let slide of indicatorsSlides(); let i = index;\\\"\\n        [class.active]=\\\"slide.active === true\\\"\\n        (click)=\\\"selectSlide(i)\\\">\\n    </li>\\n  </ol>\\n  <div class=\\\"carousel-inner\\\" [ngStyle]=\\\"{'display': multilist ? 'flex' : 'block'}\\\">\\n    <ng-content></ng-content>\\n  </div>\\n  <a class=\\\"left carousel-control carousel-control-prev\\\"\\n     [class.disabled]=\\\"activeSlide === 0 && noWrap\\\"\\n     (click)=\\\"previousSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n      tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-prev carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span *ngIf=\\\"isBs4\\\" class=\\\"sr-only\\\">Previous</span>\\n  </a>\\n  <a class=\\\"right carousel-control carousel-control-next\\\"\\n     [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\"\\n     (click)=\\\"nextSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n     tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-next carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Next</span>\\n  </a>\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: CarouselConfig }, { type: ɵngcc0.NgZone }]; }, { indicatorsByChunk: [{\n            type: Input\n        }], itemsPerSlide: [{\n            type: Input\n        }], singleSlideOffset: [{\n            type: Input\n        }], isAnimated: [{\n            type: Input\n        }], activeSlideChange: [{\n            type: Output\n        }], slideRangeChange: [{\n            type: Output\n        }], startFromIndex: [{\n            type: Input\n        }], activeSlide: [{\n            type: Input\n        }], interval: [{\n            type: Input\n        }], noWrap: [{\n            type: Input\n        }], noPause: [{\n            type: Input\n        }], showIndicators: [{\n            type: Input\n        }], pauseOnFocus: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CarouselComponent.prototype.noWrap;\n    /** @type {?} */\n    CarouselComponent.prototype.noPause;\n    /** @type {?} */\n    CarouselComponent.prototype.showIndicators;\n    /** @type {?} */\n    CarouselComponent.prototype.pauseOnFocus;\n    /** @type {?} */\n    CarouselComponent.prototype.indicatorsByChunk;\n    /** @type {?} */\n    CarouselComponent.prototype.itemsPerSlide;\n    /** @type {?} */\n    CarouselComponent.prototype.singleSlideOffset;\n    /**\n     * Turn on/off animation. Animation doesn't work for multilist carousel\n     * @type {?}\n     */\n    CarouselComponent.prototype.isAnimated;\n    /**\n     * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n     * @type {?}\n     */\n    CarouselComponent.prototype.activeSlideChange;\n    /**\n     * Will be emitted when active slides has been changed in multilist mode\n     * @type {?}\n     */\n    CarouselComponent.prototype.slideRangeChange;\n    /** @type {?} */\n    CarouselComponent.prototype.startFromIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.currentInterval;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._currentActiveSlide;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._interval;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._slides;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._chunkedSlides;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._slidesWithIndexes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._currentVisibleSlidesIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.isPlaying;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.destroyed;\n    /** @type {?} */\n    CarouselComponent.prototype.getActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    CarouselComponent.prototype.makeSlidesConsistent;\n    /**\n     * @type {?}\n     * @private\n     */\n    CarouselComponent.prototype.ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SlideComponent {\n    /**\n     * @param {?} carousel\n     */\n    constructor(carousel) {\n        this.itemWidth = '100%';\n        this.order = 0;\n        /**\n         * Wraps element by appropriate CSS classes\n         */\n        this.addClass = true;\n        this.carousel = carousel;\n    }\n    /**\n     * Fires changes in container collection after adding a new slide instance\n     * @return {?}\n     */\n    ngOnInit() {\n        this.carousel.addSlide(this);\n        this.itemWidth = `${100 / this.carousel.itemsPerSlide}%`;\n    }\n    /**\n     * Fires changes in container collection after removing of this slide instance\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.carousel.removeSlide(this);\n    }\n}\nSlideComponent.ɵfac = function SlideComponent_Factory(t) { return new (t || SlideComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselComponent)); };\nSlideComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SlideComponent, selectors: [[\"slide\"]], hostVars: 13, hostBindings: function SlideComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-hidden\", !ctx.active);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.itemWidth)(\"order\", ctx.order);\n        ɵngcc0.ɵɵclassProp(\"item\", ctx.addClass)(\"carousel-item\", ctx.addClass)(\"active\", ctx.active)(\"carousel-animation\", ctx.isAnimated);\n    } }, inputs: { active: \"active\" }, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[1, \"item\"]], template: function SlideComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"active\", ctx.active);\n    } }, styles: [\".carousel-animation[_nghost-%COMP%] {\\n       transition: opacity 0.6s ease, visibility 0.6s ease;\\n       float: left;\\n    }\\n    .carousel-animation.active[_nghost-%COMP%] {\\n      opacity: 1;\\n      visibility: visible;\\n    }\\n    .carousel-animation[_nghost-%COMP%]:not(.active) {\\n      display: block;\\n      position: absolute;\\n      opacity: 0;\\n      visibility: hidden;\\n    }\"] });\n/** @nocollapse */\nSlideComponent.ctorParameters = () => [\n    { type: CarouselComponent }\n];\nSlideComponent.propDecorators = {\n    active: [{ type: HostBinding, args: ['class.active',] }, { type: Input }],\n    itemWidth: [{ type: HostBinding, args: ['style.width',] }],\n    order: [{ type: HostBinding, args: ['style.order',] }],\n    isAnimated: [{ type: HostBinding, args: ['class.carousel-animation',] }],\n    addClass: [{ type: HostBinding, args: ['class.item',] }, { type: HostBinding, args: ['class.carousel-item',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SlideComponent, [{\n        type: Component,\n        args: [{\n                selector: 'slide',\n                template: `\n    <div [class.active]=\"active\" class=\"item\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                host: {\n                    '[attr.aria-hidden]': '!active'\n                },\n                styles: [`\n    :host.carousel-animation {\n       transition: opacity 0.6s ease, visibility 0.6s ease;\n       float: left;\n    }\n    :host.carousel-animation.active {\n      opacity: 1;\n      visibility: visible;\n    }\n    :host.carousel-animation:not(.active) {\n      display: block;\n      position: absolute;\n      opacity: 0;\n      visibility: hidden;\n    }\n  `]\n            }]\n    }], function () { return [{ type: CarouselComponent }]; }, { itemWidth: [{\n            type: HostBinding,\n            args: ['style.width']\n        }], order: [{\n            type: HostBinding,\n            args: ['style.order']\n        }], addClass: [{\n            type: HostBinding,\n            args: ['class.item']\n        }, {\n            type: HostBinding,\n            args: ['class.carousel-item']\n        }], active: [{\n            type: HostBinding,\n            args: ['class.active']\n        }, {\n            type: Input\n        }], isAnimated: [{\n            type: HostBinding,\n            args: ['class.carousel-animation']\n        }] }); })();\nif (false) {\n    /**\n     * Is current slide active\n     * @type {?}\n     */\n    SlideComponent.prototype.active;\n    /** @type {?} */\n    SlideComponent.prototype.itemWidth;\n    /** @type {?} */\n    SlideComponent.prototype.order;\n    /** @type {?} */\n    SlideComponent.prototype.isAnimated;\n    /**\n     * Wraps element by appropriate CSS classes\n     * @type {?}\n     */\n    SlideComponent.prototype.addClass;\n    /**\n     * Link to Parent(container-collection) component\n     * @type {?}\n     * @protected\n     */\n    SlideComponent.prototype.carousel;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CarouselModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: CarouselModule, providers: [] };\n    }\n}\nCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CarouselModule });\nCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CarouselModule_Factory(t) { return new (t || CarouselModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CarouselModule, { declarations: function () { return [SlideComponent, CarouselComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SlideComponent, CarouselComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [SlideComponent, CarouselComponent],\n                exports: [SlideComponent, CarouselComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CarouselComponent, CarouselConfig, CarouselModule, SlideComponent };\n\n//# sourceMappingURL=ngx-bootstrap-carousel.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../login/auth.guard';\nimport { ManagerCustomerDetailComponent } from './customerdetail.component';\nimport { ManagerCustomerComponent } from './customers.component';\nimport { EnquiriesComponent } from './enquiries.component';\n\nimport { VerifiedListComponent } from './verified.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    // data: {\n    //   title: 'Theme'\n    // },\n    children: [\n      {\n        path: '',\n        redirectTo: 'manager'\n      },\n      {\n        path: 'verified_list',\n        canActivate: [AuthGuard],\n        component: VerifiedListComponent,\n        data: {\n          roles: 'MANAGER',\n          title: 'Verified List'\n        }\n      },\n      {\n        path: 'customers',\n        canActivate: [AuthGuard],\n        component: ManagerCustomerComponent,\n        data: {\n          roles: 'MANAGER',\n          title: 'Customers'\n        }\n      },\n      {\n        path: 'agents',\n        canActivate: [AuthGuard],\n        component: VerifiedListComponent,\n        data: {\n          roles: 'MANAGER',\n          title: 'Agents List'\n        }\n      },\n      {\n        path: 'enquiries',\n        canActivate: [AuthGuard],\n        component: EnquiriesComponent,\n        data: {\n          roles: 'MANAGER',\n          title: 'Enquiries'\n        }\n      },\n      {\n        path: 'customer_details/:id',\n        canActivate: [AuthGuard],\n        component: ManagerCustomerDetailComponent,\n        data: {\n          roles: 'MANAGER',\n          title: 'Customer Details'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManagerRoutingModule {}\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DataService } from \"../../data.service\";\nimport { AgentsColumn, customersColumn } from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  templateUrl: \"verified.component.html\",\n})\nexport class VerifiedListComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    if (this.route.snapshot.data.title === \"Agents List\") {\n      this.columnDefs = [...AgentsColumn];\n    } else {\n      this.columnDefs = [...customersColumn];\n    }\n    this.rowSelection = \"multiple\";\n  }\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  callerForm = this.fb.group({\n    id: [\"\", Validators.required],\n  });\n  loading = true;\n  label = \"\";\n  btnLoading = false;\n  orders: any = {};\n  columnDefs = [];\n  rowData: any = [];\n  users: any = [];\n  selectedRows: any[];\n  btnDisabled = true;\n  routerData: any = {};\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.getLists();\n    this.routerData = this.route.snapshot.data;\n    console.log(this.route.snapshot.data);\n  }\n  getLists() {\n    this.loading = true;\n    let filter = {\n      is_verified: true,\n      kp_caller_assigned_null: true,\n    };\n    if (this.route.snapshot.data.title === \"Agents List\") {\n      this.dataservice.getAgents().valueChanges.subscribe((result: any) => {\n        console.log(\"getAgents\", result.data.teleCallerContacts);\n        this.rowData = result.data.teleCallerContacts;\n      });\n      this.dataservice\n        .getUsers(\"TELE_CALLER\")\n        .valueChanges.subscribe((result: any) => {\n          console.log(\"getUsers\", result.data.users);\n          this.users = result.data.users;\n          this.label = \"Tele \"\n        });\n    } else {\n      this.dataservice\n        .getCustomersFilter(filter)\n        .valueChanges.subscribe((result: any) => {\n          console.log(\"getCustomersFilter\", result.data.customers);\n          this.rowData = result.data.customers;\n        });\n      this.dataservice\n        .getUsers(\"KP_CALLER\")\n        .valueChanges.subscribe((result: any) => {\n          console.log(\"getUsers\", result.data.users);\n          this.users = result.data.users;\n          this.label = \"KP \"\n        });\n    }\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.btnDisabled = false;\n    } else {\n      this.btnDisabled = true;\n    }\n    console.log(this.selectedRows);\n    // this.router.navigate(\n    //   [\"/kpcaller/kp_customer_details\", selectedRows[0].id],\n    //   {\n    //     state: { data: selectedRows },\n    //   }\n    // );\n  }\n  FormSubmit() {\n    let resp = {};\n    console.log(\n      this.callerForm.value,\n      Array.from(this.selectedRows, (x) => x.id)\n    );\n    if (this.route.snapshot.data.title === \"Agents List\") {\n      this.dataservice\n        .SetTeleCaller(\n          this.callerForm.value.id,\n          Array.from(this.selectedRows, (x) => x.id)\n        )\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateUser) {\n            alert(\"Assigned successfully!\");\n            this.getLists();\n            this.myModal.hide();\n          } else {\n            alert(\"Failed. Please check the fields!\");\n          }\n        });\n    } else {\n      this.dataservice\n        .SetKpCaller(\n          this.callerForm.value.id,\n          Array.from(this.selectedRows, (x) => x.id)\n        )\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateUser) {\n            alert(\"Assigned successfully!\");\n            this.getLists();\n            this.myModal.hide();\n          } else {\n            alert(\"Failed. Please check the fields!\");\n          }\n        });\n    }\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>{{routerData.title}}</h2>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" [disabled]=\\\"btnDisabled\\\"\\n        (click)=\\\"myModal.show()\\\">\\n        Assign to caller\\n      </button>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n          </ag-grid-angular>\\n        </div>\\n      </div>\\n    </div>\\n    <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n      aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Assign to {{label}} Caller</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <form [formGroup]=\\\"callerForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"id\\\">{{label}} Caller</label>\\n                <select class=\\\"form-control\\\" id=\\\"id\\\" required ngModel name=\\\"group\\\" formControlName=\\\"id\\\">\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of users\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.username }}\\n                  </option>\\n                </select>\\n              </div>\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"myModal.hide()\\\">\\n                Close\\n              </button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !callerForm.valid\\\">\\n                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                  aria-hidden=\\\"true\\\"></span>\\n                Save changes\\n              </button>\\n            </form>\\n          </div>\\n        </div>\\n        <!-- /.modal-content -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n        aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-body text-center\\\">\\n                    Do you want to delete this agent?\\n                </div>\\n                <div class=\\\"modal-footer justify-content-around\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\n                        No! Cancel.\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteAgent()\\\">\\n                        Yes! Delete.\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n            <h2>Customer Details</h2>\\n            <span>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\n                    Assign to field agent\\n                </button>\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" (click)=\\\"deleteModal.show()\\\">\\n                Delete\\n            </button> -->\\n            </span>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <div style=\\\"display: flex; justify-content: space-between\\\">\\n                            <h4>Basic details</h4>\\n                        </div>\\n                        <table class=\\\"table table-striped\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <td>ID</td>\\n                                    <td>{{details?.id}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Bride</td>\\n                                    <td>{{details?.NameOfBride}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Father</td>\\n                                    <td>{{details?.NameOfFather}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Name Of Mother</td>\\n                                    <td>{{ details?.NameOfMother }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Marriage Date</td>\\n                                    <td>{{ details?.MarriageDate }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Marriage Month</td>\\n                                    <td>{{ details?.MarriageMonth }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Contact number 1</td>\\n                                    <td>{{ details?.Contact_Number_1 }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Contact number 2</td>\\n                                    <td>{{ details?.Contact_Number_2 }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Agent</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-warning\\\">{{ details.tele_caller_contact?.Name }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>KP Caller</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-primary\\\">{{ details.kp_caller_assigned?.username\\n                                            }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>House Name</td>\\n                                    <td>{{ details.Address?.HouseName }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Landmark</td>\\n                                    <td>{{ details.Address?.Landmark }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Locality</td>\\n                                    <td>{{ details.Address?.locality?.Name }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Latitude</td>\\n                                    <td>{{ details.Address?.GeoLocation.Latitude }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Longitude</td>\\n                                    <td>{{ details.Address?.GeoLocation.Longitude }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Plus code</td>\\n                                    <td>{{ details.Address?.GeoLocation?.GoogleMapPlusCode }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Map URL</td>\\n                                    <td><a href=\\\"https://www.google.com/maps/place/6JXRM9GR%2BMF/@{{\\n                                          details.Address?.GeoLocation?.Latitude\\n                                        }},{{\\n                                          details.Address?.GeoLocation?.Longitude\\n                                        }},17z/data=!3m1!4b1!4m5!3m4!1s0x0:0x0!8m2!3d9.6766875!4d76.3911875\\\"\\n                                            target=\\\"_blank\\\">Click here to view location</a></td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div style=\\\"display: flex; justify-content: space-between\\\">\\n                            <h4>Field Report</h4>\\n                        </div>\\n                        <table *ngIf=\\\"details.FieldReport\\\" class=\\\"table table-striped\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <td>Financial category</td>\\n                                    <td>{{details.FieldReport?.FinancialBackground}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Quantity of intended purchase</td>\\n                                    <td>{{details.FieldReport?.QtyOfGold}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Suitable set</td>\\n                                    <td>{{details.FieldReport?.PreferredWeddingSet}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether planning to exchange after marriage?</td>\\n                                    <td>{{ details.FieldReport?.PlanningForReplacementAfterWedding }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Quantity of old gold for exchange</td>\\n                                    <td>{{ details.FieldReport?.OldGoldExchangeQty }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>No cost emi needed?</td>\\n                                    <td>{{ details.FieldReport?.NoCostEmiRequired }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>EMI tenure</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-warning\\\">{{ details.FieldReport?.EmiTenure }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Number of repayments</td>\\n                                    <td>\\n                                        <span class=\\\"badge badge-primary\\\">{{ details.FieldReport?.EmiIntervals\\n                                            }}</span>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Token advance</td>\\n                                    <td>{{ details.FieldReport?.TokenAdvance }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Rate advance</td>\\n                                    <td>{{ details.FieldReport?.RateAdvance }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether approached by other jewelleries?</td>\\n                                    <td>{{ details.FieldReport?.EnquiriesFromOthers }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Advance paid to other jewellery</td>\\n                                    <td>{{ details.FieldReport?.AdvancePaidToOtherJewellery }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Whether received any fresh leads?</td>\\n                                    <td>{{ details.FieldReport?.NumberOfNewMarriageAddress }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>Captured location</td>\\n                                    <td><a href=\\\"https://www.google.com/maps/place/6JXRM9GR%2BMF/@{{details.FieldReport?.location?.Latitude}},{{details.FieldReport?.location?.Longitude}},17z/data=!3m1!4b1!4m5!3m4!1s0x0:0x0!8m2!3d9.6766875!4d76.3911875\\\"\\n                                            target=\\\"_blank\\\">Click\\n                                            here to view location</a></td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <carousel [interval]=\\\"2000\\\">\\n                            <slide *ngFor=\\\"let item of details.FieldReport?.images\\\">\\n                                <img src=\\\"https://jewel-core.telemarketing.untanglepro.com{{item.url}}\\\"\\n                                    alt=\\\"First slide\\\" style=\\\"display: block; width: 100%;\\\">\\n                                <!-- <div class=\\\"carousel-caption d-none d-md-block\\\">\\n                                <h3>First slide label</h3>\\n                                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\\n                              </div> -->\\n                            </slide>\\n                        </carousel>\\n                    </div>\\n\\n                    <div *ngIf=\\\"!details.FieldReport\\\" class=\\\"card\\\">\\n                        <div class=\\\"card-body text-center\\\">\\n                            No field report found\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div style=\\\"display: flex; justify-content: space-between\\\">\\n                        <h4>Remarks</h4>\\n                    </div>\\n                    <div class=\\\"card\\\" *ngFor=\\\"let item of details.TelecallerRemarks\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\">{{dateConverter(item.CallHistory?.event_date_time)}}</h5>\\n                            <p class=\\\"card-text\\\">{{item.RemarksText}}</p>\\n                            <span\\n                                class=\\\"badge badge-primary\\\">{{item.CallHistory.users_permissions_user?.username}}</span>\\n                        </div>\\n                    </div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"commentModal.show()\\\">\\n                        Add Comment\\n                    </button>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n            aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <h4 class=\\\"modal-title\\\">Assign to field Agent</h4>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"group\\\">Field agent</label>\\n                                <select class=\\\"form-control\\\" id=\\\"agent\\\" required ngModel name=\\\"agent\\\"\\n                                    formControlName=\\\"agent\\\">\\n                                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                                    <option *ngFor=\\\"let item of users\\\" value=\\\"{{ item.id }}\\\">\\n                                        {{ item.username }}\\n                                    </option>\\n                                </select>\\n                            </div>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"myModal.hide()\\\">\\n                                Close\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\"\\n                                [disabled]=\\\"btnLoading || !agentForm.valid\\\">\\n                                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                                    aria-hidden=\\\"true\\\"></span>\\n                                Save changes\\n                            </button>\\n                        </form>\\n                    </div>\\n                </div>\\n                <!-- /.modal-content -->\\n            </div>\\n            <!-- /.modal-dialog -->\\n        </div>\\n        <div bsModal #commentModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n            aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <h4 class=\\\"modal-title\\\">Add Comment</h4>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"commentModal.hide()\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"CommentSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"name\\\">Remarks</label>\\n                                <textarea class=\\\"form-control\\\" maxlength=\\\"250\\\" id=\\\"RemarksText\\\" name=\\\"RemarksText\\\"\\n                                    formControlName=\\\"RemarksText\\\" placeholder=\\\"Enter remarks\\\"></textarea>\\n                            </div>\\n                            <!-- <div class=\\\"form-group\\\">\\n                                <label for=\\\"email\\\">Date</label>\\n                                <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"event_date_time\\\"\\n                                    name=\\\"event_date_time\\\" formControlName=\\\"event_date_time\\\" />\\n                            </div> -->\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"commentModal.hide()\\\">\\n                                Close\\n                            </button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\"\\n                                [disabled]=\\\"btnLoading || !commentForm.valid\\\">\\n                                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                                    aria-hidden=\\\"true\\\"></span>\\n                                Save changes\\n                            </button>\\n                        </form>\\n                    </div>\\n                </div>\\n                <!-- /.modal-content -->\\n            </div>\\n            <!-- /.modal-dialog -->\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>Customers</h2>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\n        New\\n      </button>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n          </ag-grid-angular>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Add New Customer</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Name of Bride</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfBride\\\" name=\\\"NameOfBride\\\" formControlName=\\\"NameOfBride\\\"\\n                placeholder=\\\"Enter bride's name\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Name of Father</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfFather\\\" name=\\\"NameOfFather\\\"\\n                formControlName=\\\"NameOfFather\\\" placeholder=\\\"Enter father's name\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Name of Mother</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfMother\\\" name=\\\"NameOfMother\\\"\\n                formControlName=\\\"NameOfMother\\\" placeholder=\\\"Enter mother's name\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Contact number 1</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Contact_Number_1\\\" name=\\\"Contact_Number_1\\\"\\n                formControlName=\\\"Contact_Number_1\\\" placeholder=\\\"Enter primary contact number\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Contact number 2</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Contact_Number_2\\\" name=\\\"Contact_Number_2\\\"\\n                formControlName=\\\"Contact_Number_2\\\" placeholder=\\\"Enter secondary contact number\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Marriage date</label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"MarriageDate\\\" name=\\\"MarriageDate\\\"\\n                formControlName=\\\"MarriageDate\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"group\\\">Marriage month</label>\\n              <select class=\\\"form-control\\\" id=\\\"MarriageMonth\\\" required ngModel name=\\\"MarriageMonth\\\" formControlName=\\\"MarriageMonth\\\">\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                <option *ngFor=\\\"let item of Months\\\" value=\\\"{{ item.id }}\\\">\\n                  {{ item.Name }}\\n                </option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"group\\\">Agent</label>\\n              <select class=\\\"form-control\\\" id=\\\"tele_caller_contact\\\" required ngModel name=\\\"tele_caller_contact\\\" formControlName=\\\"tele_caller_contact\\\">\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                <option *ngFor=\\\"let item of agents\\\" value=\\\"{{ item.id }}\\\">\\n                  {{ item.Name }}\\n                </option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">House Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"HouseName\\\" name=\\\"HouseName\\\"\\n                formControlName=\\\"HouseName\\\" placeholder=\\\"Enter House Name\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Landmark</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Landmark\\\" name=\\\"Landmark\\\"\\n                formControlName=\\\"Landmark\\\" placeholder=\\\"Enter Landmark\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"locality\\\">Name of locality</label>\\n              <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"locality\\\" name=\\\"locality\\\" formControlName=\\\"locality\\\"\\n                placeholder=\\\"Enter locality\\\" /> -->\\n                <select class=\\\"form-control\\\" id=\\\"locality\\\" required ngModel name=\\\"locality\\\" formControlName=\\\"locality\\\">\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of localities\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.Name }}\\n                  </option>\\n                </select>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"myModal.hide()\\\">\\n              Close\\n            </button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !customerForm.valid\\\">\\n              <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\n              Save changes\\n            </button>\\n          </form>\\n        </div>\\n      </div>\\n      <!-- /.modal-content -->\\n    </div>\\n    <!-- /.modal-dialog -->\\n  </div>\\n  <!-- /.modal -->\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n        <h2>Enquiries</h2>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\r\\n          New\\r\\n        </button> -->\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\r\\n              [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\r\\n              (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\r\\n            </ag-grid-angular>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n      aria-hidden=\\\"true\\\">\\r\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\">Add New Customer</h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <form [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Name of Bride</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfBride\\\" name=\\\"NameOfBride\\\" formControlName=\\\"NameOfBride\\\"\\r\\n                  placeholder=\\\"Enter bride's name\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Name of Father</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfFather\\\" name=\\\"NameOfFather\\\"\\r\\n                  formControlName=\\\"NameOfFather\\\" placeholder=\\\"Enter father's name\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Name of Mother</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NameOfMother\\\" name=\\\"NameOfMother\\\"\\r\\n                  formControlName=\\\"NameOfMother\\\" placeholder=\\\"Enter mother's name\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Contact number 1</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Contact_Number_1\\\" name=\\\"Contact_Number_1\\\"\\r\\n                  formControlName=\\\"Contact_Number_1\\\" placeholder=\\\"Enter primary contact number\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Contact number 2</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Contact_Number_2\\\" name=\\\"Contact_Number_2\\\"\\r\\n                  formControlName=\\\"Contact_Number_2\\\" placeholder=\\\"Enter secondary contact number\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"email\\\">Marriage date</label>\\r\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"MarriageDate\\\" name=\\\"MarriageDate\\\"\\r\\n                  formControlName=\\\"MarriageDate\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"group\\\">Marriage month</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"MarriageMonth\\\" required ngModel name=\\\"MarriageMonth\\\" formControlName=\\\"MarriageMonth\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of Months\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"group\\\">Agent</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"tele_caller_contact\\\" required ngModel name=\\\"tele_caller_contact\\\" formControlName=\\\"tele_caller_contact\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of agents\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">House Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"HouseName\\\" name=\\\"HouseName\\\"\\r\\n                  formControlName=\\\"HouseName\\\" placeholder=\\\"Enter House Name\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">Landmark</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Landmark\\\" name=\\\"Landmark\\\"\\r\\n                  formControlName=\\\"Landmark\\\" placeholder=\\\"Enter Landmark\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"locality\\\">Name of locality</label>\\r\\n                <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"locality\\\" name=\\\"locality\\\" formControlName=\\\"locality\\\"\\r\\n                  placeholder=\\\"Enter locality\\\" /> -->\\r\\n                  <select class=\\\"form-control\\\" id=\\\"locality\\\" required ngModel name=\\\"locality\\\" formControlName=\\\"locality\\\">\\r\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                    <option *ngFor=\\\"let item of localities\\\" value=\\\"{{ item.id }}\\\">\\r\\n                      {{ item.Name }}\\r\\n                    </option>\\r\\n                  </select>\\r\\n              </div>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"myModal.hide()\\\">\\r\\n                Close\\r\\n              </button>\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !customerForm.valid\\\">\\r\\n                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                Save changes\\r\\n              </button>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- /.modal-content -->\\r\\n      </div>\\r\\n      <!-- /.modal-dialog -->\\r\\n    </div>\\r\\n    <!-- /.modal -->\\r\\n  </div>\";"]}