{"version":3,"sources":["./src/app/views/login/authentication.service.ts","./src/app/graphql.module.ts","./src/app/views/error/404.component.ts","./src/environments/environment.ts","./src/app/containers/default-layout/index.ts","./src/app/containers/index.ts","./src/app/views/exposed_form/exposed_form.component.ts","./src/app/containers/default-layout/default-layout.component.ts","./src/app/views/error/500.component.html","./src/app/views/exposed_form/exposed_form.component.html","./src/app/views/login/login.component.ts","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/_nav.ts","./src/app/views/error/500.component.ts","./src/app/containers/default-layout/default-layout.component.html","./src/app/views/error/404.component.html","./src/app/views/login/login.component.html","./src/app/views/login/auth.guard.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { User } from \"../../models/user\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AuthenticationService {\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(\r\n      JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    console.log(\"curentuser\", this.currentUserSubject);\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(data) {\r\n    return this.http.post<any>(`${environment.apiUrl}auth/local/`, data).pipe(\r\n      map((user) => {\r\n        // login successful if there's a jwt token in the response\r\n        console.log(user);\r\n        if (user.jwt) {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem(\"token\", user.jwt);\r\n          localStorage.setItem(\"username\", user.user.username);\r\n          localStorage.setItem(\"uid\", user.user.id);\r\n          localStorage.setItem(\"user_type\", user.user.UserType);\r\n          localStorage.setItem(\"email\", user.user.email);\r\n          // localStorage.setItem('name', user.data.user_data.name);\r\n          // localStorage.setItem('phone_number', user.data.user_data.phone_number);\r\n          // localStorage.setItem('shop_name', user.data.shops_details[0]?.shop_name);\r\n          // localStorage.setItem('shop_id', user.data.shops_details[0]?.shop);\r\n\r\n          localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n          this.currentUserSubject.next(user);\r\n        }\r\n\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem(\"currentUser\");\r\n    localStorage.removeItem(\"token\");\r\n    this.currentUserSubject.next(null);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { APOLLO_OPTIONS, APOLLO_NAMED_OPTIONS } from \"apollo-angular\";\r\nimport {\r\n  ApolloClientOptions,\r\n  ApolloLink,\r\n  InMemoryCache,\r\n} from \"@apollo/client/core\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { HttpLink } from \"apollo-angular/http\";\r\n\r\nconst uri = \"https://jewel-core.telemarketing.untanglepro.com/graphql\"; // <-- add the URL of the GraphQL server here\r\n\r\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\r\n  const basic = setContext((operation, context) => ({\r\n    headers: {\r\n      Accept: \"charset=utf-8\",\r\n    },\r\n  }));\r\n  // Get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem(\"token\");\r\n  const auth = setContext((operation, context) => ({\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }));\r\n\r\n  return {\r\n    link: ApolloLink.from([basic, auth, httpLink.create({ uri })]),\r\n    cache: new InMemoryCache(),\r\n  };\r\n}\r\n\r\nexport function createNamedApollo(\r\n  httpLink: HttpLink\r\n): Record<string, ApolloClientOptions<any>> {\r\n  const basic = setContext((operation, context) => ({\r\n    headers: {\r\n      Accept: \"charset=utf-8\",\r\n    },\r\n  }));\r\n  return {\r\n    second: {\r\n      name: \"second\",\r\n      link: ApolloLink.from([ basic, httpLink.create({ uri }) ]),\r\n      cache: new InMemoryCache(),\r\n    },\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: APOLLO_OPTIONS,\r\n      useFactory: createApollo,\r\n      deps: [HttpLink],\r\n    },\r\n    {\r\n      provide: APOLLO_NAMED_OPTIONS,\r\n      deps: [HttpLink],\r\n      useFactory: createNamedApollo,\r\n    },\r\n  ],\r\n})\r\nexport class GraphQLModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: '404.component.html'\r\n})\r\nexport class P404Component {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"https://jewel-core.telemarketing.untanglepro.com/\"\r\n};\r\n","export * from './default-layout.component';\r\n","export * from './default-layout';\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DataService } from \"../../data.service\";\r\nimport { first } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"exposed_form.component.html\",\r\n})\r\nexport class ExposedFormComponent {\r\n  @ViewChild(\"usForm\") usForm: NgForm;\r\n\r\n  loginForm: any = {};\r\n  result: any = {};\r\n  returnUrl: string;\r\n  error = \"\";\r\n  loading = false;\r\n\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n  onSubmit() {\r\n    this.loginForm = this.usForm.value;\r\n    console.log(this.loginForm);\r\n    this.loading = true;\r\n    this.dataservice\r\n      .AddEnquiry(this.loginForm)\r\n      .pipe(first())\r\n      .subscribe(\r\n        (data:any) => {\r\n          this.loading = false;\r\n          this.toastr.success(data.message);\r\n        },\r\n        (error) => {\r\n          this.error = error;\r\n          this.loading = false;\r\n          console.log(error);\r\n          this.toastr.error(error.error.message);\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"../../models/user\";\r\nimport { AuthenticationService } from \"../../views/login/authentication.service\";\r\nimport { navItems } from \"../../_nav\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./default-layout.component.html\",\r\n})\r\nexport class DefaultLayoutComponent {\r\n  currentUser: User;\r\n  public sidebarMinimized = false;\r\n  userName = localStorage.getItem(\"username\");\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n    this.authenticationService.currentUser.subscribe(\r\n      (x) => (this.currentUser = x)\r\n    );\r\n    console.log(\"constructor\",this.currentUser.user.UserType)\r\n  }\r\n  public navItems = navItems.filter((item) => item.role == localStorage.getItem(\"user_type\") || item.role == \"\");;\r\n\r\n  toggleMinimize(e) {\r\n    this.sidebarMinimized = e;\r\n    console.log(this.currentUser.user?.UserType);\r\n  }\r\n  logout() {\r\n    this.authenticationService.logout();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n}\r\n","export default \"<div class=\\\"app flex-row align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <h1 class=\\\"float-left display-3 mr-4\\\">500</h1>\\r\\n          <h4 class=\\\"pt-3\\\">Houston, we have a problem!</h4>\\r\\n          <p class=\\\"text-muted\\\">The page you are looking for is temporarily unavailable.</p>\\r\\n        </div>\\r\\n        <div class=\\\"input-prepend input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\r\\n          <span class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <h2>WEDDING GOLD PURCHASE SCHEME</h2>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form #usForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"shopName\\\"><strong>Name / പേര്</strong></label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" required ngModel placeholder=\\\"Enter your name here\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"phone\\\"><strong>Customer contact number / ഫോൺ നമ്പർ</strong></label>\\r\\n              <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"phone\\\" name=\\\"phone\\\" ngModel required placeholder=\\\"Enter your phone number here\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"HouseName\\\"><strong>House Name / വീട്ടുപേര് </strong></label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"HouseName\\\" name=\\\"HouseName\\\" required ngModel placeholder=\\\"Enter your house Name here\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"PostOfficeNumber\\\"><strong>Post Office number / പോസ്റ്റ് ഓഫീസ് നമ്പർ</strong></label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"PostOfficeNumber\\\" name=\\\"PostOfficeNumber\\\" ngModel required placeholder=\\\"Enter your Post Office Number here\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Landmark\\\"><strong>Landmark </strong></label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Landmark\\\" name=\\\"Landmark\\\" required ngModel placeholder=\\\"Enter your nearest landmark here\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <label for=\\\"marriage_purchase\\\"><strong>വിവാഹ പർച്ചേസ് ?</strong></label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"marriage_purchase\\\" name=\\\"marriage_purchase\\\" required ngModel aria-label=\\\"Default select example\\\">\\r\\n                <option selected value=\\\"true\\\">Yes</option>\\r\\n                <option value=\\\"false\\\">No</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <label for=\\\"pincode\\\"><strong>വിവാഹ തീയതി</strong></label>\\r\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" ngModel id=\\\"date\\\" name=\\\"date\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4\\\">\\r\\n              <label for=\\\"pawan\\\"><strong>ആവിശ്യം ഉള്ള പവൻ</strong></label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"pawan\\\" name=\\\"pawan\\\" required ngModel aria-label=\\\"Default select example\\\">\\r\\n                <option value=\\\"5\\\">5 പവൻ</option>\\r\\n                <option value=\\\"10\\\">10 പവൻ</option>\\r\\n                <option value=\\\"15\\\">15 പവൻ</option>\\r\\n                <option value=\\\"20\\\">20 പവൻ</option>\\r\\n                <option value=\\\"25\\\">25 പവൻ</option>\\r\\n                <option value=\\\"30\\\">30 പവൻ</option>\\r\\n                <option value=\\\">30\\\">30 പവനിൽ കൂടുതൽ </option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"pincode\\\"><strong>വിവാഹ ആവശ്യത്തിനുള്ള പലിശ രഹിത വായ്‌പ പദ്ധതിയിൽ അംഗം ആകാൻ താല്പര്യം?</strong></label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"emi\\\" name=\\\"emi\\\" required ngModel aria-label=\\\"Default select example\\\">\\r\\n              <option selected value=\\\"true\\\">Yes</option>\\r\\n              <option value=\\\"false\\\">No</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { Component, ViewChild } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { first } from \"rxjs/operators\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"login.component.html\",\r\n})\r\nexport class LoginComponent {\r\n  @ViewChild(\"usForm\") usForm: NgForm;\r\n\r\n  loginForm: any = {};\r\n  result: any = {};\r\n  returnUrl: string;\r\n  error = \"\";\r\n  loading = false;\r\n\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    if (this.authenticationService.currentUserValue) {\r\n      this.router.navigate([\"/\"]);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n  onSubmit() {\r\n    this.loginForm = this.usForm.value;\r\n    console.log(this.loginForm);\r\n    this.loading = true;\r\n    this.authenticationService\r\n      .login(this.loginForm)\r\n      .pipe(first())\r\n      .subscribe(\r\n        (data) => {\r\n          this.loading = false;\r\n          this.router.navigate([this.returnUrl]);\r\n          this.toastr.success(\"Login successful\");\r\n        },\r\n        (error) => {\r\n          this.error = error;\r\n          this.loading = false;\r\n          console.log(error.error.message[0].messages[0].message);\r\n          this.toastr.error(\"Error\",error.error.message[0].messages[0].message);\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"../environments/environment\";\r\nimport { Apollo, gql } from \"apollo-angular\";\r\n\r\nconst AgentsQuery = gql`\r\n  query ($tele_caller_id: String) {\r\n    teleCallerContacts(where: { assigned_telecaller: $tele_caller_id }) {\r\n      id\r\n      Name\r\n      Contact_Number_1\r\n      Contact_Number_2\r\n      Contact_Number_3\r\n      group {\r\n        Name\r\n        Description\r\n      }\r\n      Email\r\n    }\r\n  }\r\n`;\r\nconst AgentsSingleQuery = gql`\r\n  query ($id: ID!) {\r\n    teleCallerContact(id: $id) {\r\n      id\r\n      Name\r\n      Email\r\n      group {\r\n        Name\r\n        Description\r\n      }\r\n      Contact_Number_1\r\n      Contact_Number_2\r\n      Contact_Number_3\r\n      telecaller_remarks {\r\n        RemarksText\r\n        CallHistory {\r\n          event_date_time\r\n          users_permissions_user {\r\n            username\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddAgentMutation = gql`\r\n  mutation (\r\n    $name: String!\r\n    $group: ID!\r\n    $email: String!\r\n    $phone1: Long!\r\n    $phone2: Long!\r\n    $phone3: Long!\r\n  ) {\r\n    createTeleCallerContact(\r\n      input: {\r\n        data: {\r\n          Name: $name\r\n          Email: $email\r\n          Contact_Number_1: $phone1\r\n          Contact_Number_2: $phone2\r\n          Contact_Number_3: $phone3\r\n          group: $group\r\n        }\r\n      }\r\n    ) {\r\n      teleCallerContact {\r\n        id\r\n        Name\r\n        Contact_Number_1\r\n        Contact_Number_2\r\n        Contact_Number_3\r\n        group {\r\n          Name\r\n          Description\r\n        }\r\n        Email\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst GroupsQuery = gql`\r\n  query GroupsQuery {\r\n    groups {\r\n      id\r\n      Name\r\n      Description\r\n    }\r\n  }\r\n`;\r\nconst localitiesQuery = gql`\r\n  query {\r\n    localities {\r\n      id\r\n      Name\r\n      post_office {\r\n        Name\r\n        id\r\n        Pincode\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst postOfficesQuery = gql`\r\n  query {\r\n    postOffices {\r\n      id\r\n      Name\r\n      Pincode\r\n      district {\r\n        Name\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst UpdateAgentMutation = gql`\r\n  mutation (\r\n    $id: ID!\r\n    $name: String!\r\n    $group: ID!\r\n    $email: String!\r\n    $phone1: Long!\r\n    $phone2: Long!\r\n    $phone3: Long!\r\n  ) {\r\n    updateTeleCallerContact(\r\n      input: {\r\n        where: { id: $id }\r\n        data: {\r\n          Name: $name\r\n          Email: $email\r\n          Contact_Number_1: $phone1\r\n          Contact_Number_2: $phone2\r\n          Contact_Number_3: $phone3\r\n          group: $group\r\n        }\r\n      }\r\n    ) {\r\n      teleCallerContact {\r\n        id\r\n        Name\r\n        Contact_Number_1\r\n        Contact_Number_2\r\n        Contact_Number_3\r\n        group {\r\n          Name\r\n          Description\r\n        }\r\n        Email\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst DeleteAgentMutation = gql`\r\n  mutation ($id: ID!) {\r\n    deleteTeleCallerContact(input: { where: { id: $id } }) {\r\n      teleCallerContact {\r\n        id\r\n        Name\r\n        Contact_Number_1\r\n        Contact_Number_2\r\n        Contact_Number_3\r\n        group {\r\n          Name\r\n          Description\r\n        }\r\n        Email\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddCommentMutation = gql`\r\n  mutation ($id: ID!, $remarks: String!, $date: DateTime!) {\r\n    updateTeleCallerContact(\r\n      input: {\r\n        where: { id: $id }\r\n        data: {\r\n          telecaller_remarks: {\r\n            RemarksText: $remarks\r\n            CallHistory: { event_date_time: $date }\r\n          }\r\n        }\r\n      }\r\n    ) {\r\n      teleCallerContact {\r\n        id\r\n        Name\r\n        Email\r\n        group {\r\n          Name\r\n          Description\r\n        }\r\n        Contact_Number_1\r\n        Contact_Number_2\r\n        Contact_Number_3\r\n        telecaller_remarks {\r\n          RemarksText\r\n          CallHistory {\r\n            event_date_time\r\n            users_permissions_user {\r\n              username\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CustomersQuery = gql`\r\n  query {\r\n    customers {\r\n      id\r\n      is_verified\r\n      NameOfBride\r\n      NameOfFather\r\n      NameOfMother\r\n      MarriageDate\r\n      Contact_Number_1\r\n      Contact_Number_2\r\n      MarriageMonth\r\n      kp_caller_assigned {\r\n        email\r\n        username\r\n      }\r\n      tele_caller_contact {\r\n        Name\r\n        id\r\n      }\r\n      created_at\r\n      FieldReport {\r\n        id\r\n        FinancialBackground\r\n        QtyOfGold\r\n        PreferredWeddingSet\r\n        PlanningForReplacementAfterWedding\r\n        OldGoldExchangeQty\r\n        NoCostEmiRequired\r\n        EmiTenure\r\n        EmiIntervals\r\n        TokenAdvance\r\n        RateAdvance\r\n        EnquiriesFromOthers\r\n        AdvancePaidToOtherJewellery\r\n        NumberOfNewMarriageAddress\r\n      }\r\n      Address {\r\n        id\r\n        HouseName\r\n        Landmark\r\n        locality {\r\n          Name\r\n        }\r\n        post_office {\r\n          Name\r\n          Pincode\r\n          district {\r\n            Name\r\n          }\r\n        }\r\n        GeoLocation {\r\n          Latitude\r\n          Longitude\r\n          GoogleMapURL\r\n          GoogleMapPlusCode\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CustomersFilterQuery = gql`\r\n  query (\r\n    $is_verified: Boolean\r\n    $kp_caller_assigned_null: Boolean\r\n    $kp_id: ID\r\n    $added_by_user: ID\r\n    $MarriageMonth_null: Boolean\r\n    $MarriageDate_null: Boolean\r\n    $MarriageMonthOR_null: Boolean\r\n    $MarriageDateOR_null: Boolean\r\n    $MarriageDate_gte: String\r\n    $MarriageDate_lte: String\r\n  ) {\r\n    customers(\r\n      where: {\r\n        is_verified: $is_verified\r\n        kp_caller_assigned_null: $kp_caller_assigned_null\r\n        kp_caller_assigned: $kp_id\r\n        MarriageDate_null: $MarriageDate_null\r\n        MarriageMonth_null: $MarriageMonth_null\r\n        added_by_user: $added_by_user\r\n        MarriageDate_gte: $MarriageDate_gte\r\n        MarriageDate_lte: $MarriageDate_lte\r\n        _or: [{ MarriageDate_null: $MarriageDateOR_null }, { MarriageMonth_null: $MarriageMonthOR_null }]\r\n      }\r\n    ) {\r\n      id\r\n      is_verified\r\n      NameOfBride\r\n      NameOfFather\r\n      NameOfMother\r\n      MarriageDate\r\n      Contact_Number_1\r\n      Contact_Number_2\r\n      MarriageMonth\r\n      kp_caller_assigned {\r\n        email\r\n        username\r\n      }\r\n      added_by_user {\r\n        id\r\n        username\r\n      }\r\n      tele_caller_contact {\r\n        Name\r\n        id\r\n      }\r\n      created_at\r\n      FieldReport {\r\n        id\r\n        FinancialBackground\r\n        QtyOfGold\r\n        PreferredWeddingSet\r\n        PlanningForReplacementAfterWedding\r\n        OldGoldExchangeQty\r\n        NoCostEmiRequired\r\n        EmiTenure\r\n        EmiIntervals\r\n        TokenAdvance\r\n        RateAdvance\r\n        EnquiriesFromOthers\r\n        AdvancePaidToOtherJewellery\r\n        NumberOfNewMarriageAddress\r\n      }\r\n      Address {\r\n        id\r\n        HouseName\r\n        Landmark\r\n        locality {\r\n          Name\r\n        }\r\n        post_office {\r\n          Name\r\n          Pincode\r\n          district {\r\n            Name\r\n          }\r\n        }\r\n        GeoLocation {\r\n          Latitude\r\n          Longitude\r\n          GoogleMapURL\r\n          GoogleMapPlusCode\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CustomerSingleQuery = gql`\r\n  query ($id: ID!) {\r\n    customer(id: $id) {\r\n      id\r\n      is_verified\r\n      NameOfBride\r\n      NameOfFather\r\n      NameOfMother\r\n      Contact_Number_1\r\n      Contact_Number_2\r\n      MarriageDate\r\n      MarriageMonth\r\n      tele_caller_contact {\r\n        Name\r\n        id\r\n      }\r\n      kp_caller_assigned {\r\n        email\r\n        username\r\n      }\r\n      created_at\r\n      FieldReport {\r\n        id\r\n        FinancialBackground\r\n        QtyOfGold\r\n        PreferredWeddingSet\r\n        PlanningForReplacementAfterWedding\r\n        OldGoldExchangeQty\r\n        NoCostEmiRequired\r\n        EmiTenure\r\n        EmiIntervals\r\n        TokenAdvance\r\n        RateAdvance\r\n        EnquiriesFromOthers\r\n        AdvancePaidToOtherJewellery\r\n        NumberOfNewMarriageAddress\r\n        images {\r\n          name\r\n          url\r\n          previewUrl\r\n        }\r\n        location {\r\n          Latitude\r\n          Longitude\r\n          GoogleMapURL\r\n          GoogleMapPlusCode\r\n        }\r\n      }\r\n      Address {\r\n        id\r\n        HouseName\r\n        Landmark\r\n        locality {\r\n          Name\r\n        }\r\n        post_office {\r\n          Name\r\n          Pincode\r\n          district {\r\n            Name\r\n          }\r\n        }\r\n        GeoLocation {\r\n          Latitude\r\n          Longitude\r\n          GoogleMapURL\r\n          GoogleMapPlusCode\r\n        }\r\n      }\r\n      TelecallerRemarks {\r\n        RemarksText\r\n        CallHistory {\r\n          event_date_time\r\n          users_permissions_user {\r\n            username\r\n            email\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddCustomerMutation = gql`\r\n  mutation (\r\n    $NameOfBride: String!\r\n    $NameOfFather: String!\r\n    $NameOfMother: String!\r\n    $Contact_Number_1: String!\r\n    $Contact_Number_2: String!\r\n    $MarriageDate: Date!\r\n    $MarriageMonth: Int!\r\n    $tele_caller_contact: ID!\r\n    $HouseName: String!\r\n    $Landmark: String!\r\n    $locality: ID!\r\n    $added_by_user: ID!\r\n    $post_office: ID\r\n    $Latitude: Float\r\n    $Longitude: Float\r\n    $GoogleMapURL: String\r\n    $GoogleMapPlusCode: String\r\n  ) {\r\n    createCustomer(\r\n      input: {\r\n        data: {\r\n          NameOfBride: $NameOfBride\r\n          NameOfFather: $NameOfFather\r\n          NameOfMother: $NameOfMother\r\n          MarriageDate: $MarriageDate\r\n          MarriageMonth: $MarriageMonth\r\n          Contact_Number_1: $Contact_Number_1\r\n          Contact_Number_2: $Contact_Number_2\r\n          tele_caller_contact: $tele_caller_contact\r\n          added_by_user: $added_by_user\r\n          Address: {\r\n            HouseName: $HouseName\r\n            Landmark: $Landmark\r\n            locality: $locality\r\n            post_office: $post_office\r\n            GeoLocation: {\r\n              Latitude: $Latitude\r\n              Longitude: $Longitude\r\n              GoogleMapURL: $GoogleMapURL\r\n              GoogleMapPlusCode: $GoogleMapPlusCode\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ) {\r\n      customer {\r\n        id\r\n        NameOfBride\r\n        NameOfFather\r\n        NameOfMother\r\n        MarriageDate\r\n        MarriageMonth\r\n        Contact_Number_1\r\n        Contact_Number_2\r\n        tele_caller_contact {\r\n          Name\r\n          id\r\n        }\r\n        created_at\r\n        Address {\r\n          id\r\n          HouseName\r\n          Landmark\r\n          locality {\r\n            Name\r\n          }\r\n          post_office {\r\n            Name\r\n            Pincode\r\n            district {\r\n              Name\r\n            }\r\n          }\r\n          GeoLocation {\r\n            Latitude\r\n            Longitude\r\n            GoogleMapURL\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst AddCustomerCommentMutation = gql`\r\n  mutation (\r\n    $id: ID!\r\n    $remarks: String!\r\n    $date: DateTime!\r\n    $is_verified: Boolean\r\n  ) {\r\n    updateCustomer(\r\n      input: {\r\n        where: { id: $id }\r\n        data: {\r\n          TelecallerRemarks: {\r\n            RemarksText: $remarks\r\n            CallHistory: { event_date_time: $date }\r\n          }\r\n          is_verified: $is_verified\r\n        }\r\n      }\r\n    ) {\r\n      customer {\r\n        id\r\n        is_verified\r\n        NameOfBride\r\n        NameOfFather\r\n        NameOfMother\r\n        MarriageDate\r\n        MarriageMonth\r\n        tele_caller_contact {\r\n          Name\r\n          id\r\n        }\r\n        created_at\r\n        Address {\r\n          id\r\n          HouseName\r\n          Landmark\r\n          locality {\r\n            Name\r\n          }\r\n          post_office {\r\n            Name\r\n            Pincode\r\n            district {\r\n              Name\r\n            }\r\n          }\r\n          GeoLocation {\r\n            Latitude\r\n            Longitude\r\n            GoogleMapURL\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SetKpCallerMutation = gql`\r\n  mutation ($id: ID!, $cust_id: [ID!]!) {\r\n    updateUser(input: { where: { id: $id }, data: { kp_customer: $cust_id } }) {\r\n      user {\r\n        id\r\n        kp_customer {\r\n          id\r\n          NameOfBride\r\n          NameOfFather\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SetTeleCallerMutation = gql`\r\n  mutation ($id: ID!, $cust_id: [ID!]!) {\r\n    updateUser(\r\n      input: { where: { id: $id }, data: { tele_caller_contacts: $cust_id } }\r\n    ) {\r\n      user {\r\n        id\r\n        tele_caller_contacts {\r\n          id\r\n          Name\r\n          Contact_Number_1\r\n          Email\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SetFieldAgentMutation = gql`\r\n  mutation ($id: ID!, $cust_id: [ID!]!) {\r\n    updateUser(input: { where: { id: $id }, data: { customers: $cust_id } }) {\r\n      user {\r\n        id\r\n        customers {\r\n          NameOfBride\r\n          id\r\n          NameOfFather\r\n          MarriageDate\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst UsersQuery = gql`\r\n  query ($type: String!) {\r\n    users(where: { UserType: $type }) {\r\n      id\r\n      username\r\n      email\r\n      role {\r\n        id\r\n        name\r\n        type\r\n      }\r\n      UserType\r\n    }\r\n  }\r\n`;\r\nconst AddCustomerEnquiry = gql`\r\n  mutation (\r\n    $Name: String!\r\n    $PhoneNumber: String!\r\n    $isWeddingPurchase: Boolean!\r\n    $MarriageDate: Date!\r\n    $QtyOfGold: Int!\r\n    $OptNoCostEMI: Boolean!\r\n    $HouseName: String!\r\n    $Landmark: String!\r\n    $PostOfficeNumber: Long!\r\n  ) {\r\n    createCustomerEnquiry(\r\n      input: {\r\n        data: {\r\n          Name: $Name\r\n          PhoneNumber: $PhoneNumber\r\n          isWeddingPurchase: $isWeddingPurchase\r\n          MarriageDate: $MarriageDate\r\n          QtyOfGold: $QtyOfGold\r\n          OptNoCostEMI: $OptNoCostEMI\r\n          HouseName: $HouseName\r\n          Landmark: $Landmark\r\n          PostOfficeNumber: $PostOfficeNumber\r\n        }\r\n      }\r\n    ) {\r\n      customerEnquiry {\r\n        id\r\n        Name\r\n        PhoneNumber\r\n        isWeddingPurchase\r\n        MarriageDate\r\n        QtyOfGold\r\n        OptNoCostEMI\r\n        HouseName\r\n        Landmark\r\n        PostOfficeNumber\r\n      }\r\n    }\r\n  }\r\n`;\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class DataService {\r\n  baseURL = environment.apiUrl;\r\n  params: URLSearchParams = new URLSearchParams();\r\n\r\n  constructor(private http: HttpClient, private apollo: Apollo) {}\r\n\r\n  Login(data): Observable<any> {\r\n    const httpOptions1: Object = {\r\n      observe: \"response\",\r\n    };\r\n    return this.http.post(this.baseURL + `auth/login/`, data, httpOptions1);\r\n  }\r\n  getOrders() {\r\n    const httpOptions: Object = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n      }),\r\n      observe: \"response\",\r\n    };\r\n    return this.http.get(this.baseURL + \"order/1/shop/\", httpOptions);\r\n  }\r\n\r\n  getAgents() {\r\n    return this.apollo.watchQuery({\r\n      query: AgentsQuery,\r\n    });\r\n  }\r\n  getfilteredAgents(id) {\r\n    return this.apollo.watchQuery({\r\n      query: AgentsQuery,\r\n      variables: {\r\n        tele_caller_id: id,\r\n      },\r\n    });\r\n  }\r\n  getSingleAgent(id) {\r\n    return this.apollo.watchQuery({\r\n      query: AgentsSingleQuery,\r\n      variables: {\r\n        id: id,\r\n      },\r\n    });\r\n  }\r\n  AddAgent(agent) {\r\n    return this.apollo.mutate({\r\n      mutation: AddAgentMutation,\r\n      variables: {\r\n        name: agent.name,\r\n        email: agent.email,\r\n        group: agent.group,\r\n        phone1: agent.phone1,\r\n        phone2: agent.phone2,\r\n        phone3: agent.phone3,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  EditAgent(id, agent) {\r\n    return this.apollo.mutate({\r\n      mutation: UpdateAgentMutation,\r\n      variables: {\r\n        id: id,\r\n        name: agent.name,\r\n        email: agent.email,\r\n        group: agent.group,\r\n        phone1: agent.phone1,\r\n        phone2: agent.phone2,\r\n        phone3: agent.phone3,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  AddComment(id, agent) {\r\n    let date = new Date();\r\n    console.log(date.toISOString());\r\n    return this.apollo.mutate({\r\n      mutation: AddCommentMutation,\r\n      variables: {\r\n        id: id,\r\n        remarks: localStorage.getItem(\"username\") + \": \" + agent.RemarksText,\r\n        date: new Date().toISOString(),\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  DeleteAgent(id) {\r\n    return this.apollo.mutate({\r\n      mutation: DeleteAgentMutation,\r\n      variables: {\r\n        id: id,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  getGroups() {\r\n    return this.apollo.watchQuery({\r\n      query: GroupsQuery,\r\n    });\r\n  }\r\n  getLocalities() {\r\n    return this.apollo.watchQuery({\r\n      query: localitiesQuery,\r\n    });\r\n  }\r\n  getPostOffices() {\r\n    return this.apollo.watchQuery({\r\n      query: postOfficesQuery,\r\n    });\r\n  }\r\n  getCustomers() {\r\n    return this.apollo.watchQuery({\r\n      query: CustomersQuery,\r\n    });\r\n  }\r\n  getUsers(type) {\r\n    return this.apollo.watchQuery({\r\n      query: UsersQuery,\r\n      variables: { type: type },\r\n    });\r\n  }\r\n  getCustomersFilter(verified) {\r\n    return this.apollo.watchQuery({\r\n      query: CustomersFilterQuery,\r\n      variables: verified,\r\n    });\r\n  }\r\n  getSingleCustomer(id) {\r\n    return this.apollo.watchQuery({\r\n      query: CustomerSingleQuery,\r\n      variables: {\r\n        id: id,\r\n      },\r\n    });\r\n  }\r\n  Addcustomer(Customer) {\r\n    return this.apollo.mutate({\r\n      mutation: AddCustomerMutation,\r\n      variables: {\r\n        NameOfBride: Customer.NameOfBride,\r\n        NameOfFather: Customer.NameOfFather,\r\n        NameOfMother: Customer.NameOfMother,\r\n        MarriageDate: Customer.MarriageDate,\r\n        MarriageMonth: parseInt(Customer.MarriageMonth),\r\n        tele_caller_contact: Customer.tele_caller_contact,\r\n        HouseName: Customer.HouseName,\r\n        Contact_Number_1: Customer.Contact_Number_1,\r\n        Contact_Number_2: Customer.Contact_Number_2,\r\n        Landmark: Customer.Landmark,\r\n        locality: Customer.locality,\r\n        post_office: Customer.Post_office,\r\n        added_by_user: localStorage.getItem(\"uid\"),\r\n        Latitude: parseFloat(Customer.Latitude),\r\n        Longitude: parseFloat(Customer.Longitude),\r\n        GoogleMapURL: Customer.GoogleMapURL,\r\n        GoogleMapPlusCode: Customer.GoogleMapPlusCode,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  AddCustomerComment(id, agent) {\r\n    return this.apollo.mutate({\r\n      mutation: AddCustomerCommentMutation,\r\n      variables: {\r\n        id: id,\r\n        remarks: localStorage.getItem(\"username\") + \": \" + agent.RemarksText,\r\n        date: new Date().toISOString(),\r\n        is_verified: agent.is_verified,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  SetKpCaller(id, cust_id) {\r\n    return this.apollo.mutate({\r\n      mutation: SetKpCallerMutation,\r\n      variables: {\r\n        id: id,\r\n        cust_id: cust_id,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  SetFieldAgent(id, cust_id) {\r\n    return this.apollo.mutate({\r\n      mutation: SetFieldAgentMutation,\r\n      variables: {\r\n        id: id,\r\n        cust_id: cust_id,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  SetTeleCaller(id, cust_id) {\r\n    return this.apollo.mutate({\r\n      mutation: SetTeleCallerMutation,\r\n      variables: {\r\n        id: id,\r\n        cust_id: cust_id,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n  AddEnquiry(enquiry) {\r\n    let date = new Date();\r\n    console.log(date.toISOString());\r\n    return this.apollo.use(\"second\").mutate({\r\n      mutation: AddCustomerEnquiry,\r\n      variables: {\r\n        Name: enquiry.name,\r\n        PhoneNumber: enquiry.phone,\r\n        isWeddingPurchase: enquiry.marriage_purchase == \"true\" ? true : false,\r\n        MarriageDate: enquiry.date,\r\n        QtyOfGold: parseInt(enquiry.pawan),\r\n        OptNoCostEMI: enquiry.emi == \"true\" ? true : false,\r\n        HouseName: enquiry.HouseName,\r\n        Landmark: enquiry.Landmark,\r\n        PostOfficeNumber: enquiry.PostOfficeNumber,\r\n      },\r\n      errorPolicy: \"all\",\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { IconSetService } from '@coreui/icons-angular';\r\nimport { freeSet } from '@coreui/icons';\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'body',\r\n  template: '<router-outlet></router-outlet>',\r\n  providers: [IconSetService],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    public iconSet: IconSetService\r\n  ) {\r\n    // iconSet singleton\r\n    iconSet.icons = { ...freeSet };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((evt) => {\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppComponent } from './app.component';\r\n// Import containers\r\nimport { DefaultLayoutComponent } from './containers';\r\nimport { P404Component } from './views/error/404.component';\r\nimport { P500Component } from './views/error/500.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\n\r\n// const APP_CONTAINERS = [\r\n//   DefaultLayoutComponent\r\n// ];\r\n\r\nimport {\r\n  AppAsideModule,\r\n  AppBreadcrumbModule,\r\n  AppHeaderModule,\r\n  AppFooterModule,\r\n  AppSidebarModule,\r\n} from '@coreui/angular';\r\n\r\n// Import routing module\r\nimport { AppRoutingModule } from './app.routing';\r\n// Import 3rd party components\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\n// import { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { GraphQLModule } from './graphql.module';\r\nimport { ExposedFormComponent } from './views/exposed_form/exposed_form.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AgGridModule.withComponents([]),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    AppAsideModule,\r\n    AppBreadcrumbModule.forRoot(),\r\n    ToastrModule.forRoot(),\r\n    AppFooterModule,\r\n    AppHeaderModule,\r\n    AppSidebarModule,\r\n    BsDropdownModule.forRoot(),\r\n    GraphQLModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    P404Component,\r\n    P500Component,\r\n    LoginComponent,\r\n    ExposedFormComponent,\r\n    DefaultLayoutComponent,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: HashLocationStrategy\r\n    },\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n// Import Containers\r\nimport { DefaultLayoutComponent } from './containers';\r\nimport { P404Component } from './views/error/404.component';\r\nimport { P500Component } from './views/error/500.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { AuthGuard } from './views/login/auth.guard';\r\nimport { ExposedFormComponent } from './views/exposed_form/exposed_form.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'dashboard',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '404',\r\n    component: P404Component,\r\n    data: {\r\n      title: 'Page 404'\r\n    }\r\n  },\r\n  {\r\n    path: '500',\r\n    component: P500Component,\r\n    data: {\r\n      title: 'Page 500'\r\n    }\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    data: {\r\n      title: 'Login Page'\r\n    }\r\n  },\r\n  {\r\n    path: 'enquiry_form',\r\n    component: ExposedFormComponent,\r\n    data: {\r\n      title: 'WEDDING GOLD PURCHASE SCHEME'\r\n    }\r\n  },\r\n  {\r\n    path: '',\r\n    component: DefaultLayoutComponent,\r\n    data: {\r\n      title: 'Home'\r\n    },\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'telecaller',\r\n        loadChildren: () => import('./views/telecaller/telecaller.module').then(m => m.TelecallerModule)\r\n      },\r\n      {\r\n        path: 'manager',\r\n        loadChildren: () => import('./views/manager/manager.module').then(m => m.ManagerModule)\r\n      },\r\n      {\r\n        path: 'kpcaller',\r\n        loadChildren: () => import('./views/kpcaller/kpcaller.module').then(m => m.KpCallerModule)\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./views/dashboard/dashboard.module').then(m => m.DashboardModule)\r\n      }\r\n    ]\r\n  },\r\n  { path: '**', component: P404Component }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { INavData } from '@coreui/angular';\r\n\r\nexport const navItems: INavData[] = [\r\n  {\r\n    name: 'Dashboard',\r\n    url: '/dashboard',\r\n    icon: 'icon-speedometer',\r\n    role: \"\"\r\n  },\r\n  {\r\n    name: 'Agents',\r\n    url: '/telecaller/agents',\r\n    icon: 'icon-note',\r\n    role: \"TELE_CALLER\"\r\n  },\r\n  {\r\n    name: 'Customers',\r\n    url: '/telecaller/customers',\r\n    icon: 'icon-basket-loaded',\r\n    role: \"TELE_CALLER\"\r\n  },\r\n  {\r\n    name: 'Verification',\r\n    url: '/kpcaller/verification',\r\n    icon: 'icon-cursor',\r\n    role: \"KP_CALLER\"\r\n  },\r\n  {\r\n    name: 'Assigned',\r\n    url: '/kpcaller/assigned',\r\n    icon: 'icon-cursor',\r\n    role: \"KP_CALLER\"\r\n  },\r\n  {\r\n    name: 'DNF',\r\n    url: '/kpcaller/dnf',\r\n    icon: 'icon-cursor',\r\n    role: \"KP_CALLER\"\r\n  },\r\n  {\r\n    name: 'Verified List',\r\n    url: '/manager/verified_list',\r\n    icon: 'icon-phone',\r\n    role: \"MANAGER\"\r\n  },\r\n  {\r\n    name: 'Agents List',\r\n    url: '/manager/agents',\r\n    icon: 'icon-phone',\r\n    role: \"MANAGER\"\r\n  },\r\n  {\r\n    name: 'Customers',\r\n    url: '/manager/customers',\r\n    icon: 'icon-phone',\r\n    role: \"MANAGER\"\r\n  },\r\n  {\r\n    name: 'Enquiries',\r\n    url: '/manager/enquiries',\r\n    icon: 'icon-phone',\r\n    role: \"MANAGER\"\r\n  },\r\n];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: '500.component.html'\r\n})\r\nexport class P500Component {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","export default \"<app-header [navbarBrandRouterLink]=\\\"['/dashboard']\\\" [fixed]=\\\"true\\\"\\r\\n  [navbarBrandFull]=\\\"{src: 'assets/img/brand/logo.png',width:200,alt: 'CartIntoCar Logo'}\\\"\\r\\n  [navbarBrandMinimized]=\\\"{src: 'assets/img/brand/sygnet.svg', width: 30, height: 30, alt: 'CartIntoCar Logo'}\\\"\\r\\n  [sidebarToggler]=\\\"'lg'\\\">\\r\\n  <ul class=\\\"nav navbar-nav ml-auto\\\">\\r\\n    {{userName}}\\r\\n    <li class=\\\"nav-item dropdown\\\" dropdown placement=\\\"bottom right\\\">\\r\\n      <a class=\\\"nav-link\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"\\r\\n        dropdownToggle (click)=\\\"false\\\">\\r\\n        <img src=\\\"assets/img/avatars/6.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\" />\\r\\n      </a>\\r\\n      <div class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu aria-labelledby=\\\"simple-dropdown\\\">\\r\\n        <div class=\\\"dropdown-header text-center\\\"><strong>Settings</strong></div>\\r\\n        <a class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user\\\"></i>{{userName}}</a>\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-lock\\\"></i> Logout</a>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n</app-header>\\r\\n<div class=\\\"app-body\\\">\\r\\n  <app-sidebar #appSidebar [fixed]=\\\"true\\\" [display]=\\\"'lg'\\\" [minimized]=\\\"sidebarMinimized\\\"\\r\\n    (minimizedChange)=\\\"toggleMinimize($event)\\\">\\r\\n    <app-sidebar-nav [navItems]=\\\"navItems\\\"></app-sidebar-nav>\\r\\n    <app-sidebar-minimizer></app-sidebar-minimizer>\\r\\n  </app-sidebar>\\r\\n  <!-- Main content -->\\r\\n  <main class=\\\"main\\\">\\r\\n    <cui-breadcrumb>\\r\\n    </cui-breadcrumb>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\\r\\n<app-footer>\\r\\n  <span><a>Jewel Telecaller</a> &copy; 2021 jewel.</span>\\r\\n  <!-- <span class=\\\"ml-auto\\\">Powered by <a href=\\\"https://www.upsquad.in\\\">upsquad</a></span> -->\\r\\n</app-footer>\";","export default \"<div class=\\\"app flex-row align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <h1 class=\\\"float-left display-3 mr-4\\\">404</h1>\\r\\n          <h4 class=\\\"pt-3\\\">Oops! You're lost.</h4>\\r\\n          <p class=\\\"text-muted\\\">The page you are looking for was not found.</p>\\r\\n        </div>\\r\\n        <div class=\\\"input-prepend input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\r\\n          <span class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- <div class=\\\"app-body bg-image\\\">\\r\\n  <main class=\\\"main d-flex align-items-center\\\" style=\\\"background-color: rgba(0, 0, 0, 0.8);\\\">\\r\\n    <div class=\\\"login-box\\\">\\r\\n      <div class=\\\"card p-4\\\" style=\\\"width: fit-content;\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <form>\\r\\n            <h1>Login</h1>\\r\\n            <p class=\\\"text-muted\\\">Welcome back! Please log in to your account</p>\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\r\\n              </div>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" autocomplete=\\\"username\\\" required>\\r\\n            </div>\\r\\n            <div class=\\\"input-group mb-4\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\r\\n              </div>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" autocomplete=\\\"current-password\\\"\\r\\n                required>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary px-4\\\">Login</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n</div> -->\\r\\n<!-- <div class=\\\"bg-image\\\"> -->\\r\\n<div class=\\\"d-md-flex h-md-100 align-items-center\\\">\\r\\n  <div class=\\\"col-md-6 p-0 bg-black h-md-100 login-screen\\\">\\r\\n    <div class=\\\"text-white d-md-flex align-items-center h-100 text-center justify-content-center\\\">\\r\\n      <div class=\\\"container-fluid bg-image\\\" style=\\\" height: 100vh \\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-6 p-0 bg-white h-md-100\\\">\\r\\n    <div class=\\\"d-md-flex align-items-center h-md-100 justify-content-center\\\">\\r\\n      <div class=\\\"container-fluid fallback-image\\\" style=\\\" height: 100vh \\\">\\r\\n        <form class=\\\"login-box\\\" #usForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <h1>JEWEL</h1>\\r\\n          <p class=\\\"text-muted\\\">Welcome back! Please log in to your account</p>\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" id=\\\"login\\\" maxlength=\\\"80\\\" size=\\\"30\\\" ngModel\\r\\n              value=\\\"\\\" name=\\\"identifier\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"input-group mb-4\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\r\\n            </div>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" size=\\\"30\\\" ngModel\\r\\n              name=\\\"password\\\" value=\\\"\\\" required>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"row\\\"> -->\\r\\n          <!-- <div class=\\\"col-6\\\"> -->\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-lg px-4\\\" style=\\\"background-color: #43425D; color: white;\\\">\\r\\n            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\">\\r\\n            </span>Login\\r\\n          </button>\\r\\n          <!-- </div> -->\\r\\n          <!-- </div> -->\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- </div> -->\";","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const currentUser: any = this.authenticationService.currentUserValue;\r\n    if (currentUser) {\r\n      console.log(currentUser, 'authguard', route.data.roles);\r\n      // check if route is restricted by role\r\n      if (\r\n        route.data.roles &&\r\n        route.data.roles.indexOf(currentUser.user.UserType) === -1\r\n      ) {\r\n        // role not authorised so redirect to home page\r\n        this.router.navigate(['/500']);\r\n        console.log('authguard failed');\r\n        return false;\r\n      }\r\n      // authorised so return true\r\n      return true;\r\n    }\r\n    console.log(currentUser, 'authguard il kerilla', route.data.roles);\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n    return false;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n  useJit: true,\r\n  preserveWhitespaces: true\r\n})\r\n  .catch(err => console.log(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}